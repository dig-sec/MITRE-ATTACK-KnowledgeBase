{
    "id": "T1564.003",
    "name": "Hidden Window",
    "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](T1059.001), Jscript, and [Visual Basic](T1059.005) to make windows hidden. One example of this is `powershell.exe -WindowStyle Hidden`. (Citation: PowerShell About 2019)\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be `apple.awt.UIElement`, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",
    "platforms": "macOS, Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Process: Process Creation, Command: Command Execution, Script: Script Execution, File: File Modification",
    "detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the `apple.awt.UIElement` or any other suspicious plist tag in plist files and flag them.",
    "url": "https://attack.mitre.org/techniques/T1564/003",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "02a470d8-493e-41d9-8367-622460dddbe8",
                    "313fbb0a-a341-4682-848d-6d6f8c4fab7c",
                    "c260b6db-48ba-4b4a-a76f-2f67644e99d2",
                    "cbb66055-0325-4111-aca0-40547b6ad5b0",
                    "54dd4ef7-f7b2-418e-a191-5def4fbb0033"
                ],
                "lookup_results": [
                    {
                        "uuid": "02a470d8-493e-41d9-8367-622460dddbe8",
                        "lookup_data": {
                            "description": "Ransomware Attack Irish on Health Sector",
                            "link": "http://www.botvrij.eu/data/feed-osint/02a470d8-493e-41d9-8367-622460dddbe8.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1621676993",
                            "uuid": "02a470d8-493e-41d9-8367-622460dddbe8",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "313fbb0a-a341-4682-848d-6d6f8c4fab7c",
                        "lookup_data": {
                            "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users.\nIn some cases, windows that would typically be displayed when an application carries out an operation can be hidden\n",
                            "raw": "author: frack113, Tim Shelton (fp AWS)\ndate: 2021/10/20\ndescription: 'Adversaries may use hidden windows to conceal malicious activity from\n  the plain sight of users.\n\n  In some cases, windows that would typically be displayed when an application carries\n  out an operation can be hidden\n\n  '\ndetection:\n  condition: selection and not filter\n  filter:\n    ScriptBlockText|contains|all:\n    - :\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\\n    - $PSScriptRoot\\Module\\WorkspaceScriptModule\\WorkspaceScriptModule\n  selection:\n    ScriptBlockText|contains|all:\n    - powershell\n    - WindowStyle\n    - Hidden\nfalsepositives:\n- Unknown\nid: 313fbb0a-a341-4682-848d-6d6f8c4fab7c\nlevel: medium\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nmodified: 2023/01/03\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.003/T1564.003.md\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1564.003\ntitle: Suspicious PowerShell WindowStyle Option\n",
                            "sigma:id": "313fbb0a-a341-4682-848d-6d6f8c4fab7c",
                            "title": "Suspicious PowerShell WindowStyle Option",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c260b6db-48ba-4b4a-a76f-2f67644e99d2",
                        "lookup_data": {
                            "description": "Detects suspicious command lines used in Covenant luanchers",
                            "raw": "author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community\ndate: 2020/06/04\ndescription: Detects suspicious command lines used in Covenant luanchers\ndetection:\n  condition: selection or selection2\n  selection:\n    CommandLine|contains:\n    - -Command\n    - -EncodedCommand\n    CommandLine|contains|all:\n    - -Sta\n    - -Nop\n    - -Window\n    - Hidden\n  selection2:\n    CommandLine|contains:\n    - 'sv o (New-Object IO.MemorySteam);sv d '\n    - mshta file.hta\n    - GruntHTTP\n    - -EncodedCommand cwB2ACAAbwAgA\nid: c260b6db-48ba-4b4a-a76f-2f67644e99d2\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://posts.specterops.io/covenant-v0-5-eee0507b85ba\nstatus: test\ntags:\n- attack.execution\n- attack.defense_evasion\n- attack.t1059.001\n- attack.t1564.003\ntitle: Covenant Launcher Indicators\n",
                            "sigma:id": "c260b6db-48ba-4b4a-a76f-2f67644e99d2",
                            "title": "Covenant Launcher Indicators",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cbb66055-0325-4111-aca0-40547b6ad5b0",
                        "lookup_data": {
                            "mitre-attack-id": "T1564.003",
                            "mitre-cti:description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",
                            "mitre-cti:name": "Hidden Window",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['macOS', 'Windows', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Travis Smith, Tripwire'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0', 'type': 'attack-pattern', 'created': '2020-03-13T20:26:49.433Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1564.003', 'url': 'https://attack.mitre.org/techniques/T1564/003'}, {'source_name': 'PowerShell About 2019', 'url': 'https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1', 'description': 'Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.'}, {'url': 'https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/', 'description': 'Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.', 'source_name': 'Antiquated Mac Malware'}], 'modified': '2022-03-15T21:09:43.489Z', 'name': 'Hidden Window', 'description': \"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \\n\\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\\n\\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\", 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': \"Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.\", 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Process: Process Creation', 'Script: Script Execution', 'File: File Modification', 'Command: Command Execution'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "54dd4ef7-f7b2-418e-a191-5def4fbb0033",
                        "lookup_data": {
                            "description": "Turla: A Galaxy of Opportunity",
                            "link": "http://www.botvrij.eu/data/feed-osint/54dd4ef7-f7b2-418e-a191-5def4fbb0033.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1673286950",
                            "uuid": "54dd4ef7-f7b2-418e-a191-5def4fbb0033",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1564.003",
                "display_name": "Hide Artifacts: Hidden Window",
                "atomic_tests": [
                    {
                        "name": "Hidden Window",
                        "auto_generated_guid": "f151ee37-9e2b-47e6-80e4-550b9f999b7a",
                        "description": "Launch PowerShell with the \"-WindowStyle Hidden\" argument to conceal PowerShell windows by setting the WindowStyle parameter to hidden.\nUpon execution a hidden PowerShell window will launch calc.exe\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "powershell_command": {
                                "description": "Command to launch calc.exe from a hidden PowerShell Window",
                                "type": "string",
                                "default": "powershell.exe -WindowStyle hidden calc.exe"
                            }
                        },
                        "executor": {
                            "command": "Start-Process #{powershell_command}\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Headless Browser Accessing Mockbin",
                        "auto_generated_guid": "0ad9ab92-c48c-4f08-9b20-9633277c4646",
                        "description": "The following Atomic Red Team test leverages the Chrome headless browser to access a mockbin site. Create your own Mockbin.org site and replace the BIN in the inputs.\nThe default Mockbin ID forwards to google.com and you may view the details here https://mockbin.org/bin/f6b9a876-a826-4ac0-83b8-639d6ad516ec/view.\nReference: https://cert.gov.ua/article/5702579\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "bin_id": {
                                "description": "Mockbin.org BIN ID",
                                "type": "string",
                                "default": "f6b9a876-a826-4ac0-83b8-639d6ad516ec"
                            },
                            "browser": {
                                "description": "Browser to use (msedge, chrome, firefox)",
                                "type": "string",
                                "default": "chrome"
                            }
                        },
                        "executor": {
                            "command": "start \"\" #{browser} --headless --disable-gpu https://mockbin.org/bin/#{bin_id}\n",
                            "cleanup_command": "taskkill /im #{browser} /f\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Hidden Window-Conhost Execution",
                        "auto_generated_guid": "5510d22f-2595-4911-8456-4d630c978616",
                        "description": "Launch conhost.exe in \"headless\" mode, it means that no visible window will pop up on the victim's machine. \nThis could be a sign of \"conhost\" usage as a LOLBIN or potential process injection activity.\nconhost.exe can be used as proxy the execution of arbitrary commands\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "conhost.exe --headless calc.exe\n",
                            "cleanup_command": "Stop-Process -Name calc*\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:54:33"
}