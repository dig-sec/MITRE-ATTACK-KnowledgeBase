{
    "id": "T1569.002",
    "name": "Service Execution",
    "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (`services.exe`) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as `sc.exe` and [Net](S0039).\n[PsExec](S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](S0029) and `sc.exe` can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](T1543.003) during service persistence or privilege escalation.",
    "platforms": "Windows",
    "kill_chain_phases": "Execution",
    "data_sources": "Command: Command Execution, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",
    "detection": "Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](S0029).",
    "url": "https://attack.mitre.org/techniques/T1569/002",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "df5ff0a5-f83f-4a5b-bba1-3e6a3f6f6ea2",
                    "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
                    "259e5a6a-b8d2-4c38-86e2-26c5e651361d",
                    "10018e73-06ec-46ec-8107-9172f1e04ff2",
                    "0319b483-5973-4932-91ea-5a44c2975b24",
                    "771d1eb5-9587-4568-95fb-9ec44153a012",
                    "095c4227-2a9e-45da-9268-cec186be53b1",
                    "b640c0b8-87f8-4daa-aef8-95a24261dd1d",
                    "46deb5e1-28c9-4905-b2df-51cdcc9e6073",
                    "d08a2711-ee8b-4323-bdec-b7d85e892b31",
                    "42c575ea-e41e-41f1-b248-8093c3e82a28",
                    "2cfe636e-317a-4bee-9f2c-1066d9f54d1a",
                    "fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba",
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "d9047477-0359-48c9-b8c7-792cedcdc9c4",
                    "1a31b18a-f00c-4061-9900-f735b96c99fc",
                    "a2e5019d-a658-4c6a-92bf-7197b54e2cae",
                    "c8b00925-926c-47e3-beea-298fd563728e",
                    "f6451de4-df0a-41fa-8d72-b39f54a08db5",
                    "d26ce60c-2151-403c-9a42-49420d87b5e4",
                    "4a5f5a5e-ac01-474b-9b4e-d61298c9df1d",
                    "d7a95147-145f-4678-b85d-d1ff4a3bb3f6",
                    "de7ce410-b3fb-4e8a-b38c-3b999e2c3420",
                    "31c51af6-e7aa-4da7-84d4-8f32cc580af2",
                    "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                    "41504465-5e3a-4a5b-a5b4-2a0baadd4463",
                    "4e2ed651-1906-4a59-a78a-18220fca1b22",
                    "97b9ce1e-c5ab-11ea-87d0-0242ac130003",
                    "bf74135c-18e8-4a72-a926-0e4f47888c19",
                    "f3f3a972-f982-40ad-b63c-bca6afdfad7c",
                    "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
                    "7b0666ad-3e38-4e3d-9bab-78b06de85f7b",
                    "3ede524d-21cc-472d-a3ce-d21b568d8db7",
                    "9e77ed63-2ecf-4c7b-b09d-640834882028",
                    "4976aa50-8f41-45c6-8b15-ab3fc10e79ed",
                    "2a926e6a-4b81-4011-8a96-e36cc8c04302",
                    "f0d1feba-4344-4ca9-8121-a6c97bd6df52",
                    "5bb68627-3198-40ca-b458-49f973db8752",
                    "52a85084-6989-40c3-8f32-091e12e13f09",
                    "a7cd7306-df8b-4398-b711-6f3e4935cf16",
                    "c4ff1eac-84ad-44dd-a6fb-d56a92fc43a9",
                    "f1951e8a-500e-4a26-8803-76d95c4554b4",
                    "5a105d34-05fc-401e-8553-272b45c1522d",
                    "2a072a96-a086-49fa-bcb5-15cc5a619093",
                    "61a7697c-cb79-42a8-a2ff-5f0cdfae0130",
                    "b5281f31-f9cc-4d0d-95d0-45b91c45b487",
                    "cb062102-587e-4414-8efa-dbe3c7bf19c6",
                    "6fb63b40-e02a-403e-9ffd-3bcc1d749442",
                    "93199800-b52a-4dec-b762-75212c196542"
                ],
                "lookup_results": [
                    {
                        "uuid": "df5ff0a5-f83f-4a5b-bba1-3e6a3f6f6ea2",
                        "lookup_data": {
                            "description": "Detects well-known credential dumping tools execution via service execution events",
                            "raw": "author: Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy,\n  oscd.community\ndate: 2017/03/05\ndescription: Detects well-known credential dumping tools execution via service execution\n  events\ndetection:\n  condition: selection\n  selection:\n    ImageLoaded|contains:\n    - fgexec\n    - dumpsvc\n    - cachedump\n    - mimidrv\n    - gsecdump\n    - servpw\n    - pwdump\nfalsepositives:\n- Legitimate Administrator using credential dumping tool for password recovery\nid: df5ff0a5-f83f-4a5b-bba1-3e6a3f6f6ea2\nlevel: critical\nlogsource:\n  category: driver_load\n  product: windows\nmodified: 2022/12/25\nreferences:\n- https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\nrelated:\n- id: 4976aa50-8f41-45c6-8b15-ab3fc10e79ed\n  type: derived\nstatus: test\ntags:\n- attack.credential_access\n- attack.execution\n- attack.t1003.001\n- attack.t1003.002\n- attack.t1003.004\n- attack.t1003.005\n- attack.t1003.006\n- attack.t1569.002\n- attack.s0005\ntitle: Credential Dumping Tools Service Execution\n",
                            "sigma:id": "df5ff0a5-f83f-4a5b-bba1-3e6a3f6f6ea2",
                            "title": "Credential Dumping Tools Service Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
                        "lookup_data": {
                            "description": "Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and Impacket psexec.py by triggering on specific service installation",
                            "raw": "action: global\nauthor: Bartlomiej Czyz, Relativity\ndate: 2021/01/21\ndescription: Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and\n  Impacket psexec.py by triggering on specific service installation\ndetection:\n  condition: selection and selection_1 and not filter\n  filter:\n    ServiceName: PSEXESVC\n  selection_1:\n    ServiceFileName|re: ^.*\\\\[a-zA-Z]{8}\\.exe$\n    ServiceName|re: (^[a-zA-Z]{4}$)|(^[a-zA-Z]{8}$)|(^[a-zA-Z]{16}$)\nfalsepositives:\n- Highly unlikely\nfields:\n- ComputerName\n- SubjectDomainName\n- SubjectUserName\n- ServiceName\n- ServiceFileName\nid: 1a17ce75-ff0d-4f02-9709-2b7bb5618cf0\nlevel: high\nreferences:\n- https://bczyz1.github.io/2021/01/30/psexec.html\ntags:\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1570\n- attack.execution\n- attack.t1569.002\ntitle: Metasploit Or Impacket Service Installation Via SMB PsExec\n",
                            "sigma:id": "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
                            "title": "Metasploit Or Impacket Service Installation Via SMB PsExec",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "259e5a6a-b8d2-4c38-86e2-26c5e651361d",
                        "lookup_data": {
                            "description": "Detects default PsExec service filename which indicates PsExec service installation and execution",
                            "raw": "author: Thomas Patzke\ndate: 2017/06/12\ndescription: Detects default PsExec service filename which indicates PsExec service\n  installation and execution\ndetection:\n  condition: selection\n  selection:\n    TargetFilename|endswith: \\PSEXESVC.exe\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- ServiceName\n- ServiceFileName\n- TargetFilename\n- PipeName\nid: 259e5a6a-b8d2-4c38-86e2-26c5e651361d\nlevel: low\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/10/26\nreferences:\n- https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n- https://jpcertcc.github.io/ToolAnalysisResultSheet\nrelated:\n- id: 42c575ea-e41e-41f1-b248-8093c3e82a28\n  type: derived\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: PsExec Service File Creation\n",
                            "sigma:id": "259e5a6a-b8d2-4c38-86e2-26c5e651361d",
                            "title": "PsExec Service File Creation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "10018e73-06ec-46ec-8107-9172f1e04ff2",
                        "lookup_data": {
                            "description": "Detects remote RPC calls to possibly abuse remote encryption service via MS-EFSR",
                            "raw": "author: Sagie Dulce, Dekel Paz\ndate: 2022/01/01\ndescription: Detects remote RPC calls to possibly abuse remote encryption service\n  via MS-EFSR\ndetection:\n  condition: selection\n  selection:\n    EventID: 3\n    EventLog: RPCFW\n    InterfaceUuid: 367abb81-9844-35f1-ad32-98f038001003\nfalsepositives:\n- Administrative tasks on remote services\nid: 10018e73-06ec-46ec-8107-9172f1e04ff2\nlevel: high\nlogsource:\n  category: application\n  definition: 'Requirements: install and apply the RPC Firewall to all processes with\n    \"audit:true action:block uuid:367abb81-9844-35f1-ad32-98f038001003'\n  product: rpc_firewall\nmodified: 2022/01/01\nreferences:\n- https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-srvs/accf23b0-0f57-441c-9185-43041f1b0ee9\n- https://github.com/jsecurity101/MSRPC-to-ATTACK/blob/ddd4608fe8684fcf2fcf9b48c5f0b3c28097f8a3/documents/MS-SCMR.md\n- https://github.com/zeronetworks/rpcfirewall\n- https://zeronetworks.com/blog/stopping_lateral_movement_via_the_rpc_firewall/\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1569.002\ntitle: Remote Server Service Abuse for Lateral Movement\n",
                            "sigma:id": "10018e73-06ec-46ec-8107-9172f1e04ff2",
                            "title": "Remote Server Service Abuse for Lateral Movement",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0319b483-5973-4932-91ea-5a44c2975b24",
                        "lookup_data": {
                            "description": "Conti Ransomware",
                            "link": "http://www.botvrij.eu/data/feed-osint/0319b483-5973-4932-91ea-5a44c2975b24.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1621181463",
                            "uuid": "0319b483-5973-4932-91ea-5a44c2975b24",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "771d1eb5-9587-4568-95fb-9ec44153a012",
                        "lookup_data": {
                            "description": "Detects the use of NSudo tool for command execution",
                            "raw": "author: Florian Roth (Nextron Systems), Nasreddine Bencherchali\ndate: 2022/01/24\ndescription: Detects the use of NSudo tool for command execution\ndetection:\n  condition: all of selection*\n  selection_cli:\n    CommandLine|contains:\n    - '-U:S '\n    - '-U:T '\n    - '-U:E '\n    - '-P:E '\n    - '-M:S '\n    - '-M:H '\n    - '-U=S '\n    - '-U=T '\n    - '-U=E '\n    - '-P=E '\n    - '-M=S '\n    - '-M=H '\n    - -ShowWindowMode:Hide\n  selection_img:\n  - Image|endswith:\n    - \\NSudo.exe\n    - \\NSudoLC.exe\n    - \\NSudoLG.exe\n  - OriginalFileName:\n    - NSudo.exe\n    - NSudoLC.exe\n    - NSudoLG.exe\nfalsepositives:\n- Legitimate use by administrators\nfields:\n- CommandLine\n- ParentCommandLine\nid: 771d1eb5-9587-4568-95fb-9ec44153a012\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/18\nreferences:\n- https://nsudo.m2team.org/en-us/\n- https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: NSudo Tool Execution\n",
                            "sigma:id": "771d1eb5-9587-4568-95fb-9ec44153a012",
                            "title": "NSudo Tool Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "095c4227-2a9e-45da-9268-cec186be53b1",
                        "lookup_data": {
                            "description": "Back in Black: Unlocking a LockBit 3.0 Ransomware Attack",
                            "link": "http://www.botvrij.eu/data/feed-osint/095c4227-2a9e-45da-9268-cec186be53b1.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1661104992",
                            "uuid": "095c4227-2a9e-45da-9268-cec186be53b1",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b640c0b8-87f8-4daa-aef8-95a24261dd1d",
                        "lookup_data": {
                            "description": "Windows DCE-RPC functions which indicate an execution techniques on the remote system. All credit for the Zeek mapping of the suspicious endpoint/operation field goes to MITRE",
                            "raw": "author: '@neu5ron, SOC Prime'\ndate: 2020/03/19\ndescription: Windows DCE-RPC functions which indicate an execution techniques on the\n  remote system. All credit for the Zeek mapping of the suspicious endpoint/operation\n  field goes to MITRE\ndetection:\n  condition: 1 of op*\n  op1:\n    endpoint: JobAdd\n    operation: atsvc\n  op10:\n    endpoint: svcctl\n    operation: StartServiceW\n  op2:\n    endpoint: ITaskSchedulerService\n    operation: SchRpcEnableTask\n  op3:\n    endpoint: ITaskSchedulerService\n    operation: SchRpcRegisterTask\n  op4:\n    endpoint: ITaskSchedulerService\n    operation: SchRpcRun\n  op5:\n    endpoint: IWbemServices\n    operation: ExecMethod\n  op6:\n    endpoint: IWbemServices\n    operation: ExecMethodAsync\n  op7:\n    endpoint: svcctl\n    operation: CreateServiceA\n  op8:\n    endpoint: svcctl\n    operation: CreateServiceW\n  op9:\n    endpoint: svcctl\n    operation: StartServiceA\nfalsepositives:\n- Windows administrator tasks or troubleshooting\n- Windows management scripts or software\nid: b640c0b8-87f8-4daa-aef8-95a24261dd1d\nlevel: medium\nlogsource:\n  product: zeek\n  service: dce_rpc\nmodified: 2021/11/27\nreferences:\n- https://github.com/mitre-attack/bzar#indicators-for-attck-execution\nstatus: test\ntags:\n- attack.execution\n- attack.t1047\n- attack.t1053.002\n- attack.t1569.002\ntitle: MITRE BZAR Indicators for Execution\n",
                            "sigma:id": "b640c0b8-87f8-4daa-aef8-95a24261dd1d",
                            "title": "MITRE BZAR Indicators for Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "46deb5e1-28c9-4905-b2df-51cdcc9e6073",
                        "lookup_data": {
                            "description": "Detects powershell script installed as a Service",
                            "raw": "author: oscd.community, Natalia Shornikova\ndate: 2020/10/06\ndescription: Detects powershell script installed as a Service\ndetection:\n  condition: selection\n  selection:\n    ImageLoaded|contains:\n    - powershell\n    - pwsh\nfalsepositives:\n- Unknown\nid: 46deb5e1-28c9-4905-b2df-51cdcc9e6073\nlevel: high\nlogsource:\n  category: driver_load\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse\nrelated:\n- id: a2e5019d-a658-4c6a-92bf-7197b54e2cae\n  type: derived\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PowerShell Scripts Run by a Services\n",
                            "sigma:id": "46deb5e1-28c9-4905-b2df-51cdcc9e6073",
                            "title": "PowerShell Scripts Run by a Services",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d08a2711-ee8b-4323-bdec-b7d85e892b31",
                        "lookup_data": {
                            "description": "Detects the use of the lesser known remote execution tool named CsExec (a PsExec alternative)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/08/22\ndescription: Detects the use of the lesser known remote execution tool named CsExec\n  (a PsExec alternative)\ndetection:\n  condition: 1 of selection*\n  selection:\n    Image|endswith: \\csexec.exe\n  selection_pe:\n    Description: csexec\nfalsepositives:\n- Unknown\nid: d08a2711-ee8b-4323-bdec-b7d85e892b31\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://github.com/malcomvetter/CSExec\n- https://www.microsoft.com/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/\nstatus: experimental\ntags:\n- attack.resource_development\n- attack.t1587.001\n- attack.execution\n- attack.t1569.002\ntitle: CsExec Remote Execution Tool Usage\n",
                            "sigma:id": "d08a2711-ee8b-4323-bdec-b7d85e892b31",
                            "title": "CsExec Remote Execution Tool Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "42c575ea-e41e-41f1-b248-8093c3e82a28",
                        "lookup_data": {
                            "description": "Detects PsExec service installation and execution events (service and Sysmon)",
                            "raw": "author: Thomas Patzke\ndate: 2017/06/12\ndescription: Detects PsExec service installation and execution events (service and\n  Sysmon)\ndetection:\n  condition: 1 of service_*\n  service_execution:\n    EventID: 7036\n    ServiceName: PSEXESVC\n  service_installation:\n    EventID: 7045\n    ImagePath|endswith: \\PSEXESVC.exe\n    Provider_Name: Service Control Manager\n    ServiceName: PSEXESVC\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- ServiceName\n- ServiceFileName\n- TargetFilename\n- PipeName\nid: 42c575ea-e41e-41f1-b248-8093c3e82a28\nlevel: low\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/10/26\nreferences:\n- https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n- https://jpcertcc.github.io/ToolAnalysisResultSheet\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: PsExec Service Installation\n",
                            "sigma:id": "42c575ea-e41e-41f1-b248-8093c3e82a28",
                            "title": "PsExec Service Installation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2cfe636e-317a-4bee-9f2c-1066d9f54d1a",
                        "lookup_data": {
                            "description": "Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity",
                            "raw": "author: Florian Roth, Daniil Yugoslavskiy, oscd.community (update)\ndate: 2017/03/27\ndescription: Detects known malicious service installs that only appear in cases of\n  lateral movement, credential dumping and other suspicious activity\ndetection:\n  condition: selection and 1 of malsvc_*\n  malsvc_paexec:\n    ServiceFileName|contains: \\PAExec\n  malsvc_persistence:\n    ServiceFileName|contains: net user\n  malsvc_wannacry:\n    ServiceName: mssecsvc2.0\n  selection:\n    EventID: 7045\nfalsepositives:\n- Penetration testing\nid: 2cfe636e-317a-4bee-9f2c-1066d9f54d1a\nlevel: critical\nlogsource:\n  product: windows\n  service: system\nmodified: 2021/05/27\ntags:\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1003\n- attack.t1035\n- attack.t1050\n- car.2013-09-005\n- attack.t1543.003\n- attack.t1569.002\ntitle: Malicious Service Installations\n",
                            "sigma:id": "2cfe636e-317a-4bee-9f2c-1066d9f54d1a",
                            "title": "Malicious Service Installations",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba",
                        "lookup_data": {
                            "description": "Detects PsExec service execution via default service image name",
                            "raw": "author: Thomas Patzke\ndate: 2017/06/12\ndescription: Detects PsExec service execution via default service image name\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\PSEXESVC.exe\n    User|contains:\n    - AUTHORI\n    - AUTORI\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- ServiceName\n- ServiceFileName\n- TargetFilename\n- PipeName\nid: fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/05/27\nreferences:\n- https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n- https://jpcertcc.github.io/ToolAnalysisResultSheet\nrelated:\n- id: 42c575ea-e41e-41f1-b248-8093c3e82a28\n  type: derived\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: PsExec Tool Execution\n",
                            "sigma:id": "fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba",
                            "title": "PsExec Tool Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d9047477-0359-48c9-b8c7-792cedcdc9c4",
                        "lookup_data": {
                            "description": "Detects the use of NirCmd tool for command execution as SYSTEM user",
                            "raw": "author: Florian Roth (Nextron Systems), Nasreddine Bencherchali @nas_bench\ndate: 2022/01/24\ndescription: Detects the use of NirCmd tool for command execution as SYSTEM user\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: ' runassystem '\nfalsepositives:\n- Legitimate use by administrators\nfields:\n- CommandLine\n- ParentCommandLine\nid: d9047477-0359-48c9-b8c7-792cedcdc9c4\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.nirsoft.net/utils/nircmd.html\n- https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/\n- https://www.nirsoft.net/utils/nircmd2.html#using\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: NirCmd Tool Execution As LOCAL SYSTEM\n",
                            "sigma:id": "d9047477-0359-48c9-b8c7-792cedcdc9c4",
                            "title": "NirCmd Tool Execution As LOCAL SYSTEM",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1a31b18a-f00c-4061-9900-f735b96c99fc",
                        "lookup_data": {
                            "description": "Detects service installation of different remote access tools software. These software are often abused by threat actors to perform",
                            "raw": "author: Connor Martin, Nasreddine Bencherchali\ndate: 2022/12/23\ndescription: Detects service installation of different remote access tools software.\n  These software are often abused by threat actors to perform\ndetection:\n  condition: selection\n  selection:\n    EventID:\n    - 7045\n    - 7036\n    Provider_Name: Service Control Manager\n    ServiceName|contains:\n    - SSUService\n    - SplashtopRemoteService\n    - Atera\n    - LogMeIn\n    - LMIGuardianSvc\n    - TeamViewer\n    - RPCService\n    - RPCPerformanceService\n    - BASupportExpressStandaloneService\n    - BASupportExpressSrvcUpdater\n    - GoToMyPC\n    - monblanking\n    - RManService\n    - GoToAssist\n    - AmmyyAdmin\n    - vncserver\n    - Parsec\n    - chromoting\n    - Zoho\n    - jumpcloud\nfalsepositives:\n- Unknown\nid: 1a31b18a-f00c-4061-9900-f735b96c99fc\nlevel: medium\nlogsource:\n  product: windows\n  service: system\nreferences:\n- https://redcanary.com/blog/misbehaving-rats/\nrelated:\n- id: c8b00925-926c-47e3-beea-298fd563728e\n  type: similar\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1543.003\n- attack.t1569.002\ntitle: Remote Access Tool Services Have Been Installed - System\n",
                            "sigma:id": "1a31b18a-f00c-4061-9900-f735b96c99fc",
                            "title": "Remote Access Tool Services Have Been Installed - System",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a2e5019d-a658-4c6a-92bf-7197b54e2cae",
                        "lookup_data": {
                            "description": "Detects powershell script installed as a Service",
                            "raw": "author: oscd.community, Natalia Shornikova\ndate: 2020/10/06\ndescription: Detects powershell script installed as a Service\ndetection:\n  condition: selection\n  selection:\n    EventID: 7045\n    ImagePath|contains:\n    - powershell\n    - pwsh\n    Provider_Name: Service Control Manager\nfalsepositives:\n- Unknown\nid: a2e5019d-a658-4c6a-92bf-7197b54e2cae\nlevel: high\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/12/25\nreferences:\n- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PowerShell Scripts Installed as Services\n",
                            "sigma:id": "a2e5019d-a658-4c6a-92bf-7197b54e2cae",
                            "title": "PowerShell Scripts Installed as Services",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c8b00925-926c-47e3-beea-298fd563728e",
                        "lookup_data": {
                            "description": "Detects service installation of different remote access tools software. These software are often abused by threat actors to perform",
                            "raw": "author: Connor Martin, Nasreddine Bencherchali\ndate: 2022/12/23\ndescription: Detects service installation of different remote access tools software.\n  These software are often abused by threat actors to perform\ndetection:\n  condition: selection\n  selection:\n    EventID: 4697\n    ServiceFileName|contains:\n    - SSUService\n    - SplashtopRemoteService\n    - Atera\n    - LogMeIn\n    - LMIGuardianSvc\n    - TeamViewer\n    - RPCService\n    - RPCPerformanceService\n    - BASupportExpressStandaloneService\n    - BASupportExpressSrvcUpdater\n    - GoToMyPC\n    - monblanking\n    - RManService\n    - GoToAssist\n    - AmmyyAdmin\n    - vncserver\n    - Parsec\n    - chromoting\n    - Zoho\n    - jumpcloud\nfalsepositives:\n- Unknown\nid: c8b00925-926c-47e3-beea-298fd563728e\nlevel: medium\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nreferences:\n- https://redcanary.com/blog/misbehaving-rats/\nrelated:\n- id: 1a31b18a-f00c-4061-9900-f735b96c99fc\n  type: similar\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1543.003\n- attack.t1569.002\ntitle: Remote Access Tool Services Have Been Installed - Security\n",
                            "sigma:id": "c8b00925-926c-47e3-beea-298fd563728e",
                            "title": "Remote Access Tool Services Have Been Installed - Security",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f6451de4-df0a-41fa-8d72-b39f54a08db5",
                        "lookup_data": {
                            "description": "Detects PAExec default named pipe",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/10/26\ndescription: Detects PAExec default named pipe\ndetection:\n  condition: selection\n  selection:\n    PipeName|startswith: \\PAExec\nfalsepositives:\n- Unknown\nid: f6451de4-df0a-41fa-8d72-b39f54a08db5\nlevel: medium\nlogsource:\n  category: pipe_created\n  definition: Note that you have to configure logging for Named Pipe Events in Sysmon\n    config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon\n    configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth\n    verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config,\n    https://github.com/olafhartong/sysmon-modular. How to test detection? You can\n    check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575\n  product: windows\nreferences:\n- https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries/blob/efa17a600b43c897b4b7463cc8541daa1987eeb4/Command%20and%20Control/C2-NamedPipe.md\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PAExec Default Named Pipe\n",
                            "sigma:id": "f6451de4-df0a-41fa-8d72-b39f54a08db5",
                            "title": "PAExec Default Named Pipe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d26ce60c-2151-403c-9a42-49420d87b5e4",
                        "lookup_data": {
                            "description": "Detects PsExec service installation and execution events (service and Sysmon)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/03/21\ndescription: Detects PsExec service installation and execution events (service and\n  Sysmon)\ndetection:\n  condition: service and selection\n  selection:\n  - ServiceName|contains:\n    - WCESERVICE\n    - WCE SERVICE\n    - winexesvc\n    - DumpSvc\n    - pwdump\n    - gsecdump\n    - cachedump\n  - ImagePath|contains: bypass\n  service:\n    EventID:\n    - 7045\n    - 7036\n    Provider_Name: Service Control Manager\nfalsepositives:\n- Unknown\nid: d26ce60c-2151-403c-9a42-49420d87b5e4\nlevel: high\nlogsource:\n  product: windows\n  service: system\nreferences:\n- Internal Research\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: Hacktool Service Registration or Execution\n",
                            "sigma:id": "d26ce60c-2151-403c-9a42-49420d87b5e4",
                            "title": "Hacktool Service Registration or Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4a5f5a5e-ac01-474b-9b4e-d61298c9df1d",
                        "lookup_data": {
                            "description": "Detects that a powershell code is written to the registry as a service.",
                            "raw": "author: oscd.community, Natalia Shornikova\ndate: 2020/10/06\ndescription: Detects that a powershell code is written to the registry as a service.\ndetection:\n  condition: selection\n  selection:\n    Details|contains:\n    - powershell\n    - pwsh\n    EventType: SetValue\n    TargetObject|contains: \\Services\\\n    TargetObject|endswith: \\ImagePath\nfalsepositives:\n- Unknown\nid: 4a5f5a5e-ac01-474b-9b4e-d61298c9df1d\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/03/26\nreferences:\n- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PowerShell as a Service in Registry\n",
                            "sigma:id": "4a5f5a5e-ac01-474b-9b4e-d61298c9df1d",
                            "title": "PowerShell as a Service in Registry",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d7a95147-145f-4678-b85d-d1ff4a3bb3f6",
                        "lookup_data": {
                            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
                            "raw": "author: Florian Roth (Nextron Systems), Wojciech Lesicki\ndate: 2021/05/26\ndescription: Detects known malicious service installs that appear in cases in which\n  a Cobalt Strike beacon elevates privileges or lateral movement\ndetection:\n  condition: event_id and 1 of selection*\n  event_id:\n    EventID: 4697\n  selection1:\n    ServiceFileName|contains|all:\n    - ADMIN$\n    - .exe\n  selection2:\n    ServiceFileName|contains|all:\n    - '%COMSPEC%'\n    - start\n    - powershell\n  selection3:\n    ServiceFileName|contains: powershell -nop -w hidden -encodedcommand\n  selection4:\n    ServiceFileName|base64offset|contains: 'IEX (New-Object Net.Webclient).DownloadString(''http://127.0.0.1:'\nfalsepositives:\n- Unknown\nid: d7a95147-145f-4678-b85d-d1ff4a3bb3f6\nlevel: high\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nmodified: 2022/11/27\nreferences:\n- https://www.sans.org/webcasts/119395\n- https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/\n- https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/\nrelated:\n- id: 5a105d34-05fc-401e-8553-272b45c1522d\n  type: derived\nstatus: test\ntags:\n- attack.execution\n- attack.privilege_escalation\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1543.003\n- attack.t1569.002\ntitle: CobaltStrike Service Installations - Security\n",
                            "sigma:id": "d7a95147-145f-4678-b85d-d1ff4a3bb3f6",
                            "title": "CobaltStrike Service Installations - Security",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "de7ce410-b3fb-4e8a-b38c-3b999e2c3420",
                        "lookup_data": {
                            "description": "Detects PAExec service installation",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/10/26\ndescription: Detects PAExec service installation\ndetection:\n  condition: all of selection_*\n  selection_eid:\n    EventID: 7045\n    Provider_Name: Service Control Manager\n  selection_image:\n  - ServiceName|startswith: PAExec-\n  - ImagePath|startswith: C:\\WINDOWS\\PAExec-\nfalsepositives:\n- Unknown\nid: de7ce410-b3fb-4e8a-b38c-3b999e2c3420\nlevel: medium\nlogsource:\n  product: windows\n  service: system\nreferences:\n- https://www.poweradmin.com/paexec/\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PAExec Service Installation\n",
                            "sigma:id": "de7ce410-b3fb-4e8a-b38c-3b999e2c3420",
                            "title": "PAExec Service Installation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "31c51af6-e7aa-4da7-84d4-8f32cc580af2",
                        "lookup_data": {
                            "description": "Detects known malicious service installation that appear in cases in which a Sliver implants execute the PsExec commands",
                            "raw": "author: Florian Roth (Nextron Systems), Nasreddine Bencherchali\ndate: 2022/08/25\ndescription: Detects known malicious service installation that appear in cases in\n  which a Sliver implants execute the PsExec commands\ndetection:\n  condition: selection_id and 1 of selection_service*\n  selection_id:\n    EventID: 7045\n    Provider_Name: Service Control Manager\n  selection_service1:\n    ImagePath|re: ^[a-zA-Z]:\\\\windows\\\\temp\\\\[a-zA-Z0-9]{10}\\.exe\n  selection_service2:\n    ServiceName:\n    - Sliver\n    - Sliver implant\nfalsepositives:\n- Unknown\nid: 31c51af6-e7aa-4da7-84d4-8f32cc580af2\nlevel: high\nlogsource:\n  product: windows\n  service: system\nreferences:\n- https://github.com/BishopFox/sliver/blob/79f2d48fcdfc2bee4713b78d431ea4b27f733f30/client/command/commands.go#L1231\n- https://www.microsoft.com/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/\nstatus: experimental\ntags:\n- attack.execution\n- attack.privilege_escalation\n- attack.t1543.003\n- attack.t1569.002\ntitle: Sliver C2 Default Service Installation\n",
                            "sigma:id": "31c51af6-e7aa-4da7-84d4-8f32cc580af2",
                            "title": "Sliver C2 Default Service Installation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                        "lookup_data": {
                            "description": "Operation â€˜Harvestâ€™: A Deep Dive into a Long-term Campaign",
                            "link": "http://www.botvrij.eu/data/feed-osint/c1bd5026-520b-45bd-9a79-82d38cf96c7b.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633469315",
                            "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "41504465-5e3a-4a5b-a5b4-2a0baadd4463",
                        "lookup_data": {
                            "description": "Detects PsExec default pipe creation where the image executed is located in a suspicious location. Which could indicate that the tool is being used in an attack",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/04\ndescription: Detects PsExec default pipe creation where the image executed is located\n  in a suspicious location. Which could indicate that the tool is being used in an\n  attack\ndetection:\n  condition: selection\n  selection:\n    Image|contains:\n    - C:\\Users\\Public\\\n    - \\Desktop\\\n    - \\Downloads\\\n    - \\AppData\\Local\\Temp\\\n    - C:\\Windows\\Temp\\\n    PipeName: \\PSEXESVC\nfalsepositives:\n- Rare legitimate use of psexec from the locations mentioned above\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- ServiceName\n- ServiceFileName\n- TargetFilename\n- PipeName\nid: 41504465-5e3a-4a5b-a5b4-2a0baadd4463\nlevel: high\nlogsource:\n  category: pipe_created\n  definition: Note that you have to configure logging for Named Pipe Events in Sysmon\n    config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon\n    configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth\n    verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config,\n    https://github.com/olafhartong/sysmon-modular. How to test detection? You can\n    check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575\n  product: windows\nreferences:\n- https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n- https://jpcertcc.github.io/ToolAnalysisResultSheet\nrelated:\n- id: f3f3a972-f982-40ad-b63c-bca6afdfad7c\n  type: derived\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: PsExec Tool Execution From Suspicious Locations - PipeName\n",
                            "sigma:id": "41504465-5e3a-4a5b-a5b4-2a0baadd4463",
                            "title": "PsExec Tool Execution From Suspicious Locations - PipeName",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4e2ed651-1906-4a59-a78a-18220fca1b22",
                        "lookup_data": {
                            "description": "Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity",
                            "raw": "author: Florian Roth (Nextron Systems), Nasreddine Bencherchali\ndate: 2022/01/24\ndescription: Detects the use of NirCmd tool for command execution, which could be\n  the result of legitimate administrative activity\ndetection:\n  combo_exec:\n    CommandLine|contains:\n    - ' exec '\n    - ' exec2 '\n  combo_exec_params:\n    CommandLine|contains:\n    - ' show '\n    - ' hide '\n  condition: 1 of selection* or all of combo_*\n  selection_cmd:\n    CommandLine|contains:\n    - ' execmd '\n    - '.exe script '\n    - '.exe shexec '\n    - ' runinteractive '\n  selection_org:\n  - Image|endswith: \\NirCmd.exe\n  - OriginalFileName: NirCmd.exe\nfalsepositives:\n- Legitimate use by administrators\nfields:\n- CommandLine\n- ParentCommandLine\nid: 4e2ed651-1906-4a59-a78a-18220fca1b22\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/30\nreferences:\n- https://www.nirsoft.net/utils/nircmd.html\n- https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/\n- https://www.nirsoft.net/utils/nircmd2.html#using\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: NirCmd Tool Execution\n",
                            "sigma:id": "4e2ed651-1906-4a59-a78a-18220fca1b22",
                            "title": "NirCmd Tool Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "97b9ce1e-c5ab-11ea-87d0-0242ac130003",
                        "lookup_data": {
                            "description": "Detects blocking of process creations originating from PSExec and WMI commands",
                            "raw": "author: Bhabesh Raj\ndate: 2020/07/14\ndescription: Detects blocking of process creations originating from PSExec and WMI\n  commands\ndetection:\n  condition: selection\n  selection:\n    EventID: 1121\n    ProcessName|endswith:\n    - \\wmiprvse.exe\n    - \\psexesvc.exe\nfalsepositives:\n- Unknown\nid: 97b9ce1e-c5ab-11ea-87d0-0242ac130003\nlevel: high\nlogsource:\n  definition: 'Requirements:Enabled Block process creations originating from PSExec\n    and WMI commands from Attack Surface Reduction (GUID: d1e49aac-8f56-4280-b9ba-993a6d77406c)'\n  product: windows\n  service: windefend\nmodified: 2022/12/25\nreferences:\n- https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/attack-surface-reduction?WT.mc_id=twitter#block-process-creations-originating-from-psexec-and-wmi-commands\n- https://twitter.com/duff22b/status/1280166329660497920\nstatus: test\ntags:\n- attack.execution\n- attack.lateral_movement\n- attack.t1047\n- attack.t1569.002\ntitle: PSExec and WMI Process Creations Block\n",
                            "sigma:id": "97b9ce1e-c5ab-11ea-87d0-0242ac130003",
                            "title": "PSExec and WMI Process Creations Block",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bf74135c-18e8-4a72-a926-0e4f47888c19",
                        "lookup_data": {
                            "description": "Identifies clients that may be performing DNS lookups associated with common currency mining pools.",
                            "raw": "author: Saw Winn Naung, Azure-Sentinel, @neu5ron\ndate: 2021/08/19\ndescription: Identifies clients that may be performing DNS lookups associated with\n  common currency mining pools.\ndetection:\n  condition: selection and not 1 of exclude_*\n  exclude_answers:\n    answers:\n    - 127.0.0.1\n    - 0.0.0.0\n  exclude_rejected:\n    rejected: 'true'\n  selection:\n    query|endswith:\n    - monerohash.com\n    - do-dear.com\n    - xmrminerpro.com\n    - secumine.net\n    - xmrpool.com\n    - minexmr.org\n    - hashanywhere.com\n    - xmrget.com\n    - mininglottery.eu\n    - minergate.com\n    - moriaxmr.com\n    - multipooler.com\n    - moneropools.com\n    - xmrpool.eu\n    - coolmining.club\n    - supportxmr.com\n    - minexmr.com\n    - hashvault.pro\n    - xmrpool.net\n    - crypto-pool.fr\n    - xmr.pt\n    - miner.rocks\n    - walpool.com\n    - herominers.com\n    - gntl.co.uk\n    - semipool.com\n    - coinfoundry.org\n    - cryptoknight.cc\n    - fairhash.org\n    - baikalmine.com\n    - tubepool.xyz\n    - fairpool.xyz\n    - asiapool.io\n    - coinpoolit.webhop.me\n    - nanopool.org\n    - moneropool.com\n    - miner.center\n    - prohash.net\n    - poolto.be\n    - cryptoescrow.eu\n    - monerominers.net\n    - cryptonotepool.org\n    - extrmepool.org\n    - webcoin.me\n    - kippo.eu\n    - hashinvest.ws\n    - monero.farm\n    - linux-repository-updates.com\n    - 1gh.com\n    - dwarfpool.com\n    - hash-to-coins.com\n    - pool-proxy.com\n    - hashfor.cash\n    - fairpool.cloud\n    - litecoinpool.org\n    - mineshaft.ml\n    - abcxyz.stream\n    - moneropool.ru\n    - cryptonotepool.org.uk\n    - extremepool.org\n    - extremehash.com\n    - hashinvest.net\n    - unipool.pro\n    - crypto-pools.org\n    - monero.net\n    - backup-pool.com\n    - mooo.com\n    - freeyy.me\n    - cryptonight.net\n    - shscrypto.net\nfalsepositives:\n- A DNS lookup does not necessarily  mean a successful attempt, verify a) if there\n  was a response using the zeek answers field, if there was then verify the connections\n  (conn.log) to those IPs. b) verify if HTTP, SSL, or TLS activity to the domain that\n  was queried. http.log field is 'host' and ssl/tls is 'server_name'.\nfields:\n- id.orig_h\n- id.resp_h\n- query\n- answers\n- qtype_name\n- rcode_name\nid: bf74135c-18e8-4a72-a926-0e4f47888c19\nlevel: low\nlogsource:\n  product: zeek\n  service: dns\nmodified: 2022/07/07\nreferences:\n- https://github.com/Azure/Azure-Sentinel/blob/fa0411f9424b6c47b4d5a20165e4f1b168c1f103/Detections/ASimDNS/imDNS_Miners.yaml\nstatus: experimental\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.impact\n- attack.t1496\ntitle: DNS Events Related To Mining Pools\n",
                            "sigma:id": "bf74135c-18e8-4a72-a926-0e4f47888c19",
                            "title": "DNS Events Related To Mining Pools",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f3f3a972-f982-40ad-b63c-bca6afdfad7c",
                        "lookup_data": {
                            "description": "Detects PsExec service installation and execution events (service and Sysmon)",
                            "raw": "author: Thomas Patzke\ndate: 2017/06/12\ndescription: Detects PsExec service installation and execution events (service and\n  Sysmon)\ndetection:\n  condition: selection\n  selection:\n    PipeName: \\PSEXESVC\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- ServiceName\n- ServiceFileName\n- TargetFilename\n- PipeName\nid: f3f3a972-f982-40ad-b63c-bca6afdfad7c\nlevel: low\nlogsource:\n  category: pipe_created\n  definition: Note that you have to configure logging for Named Pipe Events in Sysmon\n    config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon\n    configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth\n    verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config,\n    https://github.com/olafhartong/sysmon-modular. How to test detection? You can\n    check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n- https://jpcertcc.github.io/ToolAnalysisResultSheet\nrelated:\n- id: 42c575ea-e41e-41f1-b248-8093c3e82a28\n  type: derived\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: PsExec Default Named Pipe\n",
                            "sigma:id": "f3f3a972-f982-40ad-b63c-bca6afdfad7c",
                            "title": "PsExec Default Named Pipe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
                        "lookup_data": {
                            "description": "Detects the use of SharpUp, a tool for local privilege escalation",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/08/20\ndescription: Detects the use of SharpUp, a tool for local privilege escalation\ndetection:\n  condition: selection\n  selection:\n  - Image|endswith: \\SharpUp.exe\n  - Description: SharpUp\n  - CommandLine|contains:\n    - HijackablePaths\n    - UnquotedServicePath\n    - ProcessDLLHijack\n    - ModifiableServiceBinaries\n    - ModifiableScheduledTask\n    - DomainGPPPassword\n    - CachedGPPPassword\nfalsepositives:\n- Unknown\nid: c484e533-ee16-4a93-b6ac-f0ea4868b2f1\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/18\nreferences:\n- https://github.com/GhostPack/SharpUp\nstatus: experimental\ntags:\n- attack.privilege_escalation\n- attack.t1615\n- attack.t1569.002\n- attack.t1574.005\ntitle: SharpUp PrivEsc Tool\n",
                            "sigma:id": "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
                            "title": "SharpUp PrivEsc Tool",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7b0666ad-3e38-4e3d-9bab-78b06de85f7b",
                        "lookup_data": {
                            "description": "Detects execution of renamed paexec via imphash and executable product string",
                            "raw": "author: Jason Lynch\ndate: 2019/04/17\ndescription: Detects execution of renamed paexec via imphash and executable product\n  string\ndetection:\n  condition: all of selection* and not filter1\n  filter1:\n    Image|contains: paexec\n  selection1:\n    Product|contains: PAExec\n  selection2:\n  - Imphash:\n    - 11D40A7B7876288F919AB819CC2D9802\n    - 6444f8a34e99b8f7d9647de66aabe516\n    - dfd6aa3f7b2b1035b76b718f1ddc689f\n    - 1a6cca4d5460b1710a12dea39e4a592c\n  - Hashes|contains:\n    - IMPHASH=11D40A7B7876288F919AB819CC2D9802\n    - IMPHASH=6444f8a34e99b8f7d9647de66aabe516\n    - IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f\n    - IMPHASH=1a6cca4d5460b1710a12dea39e4a592c\nfalsepositives:\n- Unknown imphashes\nid: 7b0666ad-3e38-4e3d-9bab-78b06de85f7b\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/03/04\nreferences:\n- sha256=01a461ad68d11b5b5096f45eb54df9ba62c5af413fa9eb544eacb598373a26bc\n- https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1036.003\n- attack.g0046\n- car.2013-05-009\n- attack.execution\n- attack.t1569.002\ntitle: Execution of Renamed PaExec\n",
                            "sigma:id": "7b0666ad-3e38-4e3d-9bab-78b06de85f7b",
                            "title": "Execution of Renamed PaExec",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3ede524d-21cc-472d-a3ce-d21b568d8db7",
                        "lookup_data": {
                            "description": "Detects a PsExec service start",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/03/13\ndescription: Detects a PsExec service start\ndetection:\n  condition: selection\n  selection:\n    CommandLine: C:\\Windows\\PSEXESVC.exe\nfalsepositives:\n- Administrative activity\nid: 3ede524d-21cc-472d-a3ce-d21b568d8db7\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nstatus: test\ntags:\n- attack.execution\n- attack.s0029\n- attack.t1569.002\ntitle: PsExec Service Start\n",
                            "sigma:id": "3ede524d-21cc-472d-a3ce-d21b568d8db7",
                            "title": "PsExec Service Start",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                        "lookup_data": {
                            "description": "Detecting use PsExec via Pipe Creation/Access to pipes",
                            "raw": "author: Nikita Nazarov, oscd.community\ndate: 2020/05/10\ndescription: Detecting use PsExec via Pipe Creation/Access to pipes\ndetection:\n  condition: selection\n  selection:\n    PipeName|startswith:\n    - psexec\n    - paexec\n    - remcom\n    - csexec\nfalsepositives:\n- Legitimate Administrator activity\nid: 9e77ed63-2ecf-4c7b-b09d-640834882028\nlevel: medium\nlogsource:\n  category: pipe_created\n  definition: Note that you have to configure logging for Named Pipe Events in Sysmon\n    config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon\n    configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth\n    verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config,\n    https://github.com/olafhartong/sysmon-modular. How to test detection? You can\n    check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1021.002\n- attack.execution\n- attack.t1569.002\ntitle: PsExec Pipes Artifacts\n",
                            "sigma:id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                            "title": "PsExec Pipes Artifacts",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed",
                        "lookup_data": {
                            "description": "Detects well-known credential dumping tools execution via service execution events",
                            "raw": "author: Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy,\n  oscd.community\ndate: 2017/03/05\ndescription: Detects well-known credential dumping tools execution via service execution\n  events\ndetection:\n  condition: selection\n  selection:\n    EventID: 7045\n    ImagePath|contains:\n    - fgexec\n    - dumpsvc\n    - cachedump\n    - mimidrv\n    - gsecdump\n    - servpw\n    - pwdump\n    Provider_Name: Service Control Manager\nfalsepositives:\n- Legitimate Administrator using credential dumping tool for password recovery\nid: 4976aa50-8f41-45c6-8b15-ab3fc10e79ed\nlevel: high\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/11/29\nreferences:\n- https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\nstatus: experimental\ntags:\n- attack.credential_access\n- attack.execution\n- attack.t1003.001\n- attack.t1003.002\n- attack.t1003.004\n- attack.t1003.005\n- attack.t1003.006\n- attack.t1569.002\n- attack.s0005\ntitle: Credential Dumping Tools Service Execution - System\n",
                            "sigma:id": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed",
                            "title": "Credential Dumping Tools Service Execution - System",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2a926e6a-4b81-4011-8a96-e36cc8c04302",
                        "lookup_data": {
                            "description": "Detects powershell script installed as a Service",
                            "raw": "author: oscd.community, Natalia Shornikova\ndate: 2020/10/06\ndescription: Detects powershell script installed as a Service\ndetection:\n  condition: selection\n  selection:\n    EventID: 4697\n    ServiceFileName|contains:\n    - powershell\n    - pwsh\nfalsepositives:\n- Unknown\nid: 2a926e6a-4b81-4011-8a96-e36cc8c04302\nlevel: high\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nmodified: 2022/11/29\nreferences:\n- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse\nrelated:\n- id: a2e5019d-a658-4c6a-92bf-7197b54e2cae\n  type: derived\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: PowerShell Scripts Installed as Services - Security\n",
                            "sigma:id": "2a926e6a-4b81-4011-8a96-e36cc8c04302",
                            "title": "PowerShell Scripts Installed as Services - Security",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f0d1feba-4344-4ca9-8121-a6c97bd6df52",
                        "lookup_data": {
                            "description": "Detects well-known credential dumping tools execution via service execution events",
                            "raw": "author: Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy,\n  oscd.community\ndate: 2017/03/05\ndescription: Detects well-known credential dumping tools execution via service execution\n  events\ndetection:\n  condition: selection\n  selection:\n    EventID: 4697\n    ServiceFileName|contains:\n    - fgexec\n    - dumpsvc\n    - cachedump\n    - mimidrv\n    - gsecdump\n    - servpw\n    - pwdump\nfalsepositives:\n- Legitimate Administrator using credential dumping tool for password recovery\nid: f0d1feba-4344-4ca9-8121-a6c97bd6df52\nlevel: high\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nmodified: 2022/11/29\nreferences:\n- https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\nrelated:\n- id: 4976aa50-8f41-45c6-8b15-ab3fc10e79ed\n  type: derived\nstatus: test\ntags:\n- attack.credential_access\n- attack.execution\n- attack.t1003.001\n- attack.t1003.002\n- attack.t1003.004\n- attack.t1003.005\n- attack.t1003.006\n- attack.t1569.002\n- attack.s0005\ntitle: Credential Dumping Tools Service Execution - Security\n",
                            "sigma:id": "f0d1feba-4344-4ca9-8121-a6c97bd6df52",
                            "title": "Credential Dumping Tools Service Execution - Security",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5bb68627-3198-40ca-b458-49f973db8752",
                        "lookup_data": {
                            "description": "Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module",
                            "raw": "author: Bartlomiej Czyz, Relativity\ndate: 2021/01/31\ndescription: Detects rundll32 execution without parameters as observed when running\n  Metasploit windows/smb/psexec exploit module\ndetection:\n  condition: selection\n  selection:\n    CommandLine: rundll32.exe\nfalsepositives:\n- Unknown\nfields:\n- ComputerName\n- SubjectUserName\n- CommandLine\n- Image\n- ParentImage\nid: 5bb68627-3198-40ca-b458-49f973db8752\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://bczyz1.github.io/2021/01/30/psexec.html\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1570\n- attack.execution\n- attack.t1569.002\ntitle: Rundll32 Without Parameters\n",
                            "sigma:id": "5bb68627-3198-40ca-b458-49f973db8752",
                            "title": "Rundll32 Without Parameters",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "52a85084-6989-40c3-8f32-091e12e13f09",
                        "lookup_data": {
                            "description": "Detects the use of smbexec.py tool by detecting a specific service installation",
                            "raw": "author: Omer Faruk Celik\ndate: 2018/03/20\ndescription: Detects the use of smbexec.py tool by detecting a specific service installation\ndetection:\n  condition: selection\n  selection:\n    EventID: 7045\n    ImagePath|endswith: \\execute.bat\n    Provider_Name: Service Control Manager\n    ServiceName: BTOBTO\nfalsepositives:\n- Unknown\nfields:\n- ServiceName\n- ServiceFileName\nid: 52a85084-6989-40c3-8f32-091e12e13f09\nlevel: critical\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/03/21\nreferences:\n- https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.execution\n- attack.t1021.002\n- attack.t1569.002\ntitle: smbexec.py Service Installation\n",
                            "sigma:id": "52a85084-6989-40c3-8f32-091e12e13f09",
                            "title": "smbexec.py Service Installation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a7cd7306-df8b-4398-b711-6f3e4935cf16",
                        "lookup_data": {
                            "description": "Detects suspicious remote procedure call (RPC) service anomalies based on the spawned sub processes (long shot to detect the exploitation of vulnerabilities like CVE-2022-26809)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/04/13\ndescription: Detects suspicious remote procedure call (RPC) service anomalies based\n  on the spawned sub processes (long shot to detect the exploitation of vulnerabilities\n  like CVE-2022-26809)\ndetection:\n  condition: selection\n  selection:\n    ParentCommandLine|startswith: C:\\WINDOWS\\system32\\svchost.exe -k RPCSS\nfalsepositives:\n- Unknown\n- Some cases in which the service spawned a werfault.exe process\nid: a7cd7306-df8b-4398-b711-6f3e4935cf16\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-26809\n- https://www.bleepingcomputer.com/startups/RpcSs.exe-14544.html\n- https://twitter.com/cyb3rops/status/1514217991034097664\nstatus: experimental\ntags:\n- attack.initial_access\n- attack.t1190\n- attack.execution\n- attack.t1569.002\ntitle: Remote Procedure Call Service Anomaly\n",
                            "sigma:id": "a7cd7306-df8b-4398-b711-6f3e4935cf16",
                            "title": "Remote Procedure Call Service Anomaly",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c4ff1eac-84ad-44dd-a6fb-d56a92fc43a9",
                        "lookup_data": {
                            "description": "Detects a ProcessHacker tool that elevated privileges to a very high level",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2021/05/27\ndescription: Detects a ProcessHacker tool that elevated privileges to a very high\n  level\ndetection:\n  condition: selection\n  selection:\n    AccountName: LocalSystem\n    EventID: 7045\n    Provider_Name: Service Control Manager\n    ServiceName|startswith: ProcessHacker\nfalsepositives:\n- Unlikely\nid: c4ff1eac-84ad-44dd-a6fb-d56a92fc43a9\nlevel: high\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/12/25\nreferences:\n- https://twitter.com/1kwpeter/status/1397816101455765504\nstatus: test\ntags:\n- attack.execution\n- attack.privilege_escalation\n- attack.t1543.003\n- attack.t1569.002\ntitle: ProcessHacker Privilege Elevation\n",
                            "sigma:id": "c4ff1eac-84ad-44dd-a6fb-d56a92fc43a9",
                            "title": "ProcessHacker Privilege Elevation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f1951e8a-500e-4a26-8803-76d95c4554b4",
                        "lookup_data": {
                            "mitre-attack-id": "T1569.002",
                            "mitre-cti:description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",
                            "mitre-cti:name": "Service Execution",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4', 'type': 'attack-pattern', 'created': '2020-03-10T18:33:36.159Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1569.002', 'url': 'https://attack.mitre.org/techniques/T1569/002'}, {'source_name': 'Microsoft Service Control Manager', 'url': 'https://docs.microsoft.com/windows/win32/services/service-control-manager', 'description': 'Microsoft. (2018, May 31). Service Control Manager. Retrieved March 28, 2020.'}, {'url': 'https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx', 'description': 'Russinovich, M. (2014, May 2). Windows Sysinternals PsExec v2.11. Retrieved May 13, 2015.', 'source_name': 'Russinovich Sysinternals'}], 'modified': '2021-08-30T17:42:40.945Z', 'name': 'Service Execution', 'description': 'Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\\n\\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\\n\\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'execution'}], 'x_mitre_detection': 'Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Command: Command Execution', 'Service: Service Creation', 'Process: Process Creation', 'Windows Registry: Windows Registry Key Modification'], 'x_mitre_permissions_required': ['Administrator', 'SYSTEM'], 'x_mitre_remote_support': True}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5a105d34-05fc-401e-8553-272b45c1522d",
                        "lookup_data": {
                            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
                            "raw": "author: Florian Roth (Nextron Systems), Wojciech Lesicki\ndate: 2021/05/26\ndescription: Detects known malicious service installs that appear in cases in which\n  a Cobalt Strike beacon elevates privileges or lateral movement\ndetection:\n  condition: selection_id and (selection1 or selection2 or selection3 or selection4)\n  selection1:\n    ImagePath|contains|all:\n    - ADMIN$\n    - .exe\n  selection2:\n    ImagePath|contains|all:\n    - '%COMSPEC%'\n    - start\n    - powershell\n  selection3:\n    ImagePath|contains: powershell -nop -w hidden -encodedcommand\n  selection4:\n    ImagePath|base64offset|contains: 'IEX (New-Object Net.Webclient).DownloadString(''http://127.0.0.1:'\n  selection_id:\n    EventID: 7045\n    Provider_Name: Service Control Manager\nfalsepositives:\n- Unknown\nid: 5a105d34-05fc-401e-8553-272b45c1522d\nlevel: critical\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/11/27\nreferences:\n- https://www.sans.org/webcasts/119395\n- https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/\n- https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/\nstatus: test\ntags:\n- attack.execution\n- attack.privilege_escalation\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1543.003\n- attack.t1569.002\ntitle: CobaltStrike Service Installations - System\n",
                            "sigma:id": "5a105d34-05fc-401e-8553-272b45c1522d",
                            "title": "CobaltStrike Service Installations - System",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2a072a96-a086-49fa-bcb5-15cc5a619093",
                        "lookup_data": {
                            "description": "Detects the usage of the \"net.exe\" command to start a service using the \"start\" flag",
                            "raw": "author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/21\ndescription: Detects the usage of the \"net.exe\" command to start a service using the\n  \"start\" flag\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: ' start '\n    Image|endswith:\n    - \\net.exe\n    - \\net1.exe\nfalsepositives:\n- Legitimate administrator or user executes a service for legitimate reasons.\nid: 2a072a96-a086-49fa-bcb5-15cc5a619093\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/02/01\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1569.002/T1569.002.md\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\ntitle: Services Started Via Net.EXE\n",
                            "sigma:id": "2a072a96-a086-49fa-bcb5-15cc5a619093",
                            "title": "Services Started Via Net.EXE",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "61a7697c-cb79-42a8-a2ff-5f0cdfae0130",
                        "lookup_data": {
                            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement.\nWe can also catch this by system log 7045 (https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_cobaltstrike_service_installs.yml)\nIn some SIEM you can catch those events also in HKLM\\System\\ControlSet001\\Services or HKLM\\System\\ControlSet002\\Services, however, this rule is based on a regular sysmon's events.\n",
                            "raw": "author: Wojciech Lesicki\ndate: 2021/06/29\ndescription: 'Detects known malicious service installs that appear in cases in which\n  a Cobalt Strike beacon elevates privileges or lateral movement.\n\n  We can also catch this by system log 7045 (https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_cobaltstrike_service_installs.yml)\n\n  In some SIEM you can catch those events also in HKLM\\System\\ControlSet001\\Services\n  or HKLM\\System\\ControlSet002\\Services, however, this rule is based on a regular\n  sysmon''s events.\n\n  '\ndetection:\n  condition: main and 1 of selection_*\n  main:\n    EventType: SetValue\n    TargetObject|contains: HKLM\\System\\CurrentControlSet\\Services\n  selection_1:\n    Details|contains|all:\n    - ADMIN$\n    - .exe\n  selection_2:\n    Details|contains|all:\n    - '%COMSPEC%'\n    - start\n    - powershell\nfalsepositives:\n- Unknown\nid: 61a7697c-cb79-42a8-a2ff-5f0cdfae0130\nlevel: critical\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/03/26\nreferences:\n- https://www.sans.org/webcasts/tech-tuesday-workshop-cobalt-strike-detection-log-analysis-119395\nstatus: test\ntags:\n- attack.execution\n- attack.privilege_escalation\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1543.003\n- attack.t1569.002\ntitle: CobaltStrike Service Installations in Registry\n",
                            "sigma:id": "61a7697c-cb79-42a8-a2ff-5f0cdfae0130",
                            "title": "CobaltStrike Service Installations in Registry",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b5281f31-f9cc-4d0d-95d0-45b91c45b487",
                        "lookup_data": {
                            "description": "Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the detection of suspicious sub process",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/07/15\ndescription: Detects exploitation of DNS RCE bug reported in CVE-2020-1350 by the\n  detection of suspicious sub process\ndetection:\n  condition: selection and not filter\n  filter:\n    Image|endswith:\n    - \\System32\\werfault.exe\n    - \\System32\\conhost.exe\n    - \\System32\\dnscmd.exe\n    - \\System32\\dns.exe\n  selection:\n    ParentImage|endswith: \\System32\\dns.exe\nfalsepositives:\n- Unknown but benign sub processes of the Windows DNS service dns.exe\nid: b5281f31-f9cc-4d0d-95d0-45b91c45b487\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/07/12\nreferences:\n- https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/\n- https://blog.menasec.net/2019/02/threat-hunting-24-microsoft-windows-dns.html\nstatus: test\ntags:\n- attack.initial_access\n- attack.t1190\n- attack.execution\n- attack.t1569.002\ntitle: DNS RCE CVE-2020-1350\n",
                            "sigma:id": "b5281f31-f9cc-4d0d-95d0-45b91c45b487",
                            "title": "DNS RCE CVE-2020-1350",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cb062102-587e-4414-8efa-dbe3c7bf19c6",
                        "lookup_data": {
                            "description": "Detects known malicious service installs that only appear in cases of lateral movement, credential dumping, and other suspicious activities.",
                            "raw": "author: Florian Roth (Nextron Systems), Daniil Yugoslavskiy, oscd.community (update)\ndate: 2017/03/27\ndescription: Detects known malicious service installs that only appear in cases of\n  lateral movement, credential dumping, and other suspicious activities.\ndetection:\n  condition: selection and 1 of malsvc_*\n  malsvc_apt29:\n    ServiceName: javamtsup\n  selection:\n    EventID: 4697\nfalsepositives:\n- Unknown\nid: cb062102-587e-4414-8efa-dbe3c7bf19c6\nlevel: critical\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nmodified: 2022/10/09\nreferences:\n- https://awakesecurity.com/blog/threat-hunting-for-paexec/\n- https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html\n- https://blog.f-secure.com/wp-content/uploads/2019/10/CosmicDuke.pdf\nrelated:\n- id: 2cfe636e-317a-4bee-9f2c-1066d9f54d1a\n  type: derived\nstatus: test\ntags:\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1003\n- car.2013-09-005\n- attack.t1543.003\n- attack.t1569.002\ntitle: Malicious Service Installations\n",
                            "sigma:id": "cb062102-587e-4414-8efa-dbe3c7bf19c6",
                            "title": "Malicious Service Installations",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6fb63b40-e02a-403e-9ffd-3bcc1d749442",
                        "lookup_data": {
                            "description": "Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and Impacket psexec.py by triggering on specific service installation",
                            "raw": "author: Bartlomiej Czyz, Relativity\ndate: 2021/01/21\ndescription: Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and\n  Impacket psexec.py by triggering on specific service installation\ndetection:\n  condition: selection and not filter\n  filter:\n    ServiceName: PSEXESVC\n  selection:\n    EventID: 4697\n    ServiceFileName|re: ^%systemroot%\\\\[a-zA-Z]{8}\\.exe$\n    ServiceName|re: (^[a-zA-Z]{4}$)|(^[a-zA-Z]{8}$)|(^[a-zA-Z]{16}$)\n    ServiceStartType: 3\n    ServiceType: '0x10'\nfalsepositives:\n- Possible, different agents with a 8 character binary and a 4, 8 or 16 character\n  service name\nfields:\n- ComputerName\n- SubjectDomainName\n- SubjectUserName\n- ServiceName\n- ServiceFileName\nid: 6fb63b40-e02a-403e-9ffd-3bcc1d749442\nlevel: high\nlogsource:\n  definition: The 'System Security Extension' audit subcategory need to be enabled\n    to log the EID 4697\n  product: windows\n  service: security\nmodified: 2022/10/05\nreferences:\n- https://bczyz1.github.io/2021/01/30/psexec.html\nrelated:\n- id: 1a17ce75-ff0d-4f02-9709-2b7bb5618cf0\n  type: derived\nstatus: experimental\ntags:\n- attack.lateral_movement\n- attack.t1021.002\n- attack.t1570\n- attack.execution\n- attack.t1569.002\ntitle: Metasploit Or Impacket Service Installation Via SMB PsExec\n",
                            "sigma:id": "6fb63b40-e02a-403e-9ffd-3bcc1d749442",
                            "title": "Metasploit Or Impacket Service Installation Via SMB PsExec",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "93199800-b52a-4dec-b762-75212c196542",
                        "lookup_data": {
                            "description": "Detects the use of RunXCmd tool for command execution",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/01/24\ndescription: Detects the use of RunXCmd tool for command execution\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - ' /account=system '\n    - /exec=\nfalsepositives:\n- Legitimate use by administrators\nfields:\n- CommandLine\n- ParentCommandLine\nid: 93199800-b52a-4dec-b762-75212c196542\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.d7xtech.com/free-software/runx/\n- https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/\nstatus: test\ntags:\n- attack.execution\n- attack.t1569.002\n- attack.s0029\ntitle: RunXCmd Tool Execution As System\n",
                            "sigma:id": "93199800-b52a-4dec-b762-75212c196542",
                            "title": "RunXCmd Tool Execution As System",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1569.002",
                "display_name": "System Services: Service Execution",
                "atomic_tests": [
                    {
                        "name": "Execute a Command as a Service",
                        "auto_generated_guid": "2382dee2-a75f-49aa-9378-f52df6ed3fb1",
                        "description": "Creates a service specifying an arbitrary command and executes it. When executing commands such as PowerShell, the service will report that it did not start correctly even when code executes properly.\n\nUpon successful execution, cmd.exe creates a new service using sc.exe that will start powershell.exe to create a new file `art-marker.txt`\n\n[BlackCat Ransomware (ALPHV)](https://www.varonis.com/blog/blackcat-ransomware)  \n[Cybereason vs. BlackCat Ransomware](https://www.cybereason.com/blog/cybereason-vs.-blackcat-ransomware)\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "service_name": {
                                "description": "Name of service to create",
                                "type": "string",
                                "default": "ARTService"
                            },
                            "executable_command": {
                                "description": "Command to execute as a service",
                                "type": "string",
                                "default": "%COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt"
                            }
                        },
                        "executor": {
                            "command": "sc.exe create #{service_name} binPath= \"#{executable_command}\"\nsc.exe start #{service_name}\nsc.exe delete #{service_name}\n",
                            "cleanup_command": "del C:\\art-marker.txt >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Use PsExec to execute a command on a remote host",
                        "auto_generated_guid": "873106b7-cfed-454b-8680-fa9f6400431c",
                        "description": "Requires having Sysinternals installed, path to sysinternals is one of the input input_arguments\nWill start a process on a remote host.\n\nUpon successful execution, cmd will utilize psexec.exe to spawn calc.exe on a remote endpoint (default:localhost).\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote hostname or IP address",
                                "type": "string",
                                "default": "localhost"
                            },
                            "user_name": {
                                "description": "Username",
                                "type": "string",
                                "default": "DOMAIN\\Administrator"
                            },
                            "password": {
                                "description": "Password",
                                "type": "string",
                                "default": "P@ssw0rd1"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "PsExec tool from Sysinternals must exist in the ExternalPayloads directory\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\") { exit 0} else { exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\"\nExpand-Archive \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\" -Force\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" -Force\n"
                            }
                        ],
                        "executor": {
                            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" \\\\#{remote_host} -u #{user_name} -p #{password} -accepteula \"C:\\Windows\\System32\\calc.exe\"\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "psexec.py (Impacket)",
                        "auto_generated_guid": "edbcd8c9-3639-4844-afad-455c91e95a35",
                        "description": "Will execute a command on the remote host with Impacket psexec.py script.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote hostname or IP address",
                                "type": "string",
                                "default": "127.0.0.1"
                            },
                            "username": {
                                "description": "Username",
                                "type": "string",
                                "default": "Administrator"
                            },
                            "domain": {
                                "description": "Target domain",
                                "type": "string",
                                "default": ""
                            },
                            "password": {
                                "description": "Password",
                                "type": "string",
                                "default": "P@ssw0rd1"
                            },
                            "command": {
                                "description": "Command to execute in target computer",
                                "type": "string",
                                "default": "whoami"
                            }
                        },
                        "dependency_executor_name": "bash",
                        "dependencies": [
                            {
                                "description": "psexec.py (Impacket)\n",
                                "prereq_command": "if [ -x \"$(command -v psexec.py)\" ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "sudo pip3 install impacket\n"
                            }
                        ],
                        "executor": {
                            "command": "psexec.py '#{domain}/#{username}:#{password}@#{remote_host}' '#{command}'\n",
                            "name": "bash"
                        }
                    },
                    {
                        "name": "BlackCat pre-encryption cmds with Lateral Movement",
                        "auto_generated_guid": "31eb7828-97d7-4067-9c1e-c6feb85edc4b",
                        "description": "This atomic attempts to emulate the unique behavior of BlackCat ransomware prior to encryption and during Lateral Movement attempts via PsExec on Windows. Uses bundled PsExec like BlackCat",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "targethost": {
                                "description": "Target hostname to attempt psexec connection to for emulation of lateral movement.",
                                "type": "string",
                                "default": "$ENV:COMPUTERNAME"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "PsExec must exist on disk at \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\"\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\"\nExpand-Archive \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\" -Force\nNew-Item -ItemType Directory (Split-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\") -Force | Out-Null\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" -Force\n"
                            }
                        ],
                        "executor": {
                            "command": "cmd.exe /c \"wmic \tcsproduct \tget UUID\" \ncmd.exe /c \"fsutil behavior \tset SymlinkEvaluation R2L:1\" \ncmd.exe /c \"fsutil behavior set \tSymlinkEvaluation R2R:1\"\nreg    add    HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters    /v MaxMpxCt /d 65535 /t REG_DWORD /f      \ncopy \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" $env:temp\ncmd.exe /c \"$env:temp\\psexec.exe  -accepteula  \\\\#{targethost} cmd.exe  /c echo \"--access-token\"\"\n",
                            "cleanup_command": "reg delete HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /v MaxMpxCt /f\ncmd.exe /c \"fsutil behavior set SymlinkEvaluation R2L:0\" \ncmd.exe /c \"fsutil behavior set SymlinkEvaluation R2R:0\"\nrm $env:temp\\psexec.exe\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Use RemCom to execute a command on a remote host",
                        "auto_generated_guid": "a5d8cdeb-be90-43a9-8b26-cc618deac1e0",
                        "description": "Requires having RemCom installed, path to RemCom is one of the input input_arguments\nWill start a process on a remote host.\nUpon successful execution, cmd will utilize RemCom.exe to spawn calc.exe on a remote endpoint (default:localhost).\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote hostname or IP address",
                                "type": "string",
                                "default": "localhost"
                            },
                            "user_name": {
                                "description": "Username",
                                "type": "string",
                                "default": "Administrator"
                            },
                            "password": {
                                "description": "Password",
                                "type": "string",
                                "default": "P@ssw0rd1"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "RemCom tool must exist on disk in the ExternalPayloads folder\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\remcom.exe\") { exit 0} else { exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://github.com/kavika13/RemCom/raw/master/bin/Release/RemCom.exe\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\remcom.exe\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\remcom.exe\" \\\\#{remote_host} /user:#{user_name} /pwd:#{password} cmd.exe\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Snake Malware Service Create",
                        "auto_generated_guid": "b8db787e-dbea-493c-96cb-9272296ddc49",
                        "description": "The following Atomic Test will create a new service named WerFaultSvc with a binary path of WinSxS\\x86_microsoft-windows-errorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a050\\WerFault.exe.\nThis was recently seen in the Snake Malware report. \nUpon execution, sc.exe will create a new service named WerFaultSvc with a bin path \\WinSxS\\x86_microsoft-windows-errorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a050\\WerFault.exe and a display name of WerFault Service.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "sc.exe create \"WerFaultSvc\" binPath= \"$env:windir\\WinSxS\\x86_microsoft-windows-errorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a050\\WerFault.exe\" DisplayName= \"WerFault Service\" start= auto\n",
                            "cleanup_command": "sc.exe delete \"WerFaultSvc\"\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Modifying ACL of Service Control Manager via SDET",
                        "auto_generated_guid": "bf07f520-3909-4ef5-aa22-877a50f2f77b",
                        "description": "Modify permissions of Service Control Manager via SDSET. This allows any administrative user to escalate privilege and create a service with SYSTEM level privileges.Restart is required.\n[Blog](https://0xv1n.github.io/posts/scmanager/)  \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "sc.exe sdset scmanager D:(A;;KA;;;WD)\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Pipe Creation - PsExec Tool Execution From Suspicious Locations",
                        "auto_generated_guid": "004a5d68-627b-452d-af3d-43bd1fc75a3b",
                        "description": "Requires PsExec tool installed. BlackCat Ransomeware tried to propagate by creating pipe using PsExec process executing from suspicious locations (In the particular case the legitimate PsExec executable is embedded within the Windows variant and is dropped in the victim’s %TEMP% directory). pon successful execution, PsExec will be executed from suspicious location and create a new pipe to execute CMD.",
                        "supported_platforms": [
                            "windows"
                        ],
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "PsExec tool from Sysinternals must exist in the '\\Users\\Public\\Temp\\' directory\n",
                                "prereq_command": "if (Get-ChildItem -Path C:\\ -Include *psexec* -File -Recurse -ErrorAction SilentlyContinue) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"C:\\Users\\Public\\Temp\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"C:\\Users\\Public\\Temp\\PSTools.zip\"\nExpand-Archive \"C:\\Users\\Public\\Temp\\PsTools.zip\" \"C:\\Users\\Public\\Temp\\\" -Force\n"
                            }
                        ],
                        "executor": {
                            "command": "cd C:\\Users\\Public\\Temp\\ \n.\\PsExec.exe -i -s cmd  -accepteula",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 17:16:23"
}