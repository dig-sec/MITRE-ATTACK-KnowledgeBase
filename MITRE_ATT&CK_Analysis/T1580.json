{
    "id": "T1580",
    "name": "Cloud Infrastructure Discovery",
    "description": "An adversary may attempt to discover resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a `DescribeInstances` API within the Amazon EC2 API that can return information about one or more instances within an account, the `ListBuckets` API that returns a list of all buckets owned by the authenticated sender of the request, or the `GetPublicAccessBlock` API to retrieve access block configuration for a bucket (Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block).\nSimilarly, GCP's Cloud SDK CLI provides the `gcloud compute instances list` command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command `az vm list` lists details of virtual machines.(Citation: Microsoft AZ CLI)\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as `DescribeDBInstances` to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",
    "platforms": "IaaS",
    "kill_chain_phases": "Discovery",
    "data_sources": "Instance: Instance Metadata, Instance: Instance Enumeration, Snapshot: Snapshot Metadata, Snapshot: Snapshot Enumeration, Cloud Storage: Cloud Storage Metadata, Cloud Storage: Cloud Storage Enumeration, Volume: Volume Metadata, Volume: Volume Enumeration",
    "detection": "Establish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
    "url": "https://attack.mitre.org/techniques/T1580",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "57a3d31a-d04f-4663-b2da-7df8ec3f8c9d",
                    "76255e09-755e-4675-8b6b-dbce9842cd2a",
                    "f305fd62-beca-47da-ad95-7690a0620084"
                ],
                "lookup_results": [
                    {
                        "uuid": "57a3d31a-d04f-4663-b2da-7df8ec3f8c9d",
                        "lookup_data": {
                            "mitre-attack-id": "T1580",
                            "mitre-cti:description": "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucketâ€™s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",
                            "mitre-cti:name": "Cloud Infrastructure Discovery",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['IaaS'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Regina Elwell', 'Praetorian', 'Isif Ibrahima, Mandiant'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--57a3d31a-d04f-4663-b2da-7df8ec3f8c9d', 'created': '2020-08-20T17:51:25.671Z', 'x_mitre_version': '1.3', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1580', 'url': 'https://attack.mitre.org/techniques/T1580'}, {'source_name': 'Expel IO Evil in AWS', 'url': 'https://expel.io/blog/finding-evil-in-aws/', 'description': 'A. Randazzo, B. Manahan and S. Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.'}, {'source_name': 'AWS Head Bucket', 'url': 'https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadBucket.html', 'description': 'Amazon Web Services. (n.d.). AWS HeadBucket. Retrieved February 14, 2022.'}, {'source_name': 'AWS Get Public Access Block', 'url': 'https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html', 'description': 'Amazon Web Services. (n.d.). Retrieved May 28, 2021.'}, {'source_name': 'AWS Describe DB Instances', 'url': 'https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html', 'description': 'Amazon Web Services. (n.d.). Retrieved May 28, 2021.'}, {'source_name': 'Amazon Describe Instance', 'url': 'https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html', 'description': 'Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.'}, {'source_name': 'Amazon Describe Instances API', 'url': 'https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html', 'description': 'Amazon. (n.d.). DescribeInstances. Retrieved May 26, 2020.'}, {'source_name': 'Google Compute Instances', 'url': 'https://cloud.google.com/sdk/gcloud/reference/compute/instances/list', 'description': 'Google. (n.d.). gcloud compute instances list. Retrieved May 26, 2020.'}, {'source_name': 'Mandiant M-Trends 2020', 'url': 'https://content.fireeye.com/m-trends/rpt-m-trends-2020', 'description': 'Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020.'}, {'source_name': 'Microsoft AZ CLI', 'url': 'https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest', 'description': 'Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.'}, {'source_name': 'Malwarebytes OSINT Leaky Buckets - Hioureas', 'url': 'https://blog.malwarebytes.com/researchers-corner/2019/09/hacking-with-aws-incorporating-leaky-buckets-osint-workflow/', 'description': 'Vasilios Hioureas. (2019, September 13). Hacking with AWS: incorporating leaky buckets into your OSINT workflow. Retrieved February 14, 2022.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': \"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\\n\\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucketâ€™s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\\n\\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.\", 'modified': '2022-04-20T19:03:12.977Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Cloud Infrastructure Discovery', 'x_mitre_detection': 'Establish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'discovery'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Cloud Storage: Cloud Storage Enumeration', 'Instance: Instance Enumeration', 'Snapshot: Snapshot Enumeration', 'Volume: Volume Enumeration'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "76255e09-755e-4675-8b6b-dbce9842cd2a",
                        "lookup_data": {
                            "description": "Detects potential enumeration activity targeting an AWS instance backups",
                            "raw": "author: Janantha Marasinghe\ndate: 2022/12/13\ndescription: Detects potential enumeration activity targeting an AWS instance backups\ndetection:\n  condition: selection | count() > 5\n  selection:\n    eventName:\n    - GetPasswordData\n    - GetEbsEncryptionByDefault\n    - GetEbsDefaultKmsKeyId\n    - GetBucketReplication\n    - DescribeVolumes\n    - DescribeVolumesModifications\n    - DescribeSnapshotAttribute\n    - DescribeSnapshotTierStatus\n    - DescribeImages\n    eventSource: ec2.amazonaws.com\n  timeframe: 10m\nfalsepositives:\n- Unknown\nid: 76255e09-755e-4675-8b6b-dbce9842cd2a\nlevel: medium\nlogsource:\n  product: aws\n  service: cloudtrail\nmodified: 2022/12/28\nreferences:\n- https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials/\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1580\ntitle: Potential Backup Enumeration on AWS\n",
                            "sigma:id": "76255e09-755e-4675-8b6b-dbce9842cd2a",
                            "title": "Potential Backup Enumeration on AWS",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f305fd62-beca-47da-ad95-7690a0620084",
                        "lookup_data": {
                            "description": "Looks for potential enumeration of AWS buckets via ListBuckets.",
                            "raw": "author: Christopher Peacock @securepeacock, SCYTHE @scythe_io\ndate: 2023/01/06\ndescription: Looks for potential enumeration of AWS buckets via ListBuckets.\ndetection:\n  condition: selection and not filter\n  filter:\n    type: AssumedRole\n  selection:\n    eventName: ListBuckets\n    eventSource: ec2.amazonaws.com\nfalsepositives:\n- Administrators listing buckets, it may be necessary to filter out users who commonly\n  conduct this activity.\nid: f305fd62-beca-47da-ad95-7690a0620084\nlevel: low\nlogsource:\n  product: aws\n  service: cloudtrail\nreferences:\n- https://github.com/Lifka/hacking-resources/blob/c2ae355d381bd0c9f0b32c4ead049f44e5b1573f/cloud-hacking-cheat-sheets.md\n- https://jamesonhacking.blogspot.com/2020/12/pivoting-to-private-aws-s3-buckets.html\n- https://securitycafe.ro/2022/12/14/aws-enumeration-part-ii-practical-enumeration/\nrelated:\n- id: 4723218f-2048-41f6-bcb0-417f2d784f61\n  type: similar\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1580\ntitle: Potential Bucket Enumeration on AWS\n",
                            "sigma:id": "f305fd62-beca-47da-ad95-7690a0620084",
                            "title": "Potential Bucket Enumeration on AWS",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1580",
                "display_name": "Cloud Infrastructure Discovery",
                "atomic_tests": [
                    {
                        "name": "AWS - EC2 Enumeration from Cloud Instance",
                        "auto_generated_guid": "99ee161b-dcb1-4276-8ecb-7cfdcb207820",
                        "description": "This atomic runs several API calls (sts:GetCallerIdentity, s3:ListBuckets, iam:GetAccountSummary, iam:ListRoles, iam:ListUsers, iam:GetAccountAuthorizationDetails, ec2:DescribeSnapshots, cloudtrail:DescribeTrails, guardduty:ListDetectors) from the context of an EC2 instance role. This simulates an attacker compromising an EC2 instance and running initial discovery commands on it. This atomic test leverages a tool called stratus-red-team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.discovery.ec2-enumerate-from-instance/\n",
                        "supported_platforms": [
                            "linux",
                            "macos",
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "stratus_path": {
                                "description": "Path of stratus binary",
                                "type": "path",
                                "default": "$PathToAtomicsFolder/T1580/src"
                            },
                            "aws_region": {
                                "description": "AWS region to detonate",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Stratus binary must be present at the (#{stratus_path}/stratus)\n",
                                "prereq_command": "if test -f \"#{stratus_path}/stratus\"; then exit 0; else exit 1; fi\n",
                                "get_prereq_command": "if [ \"$(uname)\" = \"Darwin\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep -i Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nelif [ \"$(expr substr $(uname) 1 5)\" = \"Linux\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep -i linux_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nfi \n"
                            },
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo \"Please install the aws-cli and configure your AWS default profile using: aws configure\"\n"
                            }
                        ],
                        "executor": {
                            "command": "export AWS_REGION=#{aws_region}\ncd #{stratus_path}\necho \"Stratus: Start Warmup.\"\n./stratus warmup aws.discovery.ec2-enumerate-from-instance\necho \"Stratus: Start Detonate.\"\n./stratus detonate aws.discovery.ec2-enumerate-from-instance\n",
                            "cleanup_command": "cd #{stratus_path}\necho \"Stratus: Start Cleanup.\"\n./stratus cleanup aws.discovery.ec2-enumerate-from-instance\necho \"Removing Stratus artifacts from local machine.\"\nrm -rf stratus*\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS - EC2 Security Group Enumeration",
                        "auto_generated_guid": "99b38f24-5acc-4aa3-85e5-b7f97a5d37ac",
                        "description": "Simulate an attacker's action to enumerate EC2 Security Groups in a compromised AWS environment.",
                        "supported_platforms": [
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "aws_profile": {
                                "description": "AWS CLI profile name",
                                "type": "string",
                                "default": "default"
                            },
                            "output_format": {
                                "description": "Desired output format (text, table, json)",
                                "type": "string",
                                "default": "json"
                            }
                        },
                        "executor": {
                            "name": "command_prompt",
                            "command": "aws ec2 describe-security-groups --profile #{aws_profile} --output #{output_format}\n"
                        },
                        "dependencies": [
                            {
                                "description": "AWS CLI installed and configured with the necessary access rights.",
                                "prereq_command": "type aws || aws --version",
                                "get_prereq_command": "if [ \"$(uname)\" = \"Darwin\" ] || [ \"$(expr substr $(uname) 1 5)\" = \"Linux\" ]; then\n  curl \"https://aws.amazon.com/cli/\" -o \"Install-AWSCLI.sh\" && sh Install-AWSCLI.sh\nelif [ \"$(expr substr $(uname) 1 5)\" = \"MINGW\" ]; then\n  Invoke-WebRequest -Uri \"https://aws.amazon.com/cli/\" -OutFile \"Install-AWSCLI.ps1\"; .\\Install-AWSCLI.ps1\nfi\n"
                            },
                            {
                                "description": "Check if AWS CLI is installed and configured.",
                                "prereq_command": "aws sts get-caller-identity --profile #{aws_profile}\n",
                                "get_prereq_command": "if ! aws sts get-caller-identity --profile #{aws_profile}; then\n  echo \"AWS CLI not properly configured. Please configure AWS CLI.\"\nfi\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 17:38:06"
}