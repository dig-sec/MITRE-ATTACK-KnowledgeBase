{
    "id": "T1613",
    "name": "Container and Resource Discovery",
    "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution.",
    "platforms": "Containers",
    "kill_chain_phases": "Discovery",
    "data_sources": "Cluster: Cluster Metadata, Container: Container Enumeration, Container: Container Metadata, Pod: Pod Enumeration, Pod: Pod Metadata, Application Log: Application Log Content",
    "detection": "Establish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.",
    "url": "https://attack.mitre.org/techniques/T1613",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "0470e792-32f8-46b0-a351-652bc35e9336"
                ],
                "lookup_results": [
                    {
                        "uuid": "0470e792-32f8-46b0-a351-652bc35e9336",
                        "lookup_data": {
                            "mitre-attack-id": "T1613",
                            "mitre-cti:description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
                            "mitre-cti:name": "Container and Resource Discovery",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Containers'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Vishwas Manral, McAfee', 'Center for Threat-Informed Defense (CTID)', 'Yossi Weizman, Azure Defender Research Team'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336', 'type': 'attack-pattern', 'created': '2021-03-31T14:26:00.848Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1613', 'url': 'https://attack.mitre.org/techniques/T1613'}, {'source_name': 'Docker API', 'url': 'https://docs.docker.com/engine/api/v1.41/', 'description': 'Docker. (n.d.). Docker Engine API v1.41 Reference. Retrieved March 31, 2021.'}, {'source_name': 'Kubernetes API', 'url': 'https://kubernetes.io/docs/concepts/overview/kubernetes-api/', 'description': 'The Kubernetes Authors. (n.d.). The Kubernetes API. Retrieved March 29, 2021.'}], 'modified': '2021-04-12T18:22:05.737Z', 'name': 'Container and Resource Discovery', 'description': 'Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\\n\\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'discovery'}], 'x_mitre_detection': 'Establish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\\n\\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. ', 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Pod: Pod Enumeration', 'Container: Container Enumeration'], 'x_mitre_permissions_required': ['User'], 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1613",
                "display_name": "Container and Resource Discovery",
                "atomic_tests": [
                    {
                        "name": "Docker Container and Resource Discovery",
                        "auto_generated_guid": "ea2255df-d781-493b-9693-ac328f9afc3f",
                        "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment.",
                        "supported_platforms": [
                            "containers"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Verify Docker is installed.",
                                "prereq_command": "which docker\n",
                                "get_prereq_command": "if [ \"\" == \"`which docker`\" ]; then echo \"Docker Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install docker ; elif [ -n \"`which yum`\" ]; then sudo yum -y install docker ; fi ; else echo \"Docker installed\"; fi\n"
                            },
                            {
                                "description": "Verify Docker service is running.",
                                "prereq_command": "sudo systemctl status docker --no-pager\n",
                                "get_prereq_command": "sudo systemctl start docker \n"
                            }
                        ],
                        "executor": {
                            "command": "docker build -t t1613 $PathtoAtomicsFolder/T1613/src/\ndocker run --name t1613_container --rm -d -t t1613\ndocker ps\ndocker stats --no-stream\ndocker inspect $(docker ps -l -q --filter ancestor=t1613)",
                            "cleanup_command": "docker stop t1613_container\ndocker rmi -f t1613",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Podman Container and Resource Discovery",
                        "auto_generated_guid": "fc631702-3f03-4f2b-8d8a-6b3d055580a1",
                        "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment.",
                        "supported_platforms": [
                            "containers"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Verify Podman is installed.",
                                "prereq_command": "which podman\n",
                                "get_prereq_command": "if [ \"\" == \"`which podman`\" ]; then echo \"Podman Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install podman ; elif [ -n \"`which yum`\" ]; then sudo yum -y install podman ; elif [ -n \"`which pacman`\" ]; then sudo pacman -Sy podman --noconfirm ; elif [ -n \"`which brew`\" ]; then brew install podman ; else echo \"Unsupported package manager\"; fi ; else echo \"Podman installed\"; fi        \n"
                            },
                            {
                                "description": "Verify Podman service is running.",
                                "prereq_command": "sudo systemctl status podman --no-pager\n",
                                "get_prereq_command": "sudo systemctl start podman \n"
                            }
                        ],
                        "executor": {
                            "command": "podman build -t t1613 $PathtoAtomicsFolder/T1613/src/\npodman run --name t1613_container --rm -d -t t1613\npodman ps\npodman stats --no-stream\npodman inspect $(podman ps -l -q --filter ancestor=t1613)",
                            "cleanup_command": "podman stop t1613_container\npodman rmi -f t1613",
                            "name": "sh"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 19:04:54"
}