{
    "id": "T1553.005",
    "name": "Mark-of-the-Web Bypass",
    "description": "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named `Zone.Identifier` with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",
    "platforms": "Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "File: File Creation, File: File Metadata",
    "detection": "Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
    "url": "https://attack.mitre.org/techniques/T1553/005",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "29e1c216-6408-489d-8a06-ee9d151ef819",
                    "7e7c2fba-7cca-486c-9582-4c1bb2851961",
                    "5947497f-1aa4-41dd-9693-c9848d58727d",
                    "902cedee-0398-4e3a-8183-6f3a89773a96",
                    "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc"
                ],
                "lookup_results": [
                    {
                        "uuid": "29e1c216-6408-489d-8a06-ee9d151ef819",
                        "lookup_data": {
                            "description": "Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.",
                            "raw": "author: frack113\ndate: 2022/02/01\ndescription: Adversaries may abuse container files such as disk image (.iso, .vhd)\n  file formats to deliver malicious payloads that may not be tagged with MOTW.\ndetection:\n  condition: selection\n  selection:\n    ScriptBlockText|contains|all:\n    - 'Mount-DiskImage '\n    - '-ImagePath '\nfalsepositives:\n- Legitimate PowerShell scripts\nid: 29e1c216-6408-489d-8a06-ee9d151ef819\nlevel: low\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image\n- https://docs.microsoft.com/en-us/powershell/module/storage/mount-diskimage?view=windowsserver2022-ps\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1553.005\ntitle: Suspicious Mount-DiskImage\n",
                            "sigma:id": "29e1c216-6408-489d-8a06-ee9d151ef819",
                            "title": "Suspicious Mount-DiskImage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7e7c2fba-7cca-486c-9582-4c1bb2851961",
                        "lookup_data": {
                            "mitre-attack-id": "T1553.005",
                            "mitre-cti:description": "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",
                            "mitre-cti:name": "Mark-of-the-Web Bypass",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Christiaan Beek, @ChristiaanBeek'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--7e7c2fba-7cca-486c-9582-4c1bb2851961', 'created': '2021-02-22T14:20:31.650Z', 'x_mitre_version': '1.1', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1553.005', 'url': 'https://attack.mitre.org/techniques/T1553/005'}, {'source_name': 'Beek Use of VHD Dec 2020', 'url': 'https://medium.com/swlh/investigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316', 'description': 'Beek, C. (2020, December 3). Investigating the Use of VHD Files By Cybercriminals. Retrieved February 22, 2021.'}, {'source_name': 'Outflank MotW 2020', 'url': 'https://outflank.nl/blog/2020/03/30/mark-of-the-web-from-a-red-teams-perspective/', 'description': 'Hegt, S. (2020, March 30). Mark-of-the-Web from a red teamâ€™s perspective. Retrieved February 22, 2021.'}, {'source_name': 'Intezer Russian APT Dec 2020', 'url': 'https://www.intezer.com/blog/research/russian-apt-uses-covid-19-lures-to-deliver-zebrocy/', 'description': \"Kennedy, J. (2020, December 9). A Zebra in Gopher's Clothing: Russian APT Uses COVID-19 Lures to Deliver Zebrocy. Retrieved February 22, 2021.\"}, {'source_name': 'Microsoft Zone.Identifier 2020', 'url': 'https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8', 'description': 'Microsoft. (2020, August 31). Zone.Identifier Stream Name. Retrieved February 22, 2021.'}, {'source_name': 'Disable automount for ISO', 'url': 'https://gist.github.com/wdormann/fca29e0dcda8b5c0472e73e10c78c3e7', 'description': 'wordmann. (2022, February 8). Disable Disc Imgage. Retrieved February 8, 2022.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\\n\\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)', 'modified': '2022-05-05T04:59:32.535Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Mark-of-the-Web Bypass', 'x_mitre_detection': 'Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.(Citation: Disable automount for ISO)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_is_subtechnique': True, 'x_mitre_data_sources': ['File: File Creation', 'File: File Metadata'], 'x_mitre_defense_bypassed': ['Anti-virus', 'Application Control'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5947497f-1aa4-41dd-9693-c9848d58727d",
                        "lookup_data": {
                            "description": "Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.",
                            "raw": "author: frack113\ndate: 2022/02/01\ndescription: Remove the Zone.Identifier alternate data stream which identifies the\n  file as downloaded from the internet.\ndetection:\n  condition: selection\n  selection:\n    ScriptBlockText|contains|all:\n    - 'Unblock-File '\n    - '-Path '\nfalsepositives:\n- Legitimate PowerShell scripts\nid: 5947497f-1aa4-41dd-9693-c9848d58727d\nlevel: medium\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-3---remove-the-zoneidentifier-alternate-data-stream\n- https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/unblock-file?view=powershell-7.2\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1553.005\ntitle: Suspicious Unblock-File\n",
                            "sigma:id": "5947497f-1aa4-41dd-9693-c9848d58727d",
                            "title": "Suspicious Unblock-File",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "902cedee-0398-4e3a-8183-6f3a89773a96",
                        "lookup_data": {
                            "description": "Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.",
                            "raw": "author: frack113\ndate: 2022/02/01\ndescription: Adversaries may abuse container files such as disk image (.iso, .vhd)\n  file formats to deliver malicious payloads that may not be tagged with MOTW.\ndetection:\n  condition: selection\n  selection:\n    ScriptBlockText|contains|all:\n    - 'Mount-DiskImage '\n    - '-ImagePath '\n    - Get-Volume\n    - .DriveLetter\n    - 'invoke-item '\n    - ):\\\nfalsepositives:\n- Legitimate PowerShell scripts\nid: 902cedee-0398-4e3a-8183-6f3a89773a96\nlevel: medium\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-2---mount-an-iso-image-and-run-executable-from-the-iso\n- https://docs.microsoft.com/en-us/powershell/module/storage/mount-diskimage?view=windowsserver2022-ps\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1553.005\ntitle: Suspicious Invoke-Item From Mount-DiskImage\n",
                            "sigma:id": "902cedee-0398-4e3a-8183-6f3a89773a96",
                            "title": "Suspicious Invoke-Item From Mount-DiskImage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc",
                        "lookup_data": {
                            "description": "Unwrapping Ursnifs Gifts - The DFIR Report",
                            "link": "http://www.botvrij.eu/data/feed-osint/4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1674763285",
                            "uuid": "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1553.005",
                "display_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
                "atomic_tests": [
                    {
                        "name": "Mount ISO image",
                        "auto_generated_guid": "002cca30-4778-4891-878a-aaffcfa502fa",
                        "description": "Mounts ISO image downloaded from internet to evade Mark-of-the-Web. Upon successful execution, powershell will download the .iso from the Atomic Red Team repo, and mount the image. The provided sample ISO simply has a Reports shortcut file in it. Reference: https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "path_of_iso": {
                                "description": "Path to ISO file",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1553.005\\bin\\T1553.005.iso"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "T1553.005.iso must exist on disk at specified location (#{path_of_iso})\n",
                                "prereq_command": "if (Test-Path \"#{path_of_iso}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{path_of_iso}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1553.005/bin/T1553.005.iso -OutFile \"#{path_of_iso}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "Mount-DiskImage -ImagePath \"#{path_of_iso}\"\n",
                            "cleanup_command": "Dismount-DiskImage -ImagePath \"#{path_of_iso}\" | Out-Null\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Mount an ISO image and run executable from the ISO",
                        "auto_generated_guid": "42f22b00-0242-4afc-a61b-0da05041f9cc",
                        "description": "Mounts an ISO image downloaded from internet to evade Mark-of-the-Web and run hello.exe executable from the ISO. \nUpon successful execution, powershell will download the .iso from the Atomic Red Team repo, mount the image, and run the executable from the ISO image that will open command prompt echoing \"Hello, World!\". \nISO provided by:https://twitter.com/mattifestation/status/1398323532988399620 Reference:https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/,  ",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "path_of_iso": {
                                "description": "Path to ISO file",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1553.005\\bin\\FeelTheBurn.iso"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "FeelTheBurn.iso must exist on disk at specified location (#{path_of_iso})\n",
                                "prereq_command": "if (Test-Path \"#{path_of_iso}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{path_of_iso}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1553.005/bin/FeelTheBurn.iso -OutFile \"#{path_of_iso}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "Mount-DiskImage -ImagePath \"#{path_of_iso}\" -StorageType ISO -Access ReadOnly\n$keep = Get-Volume -FileSystemLabel \"TestIso\"\n$driveLetter = ($keep | Get-Volume).DriveLetter\ninvoke-item \"$($driveLetter):\\hello.exe\"\n",
                            "cleanup_command": "Dismount-DiskImage -ImagePath \"#{path_of_iso}\" | Out-Null\nStop-process -name \"hello\" -Force -ErrorAction ignore\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Remove the Zone.Identifier alternate data stream",
                        "auto_generated_guid": "64b12afc-18b8-4d3f-9eab-7f6cae7c73f9",
                        "description": "Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.\nRemoving this allows more freedom in executing scripts in PowerShell and avoids opening files in protected view.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_to_download": {
                                "description": "File that will be downloaded to test against.",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/README.md"
                            },
                            "file_path": {
                                "description": "File to have the Zone.Identifier removed.",
                                "type": "string",
                                "default": "$env:tmp\\ReadMe.md"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "A test file with the Zone.Identifier attribute must be present.",
                                "prereq_command": "if (Test-Path #{file_path}) { EXIT 0 } else { EXIT 1 }\n",
                                "get_prereq_command": "Invoke-WebRequest #{file_to_download} -OutFile #{file_path}\nSet-Content -Path #{file_path} -Stream Zone.Identifier -Value '[ZoneTransfer]','ZoneId=3'\n"
                            }
                        ],
                        "executor": {
                            "command": "Unblock-File -Path #{file_path}\n",
                            "cleanup_command": "Set-Content -Path #{file_path} -Stream Zone.Identifier -Value '[ZoneTransfer]','ZoneId=3'\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Execute LNK file from ISO",
                        "auto_generated_guid": "c2587b8d-743d-4985-aa50-c83394eaeb68",
                        "description": "Executes LNK file document.lnk from AllTheThings.iso. Link file executes cmd.exe and rundll32 to in order to load and execute AllTheThingsx64.dll from the ISO which spawns calc.exe.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "path_of_iso": {
                                "description": "Path to ISO file",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1553.005\\bin\\AllTheThings.iso"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "AllTheThings.iso must exist on disk at specified location (#{path_of_iso})\n",
                                "prereq_command": "if (Test-Path \"#{path_of_iso}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{path_of_iso}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1553.005/bin/AllTheThings.iso -OutFile \"#{path_of_iso}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "Mount-DiskImage -ImagePath \"#{path_of_iso}\" -StorageType ISO -Access ReadOnly\n$keep = Get-Volume -FileSystemLabel \"AllTheThings\"\n$driveLetter = ($keep | Get-Volume).DriveLetter\n$instance = [activator]::CreateInstance([type]::GetTypeFromCLSID(\"{c08afd90-f2a1-11d1-8455-00a0c91f3880}\"))\n$instance.Document.Application.ShellExecute($driveLetter+\":\\document.lnk\",\"\",$driveLetter+\":\\\",$null,0)\n",
                            "cleanup_command": "Dismount-DiskImage -ImagePath \"#{path_of_iso}\" | Out-Null\n",
                            "name": "powershell"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:10:58"
}