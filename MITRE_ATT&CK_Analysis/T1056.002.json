{
    "id": "T1056.002",
    "name": "GUI Input Capture",
    "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](T1548.002)).\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](T1059.002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](T1059.001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems attackers may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](T1059.004)).(Citation: Spoofing credential dialogs)",
    "platforms": "macOS, Windows, Linux",
    "kill_chain_phases": "Collection, Credential Access",
    "data_sources": "Script: Script Execution, Command: Command Execution, Process: Process Creation",
    "detection": "Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs)\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.",
    "url": "https://attack.mitre.org/techniques/T1056/002",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "a2029942-0a85-4947-b23c-ca434698171d",
                    "c9192ad9-75e5-43eb-8647-82a0a5b493e3",
                    "9ae01559-cf7e-4f8e-8e14-4c290a1b4784",
                    "60f1ce20-484e-41bd-85f4-ac4afec2c541"
                ],
                "lookup_results": [
                    {
                        "uuid": "a2029942-0a85-4947-b23c-ca434698171d",
                        "lookup_data": {
                            "capec": "CAPEC-659",
                            "mitre-attack-id": "T1056.002",
                            "mitre-cti:description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) ",
                            "mitre-cti:name": "GUI Input Capture",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['macOS', 'Windows', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Matthew Molyett, @s1air, Cisco Talos'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--a2029942-0a85-4947-b23c-ca434698171d', 'type': 'attack-pattern', 'created': '2020-02-11T18:58:45.908Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1056.002', 'url': 'https://attack.mitre.org/techniques/T1056/002'}, {'external_id': 'CAPEC-659', 'source_name': 'capec', 'url': 'https://capec.mitre.org/data/definitions/659.html'}, {'url': 'https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html', 'description': 'Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.', 'source_name': 'OSX Malware Exploits MacKeeper'}, {'source_name': 'LogRhythm Do You Trust Oct 2014', 'url': 'https://logrhythm.com/blog/do-you-trust-your-computer/', 'description': 'Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018.'}, {'url': 'https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/', 'description': 'Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.', 'source_name': 'OSX Keydnap malware'}, {'source_name': 'Spoofing credential dialogs', 'url': 'https://embracethered.com/blog/posts/2021/spoofing-credential-dialogs/', 'description': 'Johann Rehberger. (2021, April 18). Spoofing credential dialogs on macOS Linux and Windows. Retrieved August 19, 2021.'}, {'source_name': 'Enigma Phishing for Credentials Jan 2015', 'url': 'https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/', 'description': 'Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018.'}], 'modified': '2022-03-08T21:05:20.136Z', 'name': 'GUI Input Capture', 'description': 'Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\\n\\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) ', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'collection'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'credential-access'}], 'x_mitre_detection': 'Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs) \\n\\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources. ', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.2', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Command: Command Execution', 'Process: Process Creation', 'Script: Script Execution'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c9192ad9-75e5-43eb-8647-82a0a5b493e3",
                        "lookup_data": {
                            "description": "In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool \"Mouse Lock\" as being used for both credential access and collection in security incidents.",
                            "raw": "author: Cian Heasley\ndate: 2020/08/13\ndescription: In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate\n  tool \"Mouse Lock\" as being used for both credential access and collection in security\n  incidents.\ndetection:\n  condition: selection\n  selection:\n  - Product|contains: Mouse Lock\n  - Company|contains: Misc314\n  - CommandLine|contains: Mouse Lock_\nfalsepositives:\n- Legitimate uses of Mouse Lock software\nfields:\n- Product\n- Company\n- CommandLine\nid: c9192ad9-75e5-43eb-8647-82a0a5b493e3\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://github.com/klsecservices/Publications/blob/657deb6a6eb6e00669afd40173f425fb49682eaa/Incident-Response-Analyst-Report-2020.pdf\n- https://sourceforge.net/projects/mouselock/\nstatus: test\ntags:\n- attack.credential_access\n- attack.collection\n- attack.t1056.002\ntitle: Mouse Lock Credential Gathering\n",
                            "sigma:id": "c9192ad9-75e5-43eb-8647-82a0a5b493e3",
                            "title": "Mouse Lock Credential Gathering",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9ae01559-cf7e-4f8e-8e14-4c290a1b4784",
                        "lookup_data": {
                            "description": "Detects potential use of UIPromptForCredentials functions by looking for some of the DLLs needed for it.",
                            "raw": "author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)\ndate: 2020/10/20\ndescription: Detects potential use of UIPromptForCredentials functions by looking\n  for some of the DLLs needed for it.\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_contains:\n    Image|contains: \\AppData\\Local\\Microsoft\\OneDrive\\\n    Image|startswith: C:\\Users\\\n  filter_end:\n    Image|endswith:\n    - \\opera_autoupdate.exe\n    - \\procexp64.exe\n    - \\procexp.exe\n  filter_full:\n    Image:\n    - C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe\n    - C:\\Windows\\explorer.exe\n  filter_regedit:\n    Image: C:\\Windows\\regedit.exe\n  filter_spotify_aurora:\n    CommandLine|contains: C:\\Program Files\\WindowsApps\\SpotifyAB.SpotifyMusic_\n    Provider_Name: Microsoft-Windows-Kernel-Process\n  filter_start:\n    Image|startswith:\n    - C:\\Windows\\System32\\\n    - C:\\Windows\\SysWOW64\\\n    - C:\\Program Files\\\n    - C:\\Program Files (x86)\\\n  filter_user:\n    Image|endswith:\n    - \\AppData\\Roaming\\Spotify\\Spotify.exe\n    - \\AppData\\Local\\Microsoft\\Teams\\current\\Teams.exe\n    - \\AppData\\Local\\Microsoft\\Teams\\stage\\Teams.exe\n    Image|startswith: C:\\Users\\\n  selection:\n  - ImageLoaded|endswith:\n    - \\credui.dll\n    - \\wincredui.dll\n  - OriginalFileName:\n    - credui.dll\n    - wincredui.dll\nfalsepositives:\n- Other legitimate processes loading those DLLs in your environment.\nid: 9ae01559-cf7e-4f8e-8e14-4c290a1b4784\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2023/01/20\nreferences:\n- https://securitydatasets.com/notebooks/small/windows/06_credential_access/SDWIN-201020013208.html\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.002/T1056.002.md#atomic-test-2---powershell---prompt-user-for-password\n- https://docs.microsoft.com/en-us/windows/win32/api/wincred/nf-wincred-creduipromptforcredentialsa\nstatus: experimental\ntags:\n- attack.credential_access\n- attack.collection\n- attack.t1056.002\ntitle: UIPromptForCredentials DLLs\n",
                            "sigma:id": "9ae01559-cf7e-4f8e-8e14-4c290a1b4784",
                            "title": "UIPromptForCredentials DLLs",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "60f1ce20-484e-41bd-85f4-ac4afec2c541",
                        "lookup_data": {
                            "description": "Detects attempts to use system dialog prompts to capture user credentials",
                            "raw": "author: remotephone, oscd.community\ndate: 2020/10/13\ndescription: Detects attempts to use system dialog prompts to capture user credentials\ndetection:\n  condition: all of selection*\n  selection1:\n    Image: /usr/sbin/osascript\n  selection2:\n    CommandLine|contains|all:\n    - -e\n    - display\n    - dialog\n    - answer\n  selection3:\n    CommandLine|contains:\n    - admin\n    - administrator\n    - authenticate\n    - authentication\n    - credentials\n    - pass\n    - password\n    - unlock\nfalsepositives:\n- Legitimate administration tools and activities\nid: 60f1ce20-484e-41bd-85f4-ac4afec2c541\nlevel: low\nlogsource:\n  category: process_creation\n  product: macos\nmodified: 2022/12/25\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.002/T1056.002.md\n- https://scriptingosx.com/2018/08/user-interaction-from-bash-scripts/\nstatus: test\ntags:\n- attack.credential_access\n- attack.t1056.002\ntitle: GUI Input Capture - macOS\n",
                            "sigma:id": "60f1ce20-484e-41bd-85f4-ac4afec2c541",
                            "title": "GUI Input Capture - macOS",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1056.002",
                "display_name": "Input Capture: GUI Input Capture",
                "atomic_tests": [
                    {
                        "name": "AppleScript - Prompt User for Password",
                        "auto_generated_guid": "76628574-0bc1-4646-8fe2-8f4427b47d15",
                        "description": "Prompt User for Password (Local Phishing)\nReference: http://fuzzynop.blogspot.com/2014/10/osascript-for-local-phishing.html\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "executor": {
                            "command": "osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n",
                            "name": "bash"
                        }
                    },
                    {
                        "name": "PowerShell - Prompt User for Password",
                        "auto_generated_guid": "2b162bfd-0928-4d4c-9ec3-4d9f88374b52",
                        "description": "Prompt User for Password (Local Phishing) as seen in Stitch RAT. Upon execution, a window will appear for the user to enter their credentials.\n\nReference: https://github.com/nathanlopez/Stitch/blob/master/PyLib/askpass.py\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "AppleScript - Spoofing a credential prompt using osascript",
                        "auto_generated_guid": "b7037b89-947a-427a-ba29-e7e9f09bc045",
                        "description": "Prompt user for password without requiring permissions to send Apple events to System Settings.\nhttps://embracethered.com/blog/posts/2021/spoofing-credential-dialogs/\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "executor": {
                            "command": "PWD_SPOOF=$(osascript -e 'display dialog \"To perform a security update MacOS needs your passphrase.\" with title \"MacOS Security Update\" default answer \"\" with icon stop with hidden answer')\necho $PWD_SPOOF\n",
                            "name": "bash"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 11:58:03"
}