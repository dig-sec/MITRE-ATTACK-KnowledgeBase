{
    "id": "T1562.008",
    "name": "Disable Cloud Logs",
    "description": "An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection.\nCloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an attacker has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic)",
    "platforms": "IaaS",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Cloud Service: Cloud Service Modification, Cloud Service: Cloud Service Disable",
    "detection": "Monitor logs for API calls to disable logging. In AWS, monitor for: `StopLogging` and `DeleteTrail`.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: `google.logging.v2.ConfigServiceV2.UpdateSink`.(Citation: Configuring Data Access audit logs)  In Azure, monitor for `az monitor diagnostic-settings delete`.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled.",
    "url": "https://attack.mitre.org/techniques/T1562/008",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "cacc40da-4c9e-462c-80d5-fd70a178b12d"
                ],
                "lookup_results": [
                    {
                        "uuid": "cacc40da-4c9e-462c-80d5-fd70a178b12d",
                        "lookup_data": {
                            "mitre-attack-id": "T1562.008",
                            "mitre-cti:description": "An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. \n\nCloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic)",
                            "mitre-cti:name": "Disable Cloud Logs",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['IaaS'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Syed Ummar Farooqh, McAfee', 'Prasad Somasamudram, McAfee', 'Sekhar Sarukkai, McAfee', 'Ibrahim Ali Khan', 'Alex Soler, AttackIQ', 'Janantha Marasinghe', 'Matt Snyder, VMware'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d', 'type': 'attack-pattern', 'created': '2020-10-12T13:52:32.846Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1562.008', 'url': 'https://attack.mitre.org/techniques/T1562/008'}, {'source_name': 'Following the CloudTrail: Generating strong AWS security signals with Sumo Logic', 'url': 'https://expel.io/blog/following-cloudtrail-generating-aws-security-signals-sumo-logic/', 'description': 'Dan Whalen. (2019, September 10). Following the CloudTrail: Generating strong AWS security signals with Sumo Logic. Retrieved October 16, 2020.'}, {'source_name': 'Stopping CloudTrail from Sending Events to CloudWatch Logs', 'url': 'https://docs.aws.amazon.com/awscloudtrail/latest/userguide/stop-cloudtrail-from-sending-events-to-cloudwatch-logs.html', 'description': 'Amazon Web Services. (n.d.). Stopping CloudTrail from Sending Events to CloudWatch Logs. Retrieved October 16, 2020.'}, {'source_name': 'Configuring Data Access audit logs', 'url': 'https://cloud.google.com/logging/docs/audit/configure-data-access', 'description': 'Google. (n.d.). Configuring Data Access audit logs. Retrieved October 16, 2020.'}, {'source_name': 'az monitor diagnostic-settings', 'url': 'https://docs.microsoft.com/en-us/cli/azure/monitor/diagnostic-settings?view=azure-cli-latest#az_monitor_diagnostic_settings_delete', 'description': 'Microsoft. (n.d.). az monitor diagnostic-settings. Retrieved October 16, 2020.'}], 'modified': '2022-03-08T21:55:27.505Z', 'name': 'Disable Cloud Logs', 'description': 'An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. \\n\\nCloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Monitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.(Citation: Configuring Data Access audit logs)  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.2', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Cloud Service: Cloud Service Modification', 'Cloud Service: Cloud Service Disable'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1562.008",
                "display_name": "Impair Defenses: Disable Cloud Logs",
                "atomic_tests": [
                    {
                        "name": "AWS - CloudTrail Changes",
                        "auto_generated_guid": "9c10dc6b-20bd-403a-8e67-50ef7d07ed4e",
                        "description": "Creates a new cloudTrail in AWS, Upon successful creation it will Update,Stop and Delete the cloudTrail\n",
                        "supported_platforms": [
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "cloudtrail_name": {
                                "description": "Name of the cloudTrail",
                                "type": "string",
                                "default": "redatomictesttrail"
                            },
                            "s3_bucket_name": {
                                "description": "Name of the bucket",
                                "type": "string",
                                "default": "redatomic-test"
                            },
                            "region": {
                                "description": "Name of the region",
                                "type": "string",
                                "default": "us-east-1"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS default profile using: aws configure\n"
                            },
                            {
                                "description": "Check if terraform is installed.\n",
                                "prereq_command": "terraform version\n",
                                "get_prereq_command": "echo Please install the terraform and configure your aws default profile \n"
                            },
                            {
                                "description": "Check if the dependency resources are already present.\n",
                                "prereq_command": "if [ -f \"$PathToAtomicsFolder/T1562.008/src/T1562.008-1/terraform.tfstate\" ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "cd \"$PathToAtomicsFolder/T1562.008/src/T1562.008-1/\"\nterraform init\nterraform apply -auto-approve\n"
                            }
                        ],
                        "executor": {
                            "command": "aws cloudtrail update-trail --name #{cloudtrail_name} --s3-bucket-name #{s3_bucket_name}  --is-multi-region-trail --region #{region}\naws cloudtrail stop-logging --name #{cloudtrail_name} --region #{region}\naws cloudtrail delete-trail --name #{cloudtrail_name} --region #{region}\n",
                            "cleanup_command": "cd \"$PathToAtomicsFolder/T1562.008/src/T1562.008-1/\"\nterraform destroy -auto-approve\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Azure - Eventhub Deletion",
                        "auto_generated_guid": "5e09bed0-7d33-453b-9bf3-caea32bff719",
                        "description": "Identifies an Event Hub deletion in Azure.\nAn Event Hub is an event processing service that ingests and processes large volumes of events and data.\nAn adversary may delete an Event Hub in an attempt to evade detection.\nhttps://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-about.\n",
                        "supported_platforms": [
                            "iaas:azure"
                        ],
                        "input_arguments": {
                            "username": {
                                "description": "Azure username",
                                "type": "string",
                                "default": null
                            },
                            "password": {
                                "description": "Azure password",
                                "type": "string",
                                "default": null
                            },
                            "event_hub_name": {
                                "description": "Name of the eventhub",
                                "type": "string",
                                "default": "test_eventhub"
                            },
                            "resource_group": {
                                "description": "Name of the resource group",
                                "type": "string",
                                "default": null
                            },
                            "name_space_name": {
                                "description": "Name of the NameSpace",
                                "type": "string",
                                "default": null
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Install-Module -Name Az\n",
                                "prereq_command": "try {if (Get-InstalledModule -Name AzureAD -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
                                "get_prereq_command": "Install-Module -Name AzureAD -Force\n"
                            },
                            {
                                "description": "Check if terraform is installed.\n",
                                "prereq_command": "terraform version\n",
                                "get_prereq_command": "echo Please install the terraform.\n"
                            },
                            {
                                "description": "Check if the user is logged into Azure.\n",
                                "prereq_command": "az account show\n",
                                "get_prereq_command": "echo Configure your Azure account using: az login. \n"
                            },
                            {
                                "description": "Create dependency resources using terraform\n",
                                "prereq_command": "try {if (Test-Path \"$PathToAtomicsFolder/T1562.008/src/T1562.008-2/terraform.tfstate\" ){ exit 0 } else {exit 1}} catch {exit 1}\n",
                                "get_prereq_command": "cd \"$PathToAtomicsFolder/T1562.008/src/T1562.008-2/\"\nterraform init\nterraform apply -auto-approve\n"
                            }
                        ],
                        "executor": {
                            "command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd\nConnect-AzureAD -Credential $creds\nRemove-AzEventHub -ResourceGroupName #{resource_group} -Namespace #{name_space_name} -Name #{event_hub_name}\n",
                            "name": "powershell",
                            "elevation_required": false,
                            "cleanup_command": "cd \"$PathToAtomicsFolder/T1562.008/src/T1562.008-2/\"\nterraform destroy -auto-approve\n"
                        }
                    },
                    {
                        "name": "Office 365 - Exchange Audit Log Disabled",
                        "auto_generated_guid": "1ee572f3-056c-4632-a7fc-7e7c42b1543c",
                        "description": "You can use the Exchange Management Shell to enable or disable mailbox audit logging for a mailbox.\nUnified or Admin Audit logs are disabled via the Exchange Powershell cmdline.\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/exchange_auditlogdisabled.yaml\n",
                        "supported_platforms": [
                            "office-365"
                        ],
                        "input_arguments": {
                            "username": {
                                "description": "office-365 username",
                                "type": "string",
                                "default": null
                            },
                            "password": {
                                "description": "office-365 password",
                                "type": "string",
                                "default": null
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "ExchangeOnlineManagement PowerShell module must be installed\n",
                                "prereq_command": "$RequiredModule = Get-Module -Name ExchangeOnlineManagement -ListAvailable\nif (-not $RequiredModule) {exit 1}\nif (-not $RequiredModule.ExportedCommands['Connect-ExchangeOnline']) {exit 1} else {exit 0}\n",
                                "get_prereq_command": "Install-Module -Name ExchangeOnlineManagement         \nImport-Module ExchangeOnlineManagement\n"
                            }
                        ],
                        "executor": {
                            "command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd\nConnect-ExchangeOnline -Credential $creds\nSet-AdminAuditLogConfig -UnifiedAuditLogIngestionEnabled $False\n",
                            "cleanup_command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd\nConnect-ExchangeOnline -Credential $creds\nSet-AdminAuditLogConfig -UnifiedAuditLogIngestionEnabled $True\n",
                            "name": "powershell",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS - Disable CloudTrail Logging Through Event Selectors using Stratus",
                        "auto_generated_guid": "a27418de-bdce-4ebd-b655-38f11142bf0c",
                        "description": "Update event selectors in AWS CloudTrail to disable the logging of certain management events to evade defense. This Atomic test leverages a tool called Stratus-Red-Team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-event-selectors/\n",
                        "supported_platforms": [
                            "linux",
                            "macos",
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "stratus_path": {
                                "description": "Path of stratus binary",
                                "type": "path",
                                "default": "$PathToAtomicsFolder/T1562.008/src"
                            },
                            "aws_region": {
                                "description": "AWS region to detonate",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Stratus binary must be present at the (#{stratus_path}/stratus)\n",
                                "prereq_command": "if [ -f #{stratus_path}/stratus ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "if [ \"$(uname)\" == \"Darwin\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nelif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) \n  wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nfi\n"
                            },
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "export AWS_REGION=#{aws_region} \ncd #{stratus_path}\necho \"starting warmup\"\n./stratus warmup aws.defense-evasion.cloudtrail-event-selectors\necho \"starting detonate\"\n./stratus detonate aws.defense-evasion.cloudtrail-event-selectors --force\n",
                            "cleanup_command": "export AWS_REGION=#{aws_region}\necho \"Cleanup detonation\"\ncd #{stratus_path}\n./stratus cleanup --all\nrm -rf stratus*\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS - CloudTrail Logs Impairment Through S3 Lifecycle Rule using Stratus",
                        "auto_generated_guid": "22d89a2f-d475-4895-b2d4-68626d49c029",
                        "description": "This Atomic test will use the Stratus Red Team will first setup a CloudTrail logging into an S3 bucket and will then make an API call to update the lifecycle rule on that S3 bucket with an expiration date of 1 day. This will essentially delete all the logs after one day. Adversaries often do this actiivity to evade detection. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-lifecycle-rule/\n",
                        "supported_platforms": [
                            "linux",
                            "macos",
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "stratus_path": {
                                "description": "Path of stratus binary",
                                "type": "path",
                                "default": "$PathToAtomicsFolder/T1562.008/src"
                            },
                            "aws_region": {
                                "description": "AWS region to detonate",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Stratus binary must be present at the (#{stratus_path}/stratus)\n",
                                "prereq_command": "if [ -f #{stratus_path}/stratus ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "if [ \"$(uname)\" == \"Darwin\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nelif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) \n  wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nfi\n"
                            },
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "export AWS_REGION=#{aws_region} \ncd #{stratus_path}\necho \"starting warmup\"\n./stratus warmup aws.defense-evasion.cloudtrail-lifecycle-rule\necho \"starting detonate\"\n./stratus detonate aws.defense-evasion.cloudtrail-lifecycle-rule --force\n",
                            "cleanup_command": "export AWS_REGION=#{aws_region}\necho \"Cleanup detonation\"\ncd #{stratus_path}\n./stratus cleanup --all\nrm -rf stratus*\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS - Remove VPC Flow Logs using Stratus",
                        "auto_generated_guid": "93c150f5-ad7b-4ee3-8992-df06dec2ac79",
                        "description": "This Atomic will attempt to remove AWS VPC Flow Logs configuration. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.vpc-remove-flow-logs/\n",
                        "supported_platforms": [
                            "linux",
                            "macos",
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "stratus_path": {
                                "description": "Path of stratus binary",
                                "type": "path",
                                "default": "$PathToAtomicsFolder/T1562.008/src"
                            },
                            "aws_region": {
                                "description": "AWS region to detonate",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Stratus binary must be present at the (#{stratus_path}/stratus)\n",
                                "prereq_command": "if [ -f #{stratus_path}/stratus ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "if [ \"$(uname)\" == \"Darwin\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nelif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) \n  wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nfi\n"
                            },
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "export AWS_REGION=#{aws_region} \ncd #{stratus_path}\necho \"starting warmup\"\n./stratus warmup aws.defense-evasion.vpc-remove-flow-logs\necho \"starting detonate\"\n./stratus detonate aws.defense-evasion.vpc-remove-flow-logs --force\n",
                            "cleanup_command": "export AWS_REGION=#{aws_region}\necho \"Cleanup detonation\"\ncd #{stratus_path}\n./stratus cleanup --all\nrm -rf stratus*\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS - CloudWatch Log Group Deletes",
                        "auto_generated_guid": "89422c87-b57b-4a04-a8ca-802bb9d06121",
                        "description": "Creates a new cloudWatch log group in AWS, Upon successful creation it will Delete the group. Attackers can use this technique to evade defenses by \ndeleting the log stream. Once it is deleted, the logs created by the attackers will not be logged. https://www.elastic.co/guide/en/security/current/aws-cloudwatch-log-group-deletion.html#aws-cloudwatch-log-group-deletion\n",
                        "supported_platforms": [
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "cloudwatch_log_group_name": {
                                "description": "Name of the cloudWatch log group",
                                "type": "string",
                                "default": "log-test"
                            },
                            "region": {
                                "description": "Name of the region",
                                "type": "string",
                                "default": "us-east-1"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "aws logs create-log-group --log-group-name #{cloudwatch_log_group_name} --region #{region} --output json\necho \"*** Log Group Created ***\"\naws logs delete-log-group --log-group-name #{cloudwatch_log_group_name} --region #{region} --output json\necho \"*** Log Group Deleted ***\"\n",
                            "cleanup_command": null,
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "AWS CloudWatch Log Stream Deletes",
                        "auto_generated_guid": "33ca84bc-4259-4943-bd36-4655dc420932",
                        "description": "Creates a new cloudWatch log stream in AWS, Upon successful creation it will Delete the stream. Attackers can use this technique to evade defenses by \ndeleting the log stream. Once it is deleted, the logs created by the attackers will not be logged. https://www.elastic.co/guide/en/security/current/aws-cloudwatch-log-stream-deletion.html\n",
                        "supported_platforms": [
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "cloudwatch_log_group_name": {
                                "description": "Name of the cloudWatch log group",
                                "type": "string",
                                "default": "test-logs"
                            },
                            "cloudwatch_log_stream_name": {
                                "description": "Name of the cloudWatch log stream",
                                "type": "string",
                                "default": "20150601"
                            },
                            "region": {
                                "description": "Name of the region",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "aws logs create-log-group --log-group-name #{cloudwatch_log_group_name} --region #{region} --output json\necho \"*** Log Group Created ***\"\naws logs create-log-stream --log-group-name #{cloudwatch_log_group_name} --log-stream-name #{cloudwatch_log_stream_name}\necho \"*** Log Stream Created ***\"\naws logs delete-log-stream --log-group-name #{cloudwatch_log_group_name} --log-stream-name #{cloudwatch_log_stream_name}\necho \"*** Log Stream Deleted ***\"\naws logs delete-log-group --log-group-name #{cloudwatch_log_group_name} --region #{region} --output json\necho \"*** Log Group Deleted ***\"\n",
                            "cleanup_command": null,
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Office 365 - Set Audit Bypass For a Mailbox",
                        "auto_generated_guid": "c9a2f6fe-7197-488c-af6d-10c782121ca6",
                        "description": "Use Exchange Management Shell to Mailbox auditing to bypass. It will prevent any mailbox audit logging entries being generated for the target e-mail box.\nhttps://learn.microsoft.com/en-us/powershell/module/exchange/set-mailboxauditbypassassociation?view=exchange-ps\n",
                        "supported_platforms": [
                            "office-365"
                        ],
                        "input_arguments": {
                            "username": {
                                "description": "office-365 username",
                                "type": "string",
                                "default": "o365_user_test"
                            },
                            "password": {
                                "description": "office-365 password",
                                "type": "string",
                                "default": "o365_password_test"
                            },
                            "target_email": {
                                "description": "office-365 target_email",
                                "type": "string",
                                "default": "o365_email_test"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "ExchangeOnlineManagement PowerShell module must be installed\n",
                                "prereq_command": "$RequiredModule = Get-Module -Name ExchangeOnlineManagement -ListAvailable\nif (-not $RequiredModule) {exit 1}\nif (-not $RequiredModule.ExportedCommands['Connect-ExchangeOnline']) {exit 1} else {exit 0}\n",
                                "get_prereq_command": "Install-Module -Name ExchangeOnlineManagement         \nImport-Module ExchangeOnlineManagement\n"
                            }
                        ],
                        "executor": {
                            "command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd\nConnect-ExchangeOnline -Credential $creds\nSet-MailboxAuditBypassAssociation -Identity \"#{target_email}\" -AuditBypassEnabled $true\n",
                            "cleanup_command": "$secure_pwd = \"#{password}\" | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $secure_pwd\nConnect-ExchangeOnline -Credential $creds\nSet-MailboxAuditBypassAssociation -Identity \"#{target_email}\" -AuditBypassEnabled $false\nDisconnect-ExchangeOnline -Confirm:$false\n",
                            "name": "powershell",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "GCP - Delete Activity Event Log",
                        "auto_generated_guid": "d56152ec-01d9-42a2-877c-aac1f6ebe8e6",
                        "description": "GCP provides 4 types of Cloud Audit Logs: Admin Activity, Data Access, System Events, and Policy Denied.\nAn adversary may attempt to delete logs in order to hide their activity. However, Admin Activity, System Events, and Policy Deny events logs cannot be deleted. \n\nThis Atomic attempts to delete the Activity Event log. An event is generated under the method name of `google.logging.v2.LoggingServiceV2.DeleteLog` with a Serverity of `ERROR`.\n",
                        "supported_platforms": [
                            "iaas:gcp"
                        ],
                        "input_arguments": {
                            "project-id": {
                                "description": "ID of the GCP Project you to execute the command against.",
                                "type": "string",
                                "default": "atomic-project-1"
                            }
                        },
                        "executor": {
                            "name": "sh",
                            "elevation_required": false,
                            "command": "gcloud config set project #{project-id}\ngcloud logging logs delete projects/#{project-id}/logs/cloudaudit.googleapis.com%2Factivity --quiet\n"
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Requires gcloud\n",
                                "prereq_command": "if [ -x \"$(command -v gcloud)\" ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "echo \"Please Install Google Cloud SDK before running this atomic test : https://cloud.google.com/sdk/docs/install\"\n"
                            },
                            {
                                "description": "Check if user is logged in \n",
                                "prereq_command": "gcloud config get-value account\n",
                                "get_prereq_command": "gcloud auth login --no-launch-browser\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:46:17"
}