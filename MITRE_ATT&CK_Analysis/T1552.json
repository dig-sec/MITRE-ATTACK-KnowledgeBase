{
    "id": "T1552",
    "name": "Unsecured Credentials",
    "description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](T1552.003)), operating system or application-specific repositories (e.g. [Credentials in Registry](T1552.002)), or other specialized files/artifacts (e.g. [Private Keys](T1552.004)).",
    "platforms": "Windows, Azure AD, Office 365, SaaS, IaaS, Linux, macOS, Google Workspace, Containers",
    "kill_chain_phases": "Credential Access",
    "data_sources": "Command: Command Execution, File: File Access, Process: Process Creation, User Account: User Account Authentication, Windows Registry: Windows Registry Key Access",
    "detection": "While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](T1078) for more information.\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\nMonitoring when the user's `.bash_history` is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like `cat ~/.bash_history`.\nAdditionally, monitor processes for applications that can be used to query the Registry, such as [Reg](S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
    "url": "https://attack.mitre.org/techniques/T1552",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "4b1c186d-8bf2-4297-9cbc-f8f00192770b",
                    "459a2970-bb84-4e6a-a32e-ff0fbd99448d",
                    "74298991-9fc4-460e-a92e-511aa60baec1",
                    "b831353c-1971-477b-abb6-2828edc3bca1",
                    "1b45b0d1-773f-4f23-aedc-814b759563b1",
                    "80eeab92-0979-4152-942d-96749e11df40",
                    "a61a3c56-4ce2-4351-a079-88ae4cbd2b58",
                    "6ad91e31-53df-4826-bd27-0166171c8040",
                    "435dfb86-2697-4867-85b5-2fef496c0517"
                ],
                "lookup_results": [
                    {
                        "uuid": "4b1c186d-8bf2-4297-9cbc-f8f00192770b",
                        "lookup_data": {
                            "description": "Prynt Stealer Spotted In the Wild - A New Info Stealer Performing Clipper And Keylogger Activities",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/4b1c186d-8bf2-4297-9cbc-f8f00192770b.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1666601854",
                            "uuid": "4b1c186d-8bf2-4297-9cbc-f8f00192770b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "459a2970-bb84-4e6a-a32e-ff0fbd99448d",
                        "lookup_data": {
                            "description": "Identifies when a key vault is modified or deleted.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/16\ndescription: Identifies when a key vault is modified or deleted.\ndetection:\n  condition: selection\n  selection:\n    operationName:\n    - MICROSOFT.KEYVAULT/VAULTS/WRITE\n    - MICROSOFT.KEYVAULT/VAULTS/DELETE\n    - MICROSOFT.KEYVAULT/VAULTS/DEPLOY/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/ACCESSPOLICIES/WRITE\nfalsepositives:\n- Key Vault being modified or deleted may be performed by a system administrator.\n- Verify whether the user identity, user agent, and/or hostname should be making changes\n  in your environment.\n- Key Vault modified or deleted from unfamiliar users should be investigated. If known\n  behavior is causing false positives, it can be exempted from the rule.\nid: 459a2970-bb84-4e6a-a32e-ff0fbd99448d\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/08/23\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations\nstatus: experimental\ntags:\n- attack.impact\n- attack.credential_access\n- attack.t1552\n- attack.t1552.001\ntitle: Azure Key Vault Modified or Deleted\n",
                            "sigma:id": "459a2970-bb84-4e6a-a32e-ff0fbd99448d",
                            "title": "Azure Key Vault Modified or Deleted",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "74298991-9fc4-460e-a92e-511aa60baec1",
                        "lookup_data": {
                            "description": "Detects when a new owner is added to an application. This gives that account privileges to make modifications and configuration changes to the application.",
                            "raw": "author: Mark Morowczynski '@markmorow', Bailey Bercik '@baileybercik'\ndate: 2022/06/02\ndescription: Detects when a new owner is added to an application. This gives that\n  account privileges to make modifications and configuration changes to the application.\ndetection:\n  condition: selection\n  selection:\n    properties.message: Add owner to application\nfalsepositives:\n- When a new application owner is added by an administrator\nid: 74298991-9fc4-460e-a92e-511aa60baec1\nlevel: medium\nlogsource:\n  product: azure\n  service: auditlogs\nreferences:\n- https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/security-operations-applications#new-owner\nstatus: experimental\ntags:\n- attack.t1552\n- attack.credential_access\ntitle: Added Owner To Application\n",
                            "sigma:id": "74298991-9fc4-460e-a92e-511aa60baec1",
                            "title": "Added Owner To Application",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b831353c-1971-477b-abb6-2828edc3bca1",
                        "lookup_data": {
                            "description": "Identifies when secrets are modified or deleted in Azure.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/16\ndescription: Identifies when secrets are modified or deleted in Azure.\ndetection:\n  condition: selection\n  selection:\n    operationName:\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/WRITE\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/DELETE\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/BACKUP/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/PURGE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/UPDATE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/RECOVER/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/RESTORE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/SECRETS/SETSECRET/ACTION\nfalsepositives:\n- Secrets being modified or deleted may be performed by a system administrator.\n- Verify whether the user identity, user agent, and/or hostname should be making changes\n  in your environment.\n- Secrets modified or deleted from unfamiliar users should be investigated. If known\n  behavior is causing false positives, it can be exempted from the rule.\nid: b831353c-1971-477b-abb6-2828edc3bca1\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/08/23\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations\nstatus: experimental\ntags:\n- attack.impact\n- attack.credential_access\n- attack.t1552\n- attack.t1552.001\ntitle: Azure Keyvault Secrets Modified or Deleted\n",
                            "sigma:id": "b831353c-1971-477b-abb6-2828edc3bca1",
                            "title": "Azure Keyvault Secrets Modified or Deleted",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1b45b0d1-773f-4f23-aedc-814b759563b1",
                        "lookup_data": {
                            "description": "Detects when a configuration change is made to an applications AppID URI.",
                            "raw": "author: Mark Morowczynski '@markmorow', Bailey Bercik '@baileybercik'\ndate: 2022/06/02\ndescription: Detects when a configuration change is made to an applications AppID\n  URI.\ndetection:\n  condition: selection\n  selection:\n    properties.message:\n    - Update Application\n    - Update Service principal\nfalsepositives:\n- When and administrator is making legitimate AppID URI configuration changes to an\n  application. This should be a planned event.\nid: 1b45b0d1-773f-4f23-aedc-814b759563b1\nlevel: high\nlogsource:\n  product: azure\n  service: auditlogs\nreferences:\n- https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/security-operations-applications#appid-uri-added-modified-or-removed\nstatus: experimental\ntags:\n- attack.persistence\n- attack.credential_access\n- attack.privilege_escalation\n- attack.t1552\n- attack.t1078.004\ntitle: Application AppID Uri Configuration Changes\n",
                            "sigma:id": "1b45b0d1-773f-4f23-aedc-814b759563b1",
                            "title": "Application AppID Uri Configuration Changes",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "80eeab92-0979-4152-942d-96749e11df40",
                        "lookup_data": {
                            "description": "Identifies when a Keyvault Key is modified or deleted in Azure.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/16\ndescription: Identifies when a Keyvault Key is modified or deleted in Azure.\ndetection:\n  condition: selection\n  selection:\n    operationName:\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/UPDATE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/CREATE\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/CREATE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/IMPORT/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/RECOVER/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/RESTORE/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/DELETE\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/BACKUP/ACTION\n    - MICROSOFT.KEYVAULT/VAULTS/KEYS/PURGE/ACTION\nfalsepositives:\n- Key being modified or deleted may be performed by a system administrator.\n- Verify whether the user identity, user agent, and/or hostname should be making changes\n  in your environment.\n- Key modified or deleted from unfamiliar users should be investigated. If known behavior\n  is causing false positives, it can be exempted from the rule.\nid: 80eeab92-0979-4152-942d-96749e11df40\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/08/23\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations\nstatus: experimental\ntags:\n- attack.impact\n- attack.credential_access\n- attack.t1552\n- attack.t1552.001\ntitle: Azure Keyvault Key Modified or Deleted\n",
                            "sigma:id": "80eeab92-0979-4152-942d-96749e11df40",
                            "title": "Azure Keyvault Key Modified or Deleted",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a61a3c56-4ce2-4351-a079-88ae4cbd2b58",
                        "lookup_data": {
                            "description": "Identifies when an admission controller is executed in Azure Kubernetes.\nA Kubernetes Admission controller intercepts, and possibly modifies, requests to the Kubernetes API server.\nThe behavior of this admission controller is determined by an admission webhook (MutatingAdmissionWebhook or ValidatingAdmissionWebhook) that the user deploys in the cluster.\nAn adversary can use such webhooks as the MutatingAdmissionWebhook for obtaining persistence in the cluster.\nFor example, attackers can intercept and modify the pod creation operations in the cluster and add their malicious container to every created pod.\nAn adversary can use the webhook ValidatingAdmissionWebhook, which could be used to obtain access credentials.\nAn adversary could use the webhook to intercept the requests to the API server, record secrets, and other sensitive information.\n",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/11/25\ndescription: 'Identifies when an admission controller is executed in Azure Kubernetes.\n\n  A Kubernetes Admission controller intercepts, and possibly modifies, requests to\n  the Kubernetes API server.\n\n  The behavior of this admission controller is determined by an admission webhook\n  (MutatingAdmissionWebhook or ValidatingAdmissionWebhook) that the user deploys in\n  the cluster.\n\n  An adversary can use such webhooks as the MutatingAdmissionWebhook for obtaining\n  persistence in the cluster.\n\n  For example, attackers can intercept and modify the pod creation operations in the\n  cluster and add their malicious container to every created pod.\n\n  An adversary can use the webhook ValidatingAdmissionWebhook, which could be used\n  to obtain access credentials.\n\n  An adversary could use the webhook to intercept the requests to the API server,\n  record secrets, and other sensitive information.\n\n  '\ndetection:\n  condition: selection\n  selection:\n    operationName|endswith:\n    - /MUTATINGWEBHOOKCONFIGURATIONS/WRITE\n    - /VALIDATINGWEBHOOKCONFIGURATIONS/WRITE\n    operationName|startswith:\n    - MICROSOFT.KUBERNETES/CONNECTEDCLUSTERS/ADMISSIONREGISTRATION.K8S.IO\n    - MICROSOFT.CONTAINERSERVICE/MANAGEDCLUSTERS/ADMISSIONREGISTRATION.K8S.IO\nfalsepositives:\n- Azure Kubernetes Admissions Controller may be done by a system administrator.\n- If known behavior is causing false positives, it can be exempted from the rule.\nid: a61a3c56-4ce2-4351-a079-88ae4cbd2b58\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/12/18\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations#microsoftkubernetes\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1078\n- attack.credential_access\n- attack.t1552\n- attack.t1552.007\ntitle: Azure Kubernetes Admission Controller\n",
                            "sigma:id": "a61a3c56-4ce2-4351-a079-88ae4cbd2b58",
                            "title": "Azure Kubernetes Admission Controller",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6ad91e31-53df-4826-bd27-0166171c8040",
                        "lookup_data": {
                            "description": "Identifies when an admission controller is executed in GCP Kubernetes.\nA Kubernetes Admission controller intercepts, and possibly modifies, requests to the Kubernetes API server.\nThe behavior of this admission controller is determined by an admission webhook (MutatingAdmissionWebhook or ValidatingAdmissionWebhook) that the user deploys in the cluster.\nAn adversary can use such webhooks as the MutatingAdmissionWebhook for obtaining persistence in the cluster.\nFor example, attackers can intercept and modify the pod creation operations in the cluster and add their malicious container to every created pod. An adversary can use the webhook ValidatingAdmissionWebhook, which could be used to obtain access credentials.\nAn adversary could use the webhook to intercept the requests to the API server, record secrets, and other sensitive information.\n",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/11/25\ndescription: 'Identifies when an admission controller is executed in GCP Kubernetes.\n\n  A Kubernetes Admission controller intercepts, and possibly modifies, requests to\n  the Kubernetes API server.\n\n  The behavior of this admission controller is determined by an admission webhook\n  (MutatingAdmissionWebhook or ValidatingAdmissionWebhook) that the user deploys in\n  the cluster.\n\n  An adversary can use such webhooks as the MutatingAdmissionWebhook for obtaining\n  persistence in the cluster.\n\n  For example, attackers can intercept and modify the pod creation operations in the\n  cluster and add their malicious container to every created pod. An adversary can\n  use the webhook ValidatingAdmissionWebhook, which could be used to obtain access\n  credentials.\n\n  An adversary could use the webhook to intercept the requests to the API server,\n  record secrets, and other sensitive information.\n\n  '\ndetection:\n  condition: selection\n  selection:\n    gcp.audit.method_name|contains:\n    - .mutatingwebhookconfigurations.\n    - .validatingwebhookconfigurations.\n    gcp.audit.method_name|endswith:\n    - create\n    - patch\n    - replace\n    gcp.audit.method_name|startswith: admissionregistration.k8s.io.v\nfalsepositives:\n- Google Cloud Kubernetes Admission Controller may be done by a system administrator.\n- If known behavior is causing false positives, it can be exempted from the rule.\nid: 6ad91e31-53df-4826-bd27-0166171c8040\nlevel: medium\nlogsource:\n  product: gcp\n  service: gcp.audit\nmodified: 2022/12/18\nreferences:\n- https://cloud.google.com/kubernetes-engine/docs\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1078\n- attack.credential_access\n- attack.t1552\n- attack.t1552.007\ntitle: Google Cloud Kubernetes Admission Controller\n",
                            "sigma:id": "6ad91e31-53df-4826-bd27-0166171c8040",
                            "title": "Google Cloud Kubernetes Admission Controller",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "435dfb86-2697-4867-85b5-2fef496c0517",
                        "lookup_data": {
                            "mitre-attack-id": "T1552",
                            "mitre-cti:description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).",
                            "mitre-cti:name": "Unsecured Credentials",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows', 'Azure AD', 'Office 365', 'SaaS', 'IaaS', 'Linux', 'macOS', 'Google Workspace', 'Containers'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517', 'type': 'attack-pattern', 'created': '2020-02-04T12:47:23.631Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1552', 'url': 'https://attack.mitre.org/techniques/T1552'}], 'modified': '2022-04-01T13:11:11.386Z', 'name': 'Unsecured Credentials', 'description': 'Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'credential-access'}], 'x_mitre_detection': 'While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\\n\\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\\n\\nMonitoring when the user\\'s <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.\\n\\nAdditionally, monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.', 'x_mitre_version': '1.2', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Windows Registry: Windows Registry Key Access', 'Command: Command Execution', 'User Account: User Account Authentication', 'Process: Process Creation', 'File: File Access'], 'x_mitre_permissions_required': ['User', 'Administrator', 'SYSTEM'], 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1552",
                "display_name": "Unsecured Credentials",
                "atomic_tests": [
                    {
                        "name": "AWS - Retrieve EC2 Password Data using stratus",
                        "auto_generated_guid": "a21118de-b11e-4ebd-b655-42f11142df0c",
                        "description": "This atomic runs an API call GetPasswordData from a role that does not have permission to do so. This simulates an attacker attempting to retrieve RDP passwords on a high number of Windows EC2 instances. This atomic test leverages a tool called stratus-red-team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.credential-access.ec2-get-password-data/\n",
                        "supported_platforms": [
                            "linux",
                            "macos",
                            "iaas:aws"
                        ],
                        "input_arguments": {
                            "stratus_path": {
                                "description": "Path of stratus binary",
                                "type": "path",
                                "default": "$PathToAtomicsFolder/T1552/src"
                            },
                            "aws_region": {
                                "description": "AWS region to detonate",
                                "type": "string",
                                "default": "us-west-2"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Stratus binary must be present at the (#{stratus_path}/stratus)\n",
                                "prereq_command": "if [ -f #{stratus_path}/stratus ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "if [ \"$(uname)\" == \"Darwin\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nelif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]\nthen DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Linux_x86_64 | cut -d '\"' -f 4) \n  wget -q -O #{stratus_path}/stratus-red-team-latest.tar.gz $DOWNLOAD_URL\n  tar -xzvf #{stratus_path}/stratus-red-team-latest.tar.gz --directory #{stratus_path}/\nfi\n"
                            },
                            {
                                "description": "Check if ~/.aws/credentials file has a default stanza is configured\n",
                                "prereq_command": "cat ~/.aws/credentials | grep \"default\"\n",
                                "get_prereq_command": "echo Please install the aws-cli and configure your AWS defult profile using: aws configure\n"
                            }
                        ],
                        "executor": {
                            "command": "export AWS_REGION=#{aws_region} \ncd #{stratus_path}\necho \"starting warmup\"\n./stratus warmup aws.credential-access.ec2-get-password-data\necho \"starting detonate\"\n./stratus detonate aws.credential-access.ec2-get-password-data --force\n",
                            "cleanup_command": "export AWS_REGION=#{aws_region}\necho \"Cleanup detonation\"\ncd #{stratus_path}\n./stratus cleanup --all\nrm -rf stratus*\n",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Search for Passwords in Powershell History",
                        "auto_generated_guid": "f9c3d0ab-479b-4019-945f-22ace2b1731a",
                        "description": "Find passwords in the powershell history files\nSearching for following strings: \"password\", \"-p\", \"key\", \"pwd\", \"pass\"\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "ls -R C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt | Select-String \"password\", \"-p\", \"key\", \"pwd\", \"pass\"\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:59:06"
}