{
    "id": "T1547.014",
    "name": "Active Setup",
    "description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\nAdversaries may abuse Active Setup by creating a key under ` HKLMSOFTWAREMicrosoftActive SetupInstalled Components` and setting a malicious value for `StubPath`. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](T1036) to make the Registry entries look as if they are associated with legitimate programs.",
    "platforms": "Windows",
    "kill_chain_phases": "Persistence, Privilege Escalation",
    "data_sources": "Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification, Process: Process Creation, Command: Command Execution",
    "detection": "Monitor Registry key additions and/or modifications to `HKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components`.\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",
    "url": "https://attack.mitre.org/techniques/T1547/014",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "22522668-ddf6-470b-a027-9d6866679f67",
                    "c2c76b77-32be-4d1f-82c9-7e544bdfe0eb"
                ],
                "lookup_results": [
                    {
                        "uuid": "22522668-ddf6-470b-a027-9d6866679f67",
                        "lookup_data": {
                            "mitre-attack-id": "T1547.014",
                            "mitre-cti:description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
                            "mitre-cti:name": "Active Setup",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Bencherchali Nasreddine, @nas_bench, ELIT Security Team (DSSD)'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--22522668-ddf6-470b-a027-9d6866679f67', 'type': 'attack-pattern', 'created': '2020-12-18T16:33:13.098Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1547.014', 'url': 'https://attack.mitre.org/techniques/T1547/014'}, {'source_name': 'Klein Active Setup 2010', 'url': 'https://helgeklein.com/blog/2010/04/active-setup-explained/', 'description': 'Klein, H. (2010, April 22). Active Setup Explained. Retrieved December 18, 2020.'}, {'source_name': 'Mandiant Glyer APT 2010', 'url': 'https://digital-forensics.sans.org/summit-archives/2010/35-glyer-apt-persistence-mechanisms.pdf', 'description': 'Glyer, C. (2010). Examples of Recent APT Persitence Mechanism. Retrieved December 18, 2020.'}, {'source_name': 'Citizenlab Packrat 2015', 'url': 'https://citizenlab.ca/2015/12/packrat-report/', 'description': 'Scott-Railton, J., et al. (2015, December 8). Packrat. Retrieved December 18, 2020.'}, {'source_name': 'FireEye CFR Watering Hole 2012', 'url': 'https://www.fireeye.com/blog/threat-research/2012/12/council-foreign-relations-water-hole-attack-details.html', 'description': 'Kindlund, D. (2012, December 30). CFR Watering Hole Attack Details. Retrieved December 18, 2020.'}, {'source_name': 'SECURELIST Bright Star 2015', 'url': 'https://securelist.com/whos-really-spreading-through-the-bright-star/68978/', 'description': 'Baumgartner, K., Guerrero-Saade, J. (2015, March 4). Whoâ€™s Really Spreading through the Bright Star?. Retrieved December 18, 2020.'}, {'source_name': 'paloalto Tropic Trooper 2016', 'url': 'https://unit42.paloaltonetworks.com/unit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy/', 'description': 'Ray, V., et al. (2016, November 22). Tropic Trooper Targets Taiwanese Government and Fossil Fuel Provider With Poison Ivy. Retrieved December 18, 2020.'}, {'url': 'https://technet.microsoft.com/en-us/sysinternals/bb963902', 'description': 'Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.', 'source_name': 'TechNet Autoruns'}], 'modified': '2021-03-05T22:36:37.414Z', 'name': 'Active Setup', 'description': \"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\\n\\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\\n\\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.\", 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'privilege-escalation'}], 'x_mitre_detection': 'Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\</code>.\\n\\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Windows Registry: Windows Registry Key Modification', 'Process: Process Creation', 'Command: Command Execution', 'Windows Registry: Windows Registry Key Creation'], 'x_mitre_permissions_required': ['Administrator']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c2c76b77-32be-4d1f-82c9-7e544bdfe0eb",
                        "lookup_data": {
                            "description": "Detects potential suspicious behaviour using secedit.exe. Such as exporting or modifying the security policy",
                            "raw": "author: Janantha Marasinghe\ndate: 2022/11/18\ndescription: Detects potential suspicious behaviour using secedit.exe. Such as exporting\n  or modifying the security policy\ndetection:\n  condition: selection_img and (1 of selection_flags_*)\n  selection_flags_configure:\n    CommandLine|contains|all:\n    - /configure\n    - /db\n  selection_flags_discovery:\n    CommandLine|contains|all:\n    - /export\n    - /cfg\n  selection_img:\n  - Image|endswith: \\secedit.exe\n  - OriginalFileName: SeCEdit\nfalsepositives:\n- Legitimate administrative use\nid: c2c76b77-32be-4d1f-82c9-7e544bdfe0eb\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/12/30\nreferences:\n- https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d\n- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/secedit\nstatus: experimental\ntags:\n- attack.discovery\n- attack.persistence\n- attack.defense_evasion\n- attack.credential_access\n- attack.privilege_escalation\n- attack.t1562.002\n- attack.t1547.001\n- attack.t1505.005\n- attack.t1556.002\n- attack.t1562\n- attack.t1574.007\n- attack.t1564.002\n- attack.t1546.008\n- attack.t1546.007\n- attack.t1547.014\n- attack.t1547.010\n- attack.t1547.002\n- attack.t1557\n- attack.t1082\ntitle: Potential Suspicious Activity Using SeCEdit\n",
                            "sigma:id": "c2c76b77-32be-4d1f-82c9-7e544bdfe0eb",
                            "title": "Potential Suspicious Activity Using SeCEdit",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1547.014",
                "display_name": "Active Setup",
                "atomic_tests": [
                    {
                        "name": "HKLM - Add atomic_test key to launch executable as part of user setup",
                        "auto_generated_guid": "deff4586-0517-49c2-981d-bbea24d48d71",
                        "description": "This test will create an \"atomic_test\" key under 'HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components' to launch calc by configuring an active setup executable and \nforcing to run active setup using the \"runonce.exe /AlternateShellStartup\" command. \nWithout the \"runonce.exe /AlternateShellStartup\" command it would run during the next logon for each user.\n\nNote: If you logout before running the cleanup command, you will be required to go through the OOBE (out-of-box experience) setup sequence to log back in. \nThe payload will only run once unless the cleanup command is run in between tests.\n\n[Active Setup Explained](https://helgeklein.com/blog/active-setup-explained/)\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "payload": {
                                "description": "Payload to run once during login",
                                "type": "string",
                                "default": "C:\\Windows\\System32\\calc.exe"
                            }
                        },
                        "executor": {
                            "command": "New-Item \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\" -Name \"atomic_test\" -Force\nSet-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\atomic_test\" \"(Default)\" \"ART TEST\" -Force\nSet-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\atomic_test\" \"StubPath\" \"#{payload}\" -Force \n& $env:SYSTEMROOT\\system32\\runonce.exe /AlternateShellStartup",
                            "cleanup_command": "Remove-Item \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\atomic_test\" -Force -ErrorAction Ignore\nRemove-Item \"HKCU:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\atomic_test\" -Force -ErrorAction Ignore",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "HKLM - Add malicious StubPath value to existing Active Setup Entry",
                        "auto_generated_guid": "39e417dd-4fed-4d9c-ae3a-ba433b4d0e9a",
                        "description": "This test will add a StubPath entry to the Active Setup native registry key associated with 'Internet Explorer Core Fonts' (UUID {C9E9A340-D1F1-11D0-821E-444553540600}) \nSaid key doesn't have a StubPath value by default, by adding one it will launch calc by forcing to run active setup using runonce.exe /AlternateShellStartup. \nWithout the last command it will normally run on next user logon. Note: this test will only run once successfully if no cleanup command is run in between test.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "payload": {
                                "description": "Payload to run once during login",
                                "type": "string",
                                "default": "C:\\Windows\\System32\\calc.exe"
                            }
                        },
                        "executor": {
                            "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{C9E9A340-D1F1-11D0-821E-444553540600}\" \"StubPath\" \"#{payload}\" -Force\n& $env:SYSTEMROOT\\system32\\runonce.exe /AlternateShellStartup",
                            "cleanup_command": "Remove-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{C9E9A340-D1F1-11D0-821E-444553540600}\" -Name \"StubPath\" -Force\nRemove-ItemProperty \"HKCU:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{C9E9A340-D1F1-11D0-821E-444553540600}\" -Name \"Version\" -Force",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "HKLM - re-execute 'Internet Explorer Core Fonts' StubPath payload by decreasing version number",
                        "auto_generated_guid": "04d55cef-f283-40ba-ae2a-316bc3b5e78c",
                        "description": "This test will decrease the version number of the 'Internet Explorer Core Fonts' (UUID {C9E9A340-D1F1-11D0-821E-444553540600}) registry key for the current user, \nwhich will force the StubPath payload (if set) to execute.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "Set-ItemProperty -Path \"HKCU:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{C9E9A340-D1F1-11D0-821E-444553540600}\" -Name \"Version\" -Value \"0,0,0,0\"\n& $env:SYSTEMROOT\\system32\\runonce.exe /AlternateShellStartup\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:48:06"
}