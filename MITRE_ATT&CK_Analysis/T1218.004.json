{
    "id": "T1218.004",
    "name": "InstallUtil",
    "description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) InstallUtil is digitally signed by Microsoft and located in the .NET directories on a Windows system: `C:WindowsMicrosoft.NETFrameworkv<version>InstallUtil.exe` and `C:WindowsMicrosoft.NETFramework64v<version>InstallUtil.exe`.\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute `[System.ComponentModel.RunInstaller(true)]`. (Citation: LOLBAS Installutil)",
    "platforms": "Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Process: Process Creation, Command: Command Execution",
    "detection": "Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
    "url": "https://attack.mitre.org/techniques/T1218/004",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719",
                    "f35d4a9f-881b-46b7-9d8a-887a40bce133",
                    "2cd950a6-16c4-404a-aa01-044322395107"
                ],
                "lookup_results": [
                    {
                        "uuid": "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719",
                        "lookup_data": {
                            "description": "Detects execution of executables that can be used to bypass Applocker whitelisting",
                            "raw": "author: juju4\ndate: 2019/01/16\ndescription: Detects execution of executables that can be used to bypass Applocker\n  whitelisting\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - \\msdt.exe\n    - \\installutil.exe\n    - \\regsvcs.exe\n    - \\regasm.exe\n    - \\msbuild.exe\n    - \\ieexec.exe\nfalsepositives:\n- False positives depend on scripts and administrative tools used in the monitored\n  environment\n- Using installutil to add features for .NET applications (primarily would occur in\n  developer environments)\nid: 82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2020/09/01\nreferences:\n- https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt\n- https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1118\n- attack.t1218.004\n- attack.t1121\n- attack.t1218.009\n- attack.t1127\n- attack.t1127.001\n- attack.t1170\n- attack.t1218.005\n- attack.t1218\ntitle: Possible Applocker Bypass\n",
                            "sigma:id": "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719",
                            "title": "Possible Applocker Bypass",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f35d4a9f-881b-46b7-9d8a-887a40bce133",
                        "lookup_data": {
                            "description": "The SideWalk may be as dangerous as the CROSSWALK",
                            "link": "http://www.botvrij.eu/data/feed-osint/f35d4a9f-881b-46b7-9d8a-887a40bce133.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1630180802",
                            "uuid": "f35d4a9f-881b-46b7-9d8a-887a40bce133",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2cd950a6-16c4-404a-aa01-044322395107",
                        "lookup_data": {
                            "mitre-attack-id": "T1218.004",
                            "mitre-cti:description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)",
                            "mitre-cti:name": "InstallUtil",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Travis Smith, Tripwire', 'Casey Smith'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--2cd950a6-16c4-404a-aa01-044322395107', 'type': 'attack-pattern', 'created': '2020-01-23T19:09:48.811Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1218.004', 'url': 'https://attack.mitre.org/techniques/T1218/004'}, {'source_name': 'MSDN InstallUtil', 'description': 'Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.', 'url': 'https://msdn.microsoft.com/en-us/library/50614e95.aspx'}, {'source_name': 'LOLBAS Installutil', 'url': 'https://lolbas-project.github.io/lolbas/Binaries/Installutil/', 'description': 'LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019.'}], 'modified': '2022-03-11T18:47:52.603Z', 'name': 'InstallUtil', 'description': 'Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\v<version>\\\\InstallUtil.exe</code> and <code>C:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v<version>\\\\InstallUtil.exe</code>.\\n\\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '2.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Process: Process Creation', 'Command: Command Execution'], 'x_mitre_defense_bypassed': ['Digital Certificate Validation', 'Application control'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1218.004",
                "display_name": "Signed Binary Proxy Execution: InstallUtil",
                "atomic_tests": [
                    {
                        "name": "CheckIfInstallable method call",
                        "auto_generated_guid": "ffd9c807-d402-47d2-879d-f915cf2a3a94",
                        "description": "Executes the CheckIfInstallable class constructor runner instead of executing InstallUtil. Upon execution, the InstallUtil test harness will be executed.\nIf no output is displayed the test executed successfuly.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "CheckIfInstallable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallHelper method call",
                        "auto_generated_guid": "d43a5bde-ae28-4c55-a850-3f4c80573503",
                        "description": "Executes the InstallHelper class constructor runner instead of executing InstallUtil. Upon execution, no output will be displayed if the test\nexecuted successfuly.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "InstallHelper"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil class constructor method call",
                        "auto_generated_guid": "9b7a7cfc-dd2e-43f5-a885-c0a3c270dd93",
                        "description": "Executes the installer assembly class constructor. Upon execution, version information will be displayed the .NET framework install utility.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "Executable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil Install method call",
                        "auto_generated_guid": "9f9968a6-601a-46ca-b7b7-6d4fe0f98f0b",
                        "description": "Executes the Install Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "Executable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil Uninstall method call - /U variant",
                        "auto_generated_guid": "34428cfa-8e38-41e5-aff4-9e1f8f3a7b4b",
                        "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "Executable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil Uninstall method call - '/installtype=notransaction /action=uninstall' variant",
                        "auto_generated_guid": "06d9deba-f732-48a8-af8e-bdd6e4d98c1d",
                        "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "Executable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil HelpText method call",
                        "auto_generated_guid": "5a683850-1145-4326-a0e5-e91ced3c6022",
                        "description": "Executes the Uninstall Method. Upon execution, help information will be displayed for InstallUtil.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            },
                            "assembly_dir": {
                                "description": "directory to drop the compiled installer assembly",
                                "type": "path",
                                "default": "$Env:TEMP\\"
                            },
                            "invocation_method": {
                                "description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable",
                                "type": "string",
                                "default": "Executable"
                            },
                            "assembly_filename": {
                                "description": "filename of the compiled installer assembly",
                                "type": "string",
                                "default": "T1218.004.dll"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "InstallUtil evasive invocation",
                        "auto_generated_guid": "559e6d06-bb42-4307-bff7-3b95a8254bad",
                        "description": "Executes an InstallUtil assembly by renaming InstallUtil.exe and using a nonstandard extension for the assembly. Upon execution, \"Running a transacted installation.\"\nwill be displayed, along with other information about the opperation. \"The transacted install has completed.\" will be displayed upon completion.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "test_harness": {
                                "description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1218.004\\src\\InstallUtilTestHarness.ps1"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n",
                                "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{test_harness}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.004/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. \"#{test_harness}\"\n\n$InstallerAssemblyDir = \"$Env:windir\\System32\\Tasks\"\n$InstallerAssemblyFileName = 'readme.txt'\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"readme.txt\"\n$ExpectedOutput = 'Constructor_'\n\n# Explicitly set the directory so that a relative path to readme.txt can be supplied.\nSet-Location \"$Env:windir\\System32\\Tasks\"\n\nCopy-Item -Path \"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe\" -Destination \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n    InstallUtilPath = \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nEvasive Installutil invocation test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n",
                            "cleanup_command": "Remove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.txt\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.InstallLog\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.InstallState\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\notepad.exe\" -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 14:14:18"
}