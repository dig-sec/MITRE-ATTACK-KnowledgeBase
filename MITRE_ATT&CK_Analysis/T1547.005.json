{
    "id": "T1547.005",
    "name": "Security Support Provider",
    "description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\nThe SSP configuration is stored in two Registry keys: `HKLMSYSTEMCurrentControlSetControlLsaSecurity Packages` and `HKLMSYSTEMCurrentControlSetControlLsaOSConfigSecurity Packages`. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",
    "platforms": "Windows",
    "kill_chain_phases": "Persistence, Privilege Escalation",
    "data_sources": "Windows Registry: Windows Registry Key Modification, Module: Module Load, Command: Command Execution",
    "detection": "Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key `HKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exe` with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)",
    "url": "https://attack.mitre.org/techniques/T1547/005",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "5095a853-299c-4876-abd7-ac0050fb5462",
                    "eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc"
                ],
                "lookup_results": [
                    {
                        "uuid": "5095a853-299c-4876-abd7-ac0050fb5462",
                        "lookup_data": {
                            "mitre-attack-id": "T1547.005",
                            "mitre-cti:description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",
                            "mitre-cti:name": "Security Support Provider",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--5095a853-299c-4876-abd7-ac0050fb5462', 'type': 'attack-pattern', 'created': '2020-01-24T17:16:11.806Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1547.005', 'url': 'https://attack.mitre.org/techniques/T1547/005'}, {'url': 'http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html', 'description': 'Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.', 'source_name': 'Graeber 2014'}, {'url': 'https://technet.microsoft.com/en-us/library/dn408187.aspx', 'description': 'Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.', 'source_name': 'Microsoft Configure LSA'}], 'modified': '2020-03-25T15:42:48.910Z', 'name': 'Security Support Provider', 'description': \"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\\n\\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages</code> and <code>HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\", 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'privilege-escalation'}], 'x_mitre_detection': 'Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Command: Command Execution', 'Windows Registry: Windows Registry Key Modification', 'Module: Module Load'], 'x_mitre_permissions_required': ['Administrator']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc",
                        "lookup_data": {
                            "description": "Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.",
                            "raw": "author: iwillkeepwatch\ndate: 2019/01/18\ndescription: Detects the addition of a SSP to the registry. Upon a reboot or API call,\n  SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.\ndetection:\n  condition: selection_registry and not exclusion_images\n  exclusion_images:\n    Image:\n    - C:\\Windows\\system32\\msiexec.exe\n    - C:\\Windows\\syswow64\\MsiExec.exe\n  selection_registry:\n    TargetObject:\n    - HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages\n    - HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages\nfalsepositives:\n- Unlikely\nid: eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc\nlevel: critical\nlogsource:\n  category: registry_event\n  product: windows\nmodified: 2022/08/09\nreferences:\n- https://powersploit.readthedocs.io/en/latest/Persistence/Install-SSP/\nstatus: test\ntags:\n- attack.persistence\n- attack.t1547.005\ntitle: Security Support Provider (SSP) Added to LSA Configuration\n",
                            "sigma:id": "eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc",
                            "title": "Security Support Provider (SSP) Added to LSA Configuration",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1547.005",
                "display_name": "Boot or Logon Autostart Execution: Security Support Provider",
                "atomic_tests": [
                    {
                        "name": "Modify HKLM:\\System\\CurrentControlSet\\Control\\Lsa Security Support Provider configuration in registry",
                        "auto_generated_guid": "afdfd7e3-8a0b-409f-85f7-886fdf249c9e",
                        "description": "Add a value to a Windows registry Security Support Provider pointing to a payload .dll which will normally need to be copied in the system32 folder.\nA common DLL used with this techquite is the minilib.dll from mimikatz, see https://pentestlab.blog/2019/10/21/persistence-security-support-provider/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "$oldvalue = $(Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages');\nSet-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\" -Name 'Security Packages old' -Value \"$oldvalue\";\n$newvalue = \"AtomicTest.dll\";\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $newvalue\n",
                            "cleanup_command": "$oldvalue = $(Get-ItemPropertyValue -Path  \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\" -Name 'Security Packages old' | Select-Object -ExpandProperty 'Security Packages old');\nSet-ItemProperty -Path HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value \"$oldvalue\";\nRemove-ItemProperty -Path  \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\" -Name 'Security Packages old';",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Modify HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig Security Support Provider configuration in registry",
                        "auto_generated_guid": "de3f8e74-3351-4fdb-a442-265dbf231738",
                        "description": "Add a value to a Windows registry SSP key, simulating an adversarial modification of those keys.",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "$oldvalue = $(Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages');\nSet-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\" -Name 'Security Packages old' -Value \"$oldvalue\";\n$newvalue = \"AtomicTest.dll\";\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig -Name 'Security Packages' -Value $newvalue\n",
                            "cleanup_command": "$oldvalue = $(Get-ItemPropertyValue -Path  \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\" -Name 'Security Packages old' | Select-Object -ExpandProperty 'Security Packages old');\nSet-ItemProperty -Path HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig -Name 'Security Packages' -Value \"$oldvalue\";\nRemove-ItemProperty -Path  \"HKLM:\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\" -Name 'Security Packages old';",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:40:04"
}