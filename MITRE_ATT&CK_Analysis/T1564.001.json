{
    "id": "T1564.001",
    "name": "Hidden Files and Directories",
    "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (`dir /a` for Windows and `ls –a` for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
    "platforms": "Windows, macOS, Linux",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "File: File Creation, Process: Process Creation, Command: Command Execution, File: File Metadata",
    "detection": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.",
    "url": "https://attack.mitre.org/techniques/T1564/001",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7",
                    "efec536f-72e8-4656-8960-5e85d091345b",
                    "bb19e94c-59ae-4c15-8c12-c563d23fe52b",
                    "4281cb20-2994-4580-aa63-c8b86d019934",
                    "1547e27c-3974-43e2-a7d7-7f484fb928ec",
                    "ec8fc7e2-b356-455c-8db5-2e37be158e7d",
                    "4ae81040-fc1c-4249-bfa3-938d260214d9",
                    "5a5152f1-463f-436b-b2f5-8eceb3964b42",
                    "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                    "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                    "d08722cd-3d09-449a-80b4-83ea2d9d4616"
                ],
                "lookup_results": [
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7",
                        "lookup_data": {
                            "description": "Detects changes to the registry for the currently logged-in user. In order to disable PowerShell module logging, script block logging or transcription and script execution logging",
                            "raw": "author: frack113\ndate: 2022/04/02\ndescription: Detects changes to the registry for the currently logged-in user. In\n  order to disable PowerShell module logging, script block logging or transcription\n  and script execution logging\ndetection:\n  condition: selection\n  selection:\n    Details: DWORD (0x00000000)\n    EventType: SetValue\n    TargetObject|contains:\n    - \\Microsoft\\Windows\\PowerShell\\\n    - \\Microsoft\\PowerShellCore\\\n    TargetObject|endswith:\n    - \\ModuleLogging\\EnableModuleLogging\n    - \\ScriptBlockLogging\\EnableScriptBlockLogging\n    - \\ScriptBlockLogging\\EnableScriptBlockInvocationLogging\n    - \\Transcription\\EnableTranscripting\n    - \\Transcription\\EnableInvocationHeader\n    - \\EnableScripts\nfalsepositives:\n- Unknown\nid: fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2023/01/20\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-32---windows-powershell-logging-disabled\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: PowerShell Logging Disabled Via Registry Key Tampering\n",
                            "sigma:id": "fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7",
                            "title": "PowerShell Logging Disabled Via Registry Key Tampering",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "efec536f-72e8-4656-8960-5e85d091345b",
                        "lookup_data": {
                            "description": "Detects usage of attrib with \"+s\" option to set suspicious script or executable as system files to hide them from users and make them unable to delete with simple rights. The rule limit the search to specific extensions and directories to avoid FP's",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/06/28\ndescription: Detects usage of attrib with \"+s\" option to set suspicious script or\n  executable as system files to hide them from users and make them unable to delete\n  with simple rights. The rule limit the search to specific extensions and directories\n  to avoid FP's\ndetection:\n  condition: all of selection* and not filter\n  filter:\n    CommandLine|contains|all:\n    - \\Windows\\TEMP\\\n    - .exe\n  selection_cli:\n    CommandLine|contains: ' +s'\n  selection_ext:\n    CommandLine|contains:\n    - .bat\n    - .ps1\n    - .vbe\n    - .vbs\n    - .exe\n  selection_img:\n  - Image|endswith: \\attrib.exe\n  - OriginalFileName: ATTRIB.EXE\n  selection_paths:\n    CommandLine|contains:\n    - ' %'\n    - \\Users\\Public\\\n    - \\AppData\\Local\\\n    - \\ProgramData\\\n    - \\Downloads\\\n    - \\Windows\\Temp\\\nfalsepositives:\n- Unknown\nid: efec536f-72e8-4656-8960-5e85d091345b\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/11\nreferences:\n- https://app.any.run/tasks/c28cabc8-a19f-40f3-a78b-cae506a5c0d4\n- https://app.any.run/tasks/cfc8870b-ccd7-4210-88cf-a8087476a6d0\nrelated:\n- id: bb19e94c-59ae-4c15-8c12-c563d23fe52b\n  type: derived\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Set Suspicious Files as System Files Using Attrib\n",
                            "sigma:id": "efec536f-72e8-4656-8960-5e85d091345b",
                            "title": "Set Suspicious Files as System Files Using Attrib",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bb19e94c-59ae-4c15-8c12-c563d23fe52b",
                        "lookup_data": {
                            "description": "Marks a file as a system file using the attrib.exe utility",
                            "raw": "author: frack113\ndate: 2022/02/04\ndescription: Marks a file as a system file using the attrib.exe utility\ndetection:\n  condition: all of selection_*\n  selection_cli:\n    CommandLine|contains: ' +s '\n  selection_img:\n  - Image|endswith: \\attrib.exe\n  - OriginalFileName: ATTRIB.EXE\nfalsepositives:\n- Unknown\nid: bb19e94c-59ae-4c15-8c12-c563d23fe52b\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/11\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md#atomic-test-3---create-windows-system-file-with-attrib\n- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/attrib\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Set Windows System File with Attrib\n",
                            "sigma:id": "bb19e94c-59ae-4c15-8c12-c563d23fe52b",
                            "title": "Set Windows System File with Attrib",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4281cb20-2994-4580-aa63-c8b86d019934",
                        "lookup_data": {
                            "description": "Detects usage of attrib.exe to hide files from users.",
                            "raw": "author: Sami Ruohonen\ndate: 2019/01/16\ndescription: Detects usage of attrib.exe to hide files from users.\ndetection:\n  condition: all of selection_* and not 1 of filter_*\n  filter_ini:\n    CommandLine|contains: '\\desktop.ini '\n  filter_intel:\n    CommandLine: +R +H +S +A \\\\\\*.cui\n    ParentCommandLine: C:\\\\WINDOWS\\\\system32\\\\\\*.bat\n    ParentImage|endswith: \\cmd.exe\n  selection_cli:\n    CommandLine|contains: ' +h '\n  selection_img:\n  - Image|endswith: \\attrib.exe\n  - OriginalFileName: ATTRIB.EXE\nfalsepositives:\n- IgfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe\n  and igfxCUIService.exe is the parent of the cmd.exe)\n- Msiexec.exe hiding desktop.ini\nfields:\n- CommandLine\n- ParentCommandLine\n- User\nid: 4281cb20-2994-4580-aa63-c8b86d019934\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/11/11\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Hiding Files with Attrib.exe\n",
                            "sigma:id": "4281cb20-2994-4580-aa63-c8b86d019934",
                            "title": "Hiding Files with Attrib.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1547e27c-3974-43e2-a7d7-7f484fb928ec",
                        "lookup_data": {
                            "description": "Detects the modification of the registry to allow a driver or service to persist in Safe Mode.",
                            "raw": "author: frack113\ndate: 2022/04/04\ndescription: Detects the modification of the registry to allow a driver or service\n  to persist in Safe Mode.\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_sophos:\n    Image: C:\\WINDOWS\\system32\\msiexec.exe\n    TargetObject:\n    - HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\SAVService\\(Default)\n    - HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Network\\SAVService\\(Default)\n  selection:\n    Details: Service\n    EventType: Setvalue\n    TargetObject|endswith: \\(Default)\n    TargetObject|startswith:\n    - HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\\n    - HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Network\\\nfalsepositives:\n- Unknown\nid: 1547e27c-3974-43e2-a7d7-7f484fb928ec\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/06/26\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-33---windows-add-registry-value-to-load-service-in-safe-mode-without-network\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-34---windows-add-registry-value-to-load-service-in-safe-mode-with-network\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Registry Persitence via Service in Safe Mode\n",
                            "sigma:id": "1547e27c-3974-43e2-a7d7-7f484fb928ec",
                            "title": "Registry Persitence via Service in Safe Mode",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "ec8fc7e2-b356-455c-8db5-2e37be158e7d",
                        "lookup_data": {
                            "mitre-attack-id": "T1564.001",
                            "mitre-cti:description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                            "mitre-cti:name": "Hidden Files and Directories",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows', 'macOS', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d', 'type': 'attack-pattern', 'created': '2020-02-26T17:46:13.128Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1564.001', 'url': 'https://attack.mitre.org/techniques/T1564/001'}, {'url': 'https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/', 'description': \"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.\", 'source_name': 'Sofacy Komplex Trojan'}, {'url': 'https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/', 'description': 'Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.', 'source_name': 'Antiquated Mac Malware'}, {'url': 'https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf', 'description': 'Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.', 'source_name': 'WireLurker'}], 'modified': '2020-03-29T22:32:25.985Z', 'name': 'Hidden Files and Directories', 'description': 'Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).\\n\\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\\n\\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\\n\\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Process: Process Creation', 'File: File Metadata', 'Command: Command Execution', 'File: File Creation'], 'x_mitre_defense_bypassed': ['Host forensic analysis'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4ae81040-fc1c-4249-bfa3-938d260214d9",
                        "lookup_data": {
                            "description": "Detect use of icacls to deny access for everyone in Users folder sometimes used to hide malicious files",
                            "raw": "author: frack113\ndate: 2022/07/18\ndescription: Detect use of icacls to deny access for everyone in Users folder sometimes\n  used to hide malicious files\ndetection:\n  condition: all of selection*\n  selection_cmd:\n    CommandLine|contains|all:\n    - C:\\Users\\\n    - /deny\n    - '*S-1-1-0:'\n  selection_icacls:\n  - OriginalFileName: iCACLS.EXE\n  - Image|endswith: \\icacls.exe\nfalsepositives:\n- Legitimate use\nid: 4ae81040-fc1c-4249-bfa3-938d260214d9\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://app.any.run/tasks/1df999e6-1cb8-45e3-8b61-499d1b7d5a9b/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Use Icacls to Hide File to Everyone\n",
                            "sigma:id": "4ae81040-fc1c-4249-bfa3-938d260214d9",
                            "title": "Use Icacls to Hide File to Everyone",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5a5152f1-463f-436b-b2f5-8eceb3964b42",
                        "lookup_data": {
                            "description": "Detects modifications to the hidden files keys in registry. This technique is abused by several malware families to hide their files from normal users.",
                            "raw": "author: frack113\ndate: 2022/04/02\ndescription: Detects modifications to the hidden files keys in registry. This technique\n  is abused by several malware families to hide their files from normal users.\ndetection:\n  condition: selection\n  selection:\n    Details: DWORD (0x00000000)\n    EventType: Setvalue\n    TargetObject:\n    - HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden\n    - HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden\nfalsepositives:\n- Unknown\nid: 5a5152f1-463f-436b-b2f5-8eceb3964b42\nlevel: medium\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/06/26\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md#atomic-test-8---hide-files-through-registry\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Modification of Explorer Hidden Keys\n",
                            "sigma:id": "5a5152f1-463f-436b-b2f5-8eceb3964b42",
                            "title": "Modification of Explorer Hidden Keys",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                        "lookup_data": {
                            "description": "FontOnLake: Previously unknown malware family targeting Linux",
                            "link": "http://www.botvrij.eu/data/feed-osint/5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633682506",
                            "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                        "lookup_data": {
                            "description": "UEFI threats moving to the ESP: Introducing ESPecter bootkit",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5df8df26-fe0e-4858-94a7-6cf71d9519c9.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1637336858",
                            "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d08722cd-3d09-449a-80b4-83ea2d9d4616",
                        "lookup_data": {
                            "description": "Detects adversary creating hidden file or directory, by detecting directories or files with . as the first character",
                            "raw": "author: Pawel Mazur\ndate: 2021/09/06\ndescription: Detects adversary creating hidden file or directory, by detecting directories\n  or files with . as the first character\ndetection:\n  arguments:\n  - a1|contains: /.\n  - a1|startswith: .\n  - a2|contains: /.\n  - a2|startswith: .\n  commands:\n    a0:\n    - mkdir\n    - touch\n    - vim\n    - nano\n    - vi\n    type: EXECVE\n  condition: commands and arguments\nfalsepositives:\n- Unknown\nid: d08722cd-3d09-449a-80b4-83ea2d9d4616\nlevel: low\nlogsource:\n  product: linux\n  service: auditd\nmodified: 2022/10/09\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1564.001\ntitle: Hidden Files and Directories\n",
                            "sigma:id": "d08722cd-3d09-449a-80b4-83ea2d9d4616",
                            "title": "Hidden Files and Directories",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1564.001",
                "display_name": "Hide Artifacts: Hidden Files and Directories",
                "atomic_tests": [
                    {
                        "name": "Create a hidden file in a hidden directory",
                        "auto_generated_guid": "61a782e5-9a19-40b5-8ba4-69a4b9f3d7be",
                        "description": "Creates a hidden file inside a hidden directory\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "executor": {
                            "command": "mkdir /var/tmp/.hidden-directory\necho \"T1564.001\" > /var/tmp/.hidden-directory/.hidden-file\n",
                            "cleanup_command": "rm -rf /var/tmp/.hidden-directory/\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Mac Hidden file",
                        "auto_generated_guid": "cddb9098-3b47-4e01-9d3b-6f5f323288a9",
                        "description": "Hide a file on MacOS\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "executor": {
                            "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Create Windows System File with Attrib",
                        "auto_generated_guid": "f70974c8-c094-4574-b542-2c545af95a32",
                        "description": "Creates a file and marks it as a system file using the attrib.exe utility. Upon execution, open the file in file explorer then open Properties > Details\nand observe that the Attributes are \"SA\" for System and Archive.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_to_modify": {
                                "description": "File to modify using Attrib command",
                                "type": "string",
                                "default": "%temp%\\T1564.001.txt"
                            }
                        },
                        "dependency_executor_name": "command_prompt",
                        "dependencies": [
                            {
                                "description": "The file must exist on disk at specified location (#{file_to_modify})\n",
                                "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n",
                                "get_prereq_command": "echo system_Attrib_T1564.001 >> #{file_to_modify}\n"
                            }
                        ],
                        "executor": {
                            "command": "attrib.exe +s #{file_to_modify}\n",
                            "cleanup_command": "del /A:S #{file_to_modify} >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Create Windows Hidden File with Attrib",
                        "auto_generated_guid": "dadb792e-4358-4d8d-9207-b771faa0daa5",
                        "description": "Creates a file and marks it as hidden using the attrib.exe utility.Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes are \"SH\" for System and Hidden.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_to_modify": {
                                "description": "File to modify using Attrib command",
                                "type": "string",
                                "default": "%temp%\\T1564.001.txt"
                            }
                        },
                        "dependency_executor_name": "command_prompt",
                        "dependencies": [
                            {
                                "description": "The file must exist on disk at specified location (#{file_to_modify})\n",
                                "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n",
                                "get_prereq_command": "echo system_Attrib_T1564.001 >> #{file_to_modify}\n"
                            }
                        ],
                        "executor": {
                            "command": "attrib.exe +h #{file_to_modify}\n",
                            "cleanup_command": "del /A:H #{file_to_modify} >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Hidden files",
                        "auto_generated_guid": "3b7015f2-3144-4205-b799-b05580621379",
                        "description": "Requires Apple Dev Tools\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "input_arguments": {
                            "filename": {
                                "description": "path of file to hide",
                                "type": "path",
                                "default": "/tmp/evil"
                            }
                        },
                        "executor": {
                            "command": "setfile -a V #{filename}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Hide a Directory",
                        "auto_generated_guid": "b115ecaf-3b24-4ed2-aefe-2fcb9db913d3",
                        "description": "Hide a directory on MacOS\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "executor": {
                            "command": "touch /var/tmp/T1564.001_mac.txt\nchflags hidden /var/tmp/T1564.001_mac.txt\n",
                            "cleanup_command": "rm /var/tmp/T1564.001_mac.txt\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Show all hidden files",
                        "auto_generated_guid": "9a1ec7da-b892-449f-ad68-67066d04380c",
                        "description": "Show all hidden files on MacOS\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "executor": {
                            "command": "defaults write com.apple.finder AppleShowAllFiles YES\n",
                            "cleanup_command": "defaults write com.apple.finder AppleShowAllFiles NO\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Hide Files Through Registry",
                        "auto_generated_guid": "f650456b-bd49-4bc1-ae9d-271b5b9581e7",
                        "description": "Disable Show Hidden files switch in registry. This technique was abused by several malware to hide their files from normal user.\nSee how this trojan abuses this technique - https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/W32~Tiotua-P/detailed-analysis.aspx \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v ShowSuperHidden /t REG_DWORD /d 0 /f\nreg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v Hidden /t REG_DWORD /d 0 /f\n",
                            "cleanup_command": "reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /v ShowSuperHidden /f >nul 2>&1\nreg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /v Hidden /f >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Create Windows Hidden File with powershell",
                        "auto_generated_guid": "7f66d539-4fbe-4cfa-9a56-4a2bf660c58a",
                        "description": "Creates a file and marks it as hidden through powershell. Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes is \"H\" Hidden.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_to_modify": {
                                "description": "File to modify",
                                "type": "string",
                                "default": "%temp%\\T1564.001-9.txt"
                            }
                        },
                        "dependency_executor_name": "command_prompt",
                        "dependencies": [
                            {
                                "description": "The file must exist on disk at specified location (#{file_to_modify})\n",
                                "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n",
                                "get_prereq_command": "echo system_Attrib_T1564.001-9 >> #{file_to_modify}\n"
                            }
                        ],
                        "executor": {
                            "command": "$file = Get-Item $env:temp\\T1564.001-9.txt -Force\n$file.attributes='Hidden'\n",
                            "cleanup_command": "cmd /c 'del /A:H #{file_to_modify} >nul 2>&1'\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Create Windows System File with powershell",
                        "auto_generated_guid": "d380c318-0b34-45cb-9dad-828c11891e43",
                        "description": "Creates a file and marks it as System through powershell. Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes is \"S\" System.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_to_modify": {
                                "description": "File to modify",
                                "type": "string",
                                "default": "%temp%\\T1564.001-10.txt"
                            }
                        },
                        "dependency_executor_name": "command_prompt",
                        "dependencies": [
                            {
                                "description": "The file must exist on disk at specified location (#{file_to_modify})\n",
                                "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n",
                                "get_prereq_command": "echo system_Attrib_T1564.001-10 >> #{file_to_modify}\n"
                            }
                        ],
                        "executor": {
                            "command": "$file = Get-Item $env:temp\\T1564.001-10.txt -Force\n$file.attributes='System'\n",
                            "cleanup_command": "cmd /c 'del /A:H #{file_to_modify} >nul 2>&1'\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:52:47"
}