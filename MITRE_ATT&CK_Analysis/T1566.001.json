{
    "id": "T1566.001",
    "name": "Spearphishing Attachment",
    "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.",
    "platforms": "macOS, Windows, Linux",
    "kill_chain_phases": "Initial Access",
    "data_sources": "File: File Creation, Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",
    "detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](T1203) or usage of malicious scripts.\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)",
    "url": "https://attack.mitre.org/techniques/T1566/001",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "2e34237d-8574-43f6-aace-ae2915de8597",
                    "932ac737-33ca-4afd-9869-0d48b391fcc9",
                    "28219fd4-56f3-470c-90ae-bdaeb006502e",
                    "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
                    "023394c4-29d5-46ab-92b8-6a534c6f447b",
                    "ff3af8b5-2d14-40ec-9dd2-14e100011e51",
                    "b1c50487-1967-4315-a026-6491686d860e",
                    "0248a7bc-8a9a-4cd8-a57e-3ae8e073a073",
                    "dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c",
                    "295a59c1-7b79-4b47-a930-df12c15fc9c2",
                    "a018fdc3-46a3-44e5-9afb-2cd4af1d4b39",
                    "5a717019-2b96-48ea-aad0-8532d4f1dad2",
                    "2ec1f538-1915-4636-8b38-101cb1efce5e",
                    "864403a1-36c9-40a2-a982-4c9a45f7d833",
                    "d8c0c469-2d3e-437a-80a1-a38bfe5998e8",
                    "42e5a5d8-59d6-4075-9c9d-2d334b9d74e1",
                    "c27515df-97a9-4162-8a60-dc0eeb51b775",
                    "678eb5f4-8597-4be6-8be7-905e4234b53a",
                    "24de4f3b-804c-4165-b442-5a06a2302c7e",
                    "2f9356ae-bf43-41b8-b858-4496d83b2acb",
                    "7a4afb4a-3eb1-4966-9c25-7e1ce2b1eb74",
                    "fdd84c68-a1f6-47c9-9477-920584f94905",
                    "1cdd9a09-06c9-4769-99ff-626e2b3991b8"
                ],
                "lookup_results": [
                    {
                        "uuid": "2e34237d-8574-43f6-aace-ae2915de8597",
                        "lookup_data": {
                            "capec": "CAPEC-163",
                            "mitre-attack-id": "T1566.001",
                            "mitre-cti:description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
                            "mitre-cti:name": "Spearphishing Attachment",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['macOS', 'Windows', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Philip Winther'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597', 'type': 'attack-pattern', 'created': '2020-03-02T19:05:18.137Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1566.001', 'url': 'https://attack.mitre.org/techniques/T1566/001'}, {'external_id': 'CAPEC-163', 'source_name': 'capec', 'url': 'https://capec.mitre.org/data/definitions/163.html'}, {'source_name': 'Microsoft Anti Spoofing', 'url': 'https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide', 'description': 'Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.'}, {'source_name': 'ACSC Email Spoofing', 'url': 'https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf', 'description': 'Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.'}, {'source_name': 'Elastic - Koadiac Detection with EQL', 'url': 'https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql', 'description': 'Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.'}], 'modified': '2021-10-18T17:39:12.452Z', 'name': 'Spearphishing Attachment', 'description': \"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\\n\\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. \", 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'initial-access'}], 'x_mitre_detection': \"Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\\n\\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\\n\\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\\n\\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)\", 'x_mitre_is_subtechnique': True, 'x_mitre_version': '2.2', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Application Log: Application Log Content', 'File: File Creation', 'Network Traffic: Network Traffic Content', 'Network Traffic: Network Traffic Flow']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "932ac737-33ca-4afd-9869-0d48b391fcc9",
                        "lookup_data": {
                            "description": "Detects Ursnif C2 traffic.",
                            "raw": "author: Thomas Patzke\ndate: 2019/12/19\ndescription: Detects Ursnif C2 traffic.\ndetection:\n  b64encoding:\n    c-uri|contains:\n    - _2f\n    - _2b\n  condition: b64encoding and urlpatterns\n  urlpatterns:\n    c-uri|contains|all:\n    - .avi\n    - /images/\nfalsepositives:\n- Unknown\nfields:\n- c-ip\n- c-uri\n- sc-bytes\n- c-ua\nid: 932ac737-33ca-4afd-9869-0d48b391fcc9\nlevel: critical\nlogsource:\n  category: proxy\nmodified: 2021/08/09\nreferences:\n- https://www.fortinet.com/blog/threat-research/ursnif-variant-spreading-word-document.html\nstatus: stable\ntags:\n- attack.initial_access\n- attack.t1566.001\n- attack.execution\n- attack.t1204.002\n- attack.command_and_control\n- attack.t1071.001\ntitle: Ursnif Malware C2 URL Pattern\n",
                            "sigma:id": "932ac737-33ca-4afd-9869-0d48b391fcc9",
                            "title": "Ursnif Malware C2 URL Pattern",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "28219fd4-56f3-470c-90ae-bdaeb006502e",
                        "lookup_data": {
                            "description": "Targeted attack on industrial enterprises and public institutions",
                            "link": "http://www.botvrij.eu/data/feed-osint/28219fd4-56f3-470c-90ae-bdaeb006502e.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1660346860",
                            "uuid": "28219fd4-56f3-470c-90ae-bdaeb006502e",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
                        "lookup_data": {
                            "description": "Detects a suspicious child process of a Microsoft HTML Help system when executing compiled HTML files (.chm)",
                            "raw": "author: Maxim Pavlunin\ndate: 2020/04/01\ndescription: Detects a suspicious child process of a Microsoft HTML Help system when\n  executing compiled HTML files (.chm)\ndetection:\n  condition: 1 of selection_*\n  selection_1:\n    Image|endswith:\n    - \\cmd.exe\n    - \\powershell.exe\n    - \\pwsh.exe\n    - \\wscript.exe\n    - \\cscript.exe\n    - \\regsvr32.exe\n    - \\wmic.exe\n    - \\rundll32.exe\n    - \\MSHTA.EXE\n    - \\CertUtil.exe\n    - \\CertReq.exe\n    - \\MSbuild.exe\n    - \\installutil.exe\n    - \\schtasks.exe\n    - \\msiexec.exe\n    ParentImage:\n    - C:\\Windows\\hh.exe\n    - C:\\Windows\\SysWOW64\\hh.exe\n  selection_2:\n    CommandLine|contains:\n    - .application\n    - \\Downloads\\\n    - \\Content.Outlook\\\n    - \\AppData\\Local\\Temp\\\n    Image|endswith:\n    - \\Windows\\hh.exe\n    - \\Windows\\SysWOW64\\hh.exe\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentCommandLine\nid: 52cad028-0ff0-4854-8f67-d25dfcbc78b4\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/24\nreferences:\n- https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/\n- https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7\n- https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1218.001\n- attack.t1218.010\n- attack.t1218.011\n- attack.execution\n- attack.t1059.001\n- attack.t1059.003\n- attack.t1059.005\n- attack.t1059.007\n- attack.t1047\n- attack.t1566\n- attack.t1566.001\n- attack.initial_access\n- attack.t1218\ntitle: HTML Help Shell Spawn\n",
                            "sigma:id": "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
                            "title": "HTML Help Shell Spawn",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "023394c4-29d5-46ab-92b8-6a534c6f447b",
                        "lookup_data": {
                            "description": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2019/10/24\ndescription: Detects suspicious Hangul Word Processor (Hanword) sub processes that\n  could indicate an exploitation\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\gbb.exe\n    ParentImage|endswith: \\Hwp.exe\nfalsepositives:\n- Unknown\nid: 023394c4-29d5-46ab-92b8-6a534c6f447b\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/\n- https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1\n- https://twitter.com/cyberwar_15/status/1187287262054076416\n- https://blog.alyac.co.kr/1901\n- https://en.wikipedia.org/wiki/Hangul_(word_processor)\nstatus: test\ntags:\n- attack.initial_access\n- attack.t1566.001\n- attack.execution\n- attack.t1203\n- attack.t1059.003\n- attack.g0032\ntitle: Suspicious HWP Sub Processes\n",
                            "sigma:id": "023394c4-29d5-46ab-92b8-6a534c6f447b",
                            "title": "Suspicious HWP Sub Processes",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "ff3af8b5-2d14-40ec-9dd2-14e100011e51",
                        "lookup_data": {
                            "description": "APT34 targets Jordan Government using new Saitama backdoor",
                            "link": "http://www.botvrij.eu/data/feed-osint/ff3af8b5-2d14-40ec-9dd2-14e100011e51.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1652457184",
                            "uuid": "ff3af8b5-2d14-40ec-9dd2-14e100011e51",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b1c50487-1967-4315-a026-6491686d860e",
                        "lookup_data": {
                            "description": "A office file with macro is created from a commandline or a script",
                            "raw": "author: frack113\ndate: 2022/01/23\ndescription: A office file with macro is created from a commandline or a script\ndetection:\n  condition: all of selection_*\n  selection_cmd:\n  - Image|endswith:\n    - \\cmd.exe\n    - \\powershell.exe\n    - \\pwsh.exe\n  - ParentImage|endswith:\n    - \\cmd.exe\n    - \\powershell.exe\n    - \\pwsh.exe\n  selection_ext:\n    TargetFilename|endswith:\n    - .docm\n    - .dotm\n    - .xlsm\n    - .xltm\n    - .potm\n    - .pptm\n    - .pptx\nfalsepositives:\n- Unknown\nid: b1c50487-1967-4315-a026-6491686d860e\nlevel: medium\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/07/14\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1566.001/T1566.001.md\n- https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference\nstatus: experimental\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: Dump Office Macro Files from Commandline\n",
                            "sigma:id": "b1c50487-1967-4315-a026-6491686d860e",
                            "title": "Dump Office Macro Files from Commandline",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0248a7bc-8a9a-4cd8-a57e-3ae8e073a073",
                        "lookup_data": {
                            "description": "Detects the mount of ISO images on an endpoint",
                            "raw": "author: Syed Hasan (@syedhasan009)\ndate: 2021/05/29\ndescription: Detects the mount of ISO images on an endpoint\ndetection:\n  condition: selection and not filter\n  filter:\n    ObjectName: \\Device\\CdRom0\\setup.exe\n  selection:\n    EventID: 4663\n    ObjectName|startswith: \\Device\\CdRom\n    ObjectServer: Security\n    ObjectType: File\nfalsepositives:\n- Software installation ISO files\nid: 0248a7bc-8a9a-4cd8-a57e-3ae8e073a073\nlevel: medium\nlogsource:\n  definition: The advanced audit policy setting \"Object Access > Audit Removable Storage\"\n    must be configured for Success/Failure\n  product: windows\n  service: security\nmodified: 2022/10/05\nreferences:\n- https://www.trendmicro.com/vinfo/hk-en/security/news/cybercrime-and-digital-threats/malicious-spam-campaign-uses-iso-image-files-to-deliver-lokibot-and-nanocore\n- https://www.proofpoint.com/us/blog/threat-insight/threat-actor-profile-ta2719-uses-colorful-lures-deliver-rats-local-languages\n- https://twitter.com/MsftSecIntel/status/1257324139515269121\nstatus: experimental\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: ISO Image Mount\n",
                            "sigma:id": "0248a7bc-8a9a-4cd8-a57e-3ae8e073a073",
                            "title": "ISO Image Mount",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c",
                        "lookup_data": {
                            "description": "Detects attempts to create a DLL file to a known desktop application dependencies folder such as Slack, Teams or OneDrive and by an unusual process. This may indicate an attempt to load a malicious module via DLL search order hijacking.",
                            "raw": "author: Tim Rauch (rule), Elastic (idea)\ndate: 2022/10/21\ndescription: Detects attempts to create a DLL file to a known desktop application\n  dependencies folder such as Slack, Teams or OneDrive and by an unusual process.\n  This may indicate an attempt to load a malicious module via DLL search order hijacking.\ndetection:\n  condition: selection and not filter\n  filter:\n    Image|endswith: \\cmd.exe\n    TargetFilename|contains|all:\n    - \\Users\\\n    - \\AppData\\\n    - \\Microsoft\\OneDrive\\\n    - \\api-ms-win-core-\n  selection:\n    Image|endswith:\n    - \\winword.exe\n    - \\excel.exe\n    - \\powerpnt.exe\n    - \\MSACCESS.EXE\n    - \\MSPUB.EXE\n    - \\fltldr.exe\n    - \\cmd.exe\n    - \\certutil.exe\n    - \\mshta.exe\n    - \\cscript.exe\n    - \\wscript.exe\n    - \\curl.exe\n    - \\powershell.exe\n    - \\pwsh.exe\n    TargetFilename|contains:\n    - \\Microsoft\\OneDrive\\\n    - \\Microsoft OneDrive\\\n    - \\Microsoft\\Teams\\\n    - \\Local\\slack\\app-\n    - \\Local\\Programs\\Microsoft VS Code\\\n    TargetFilename|contains|all:\n    - \\Users\\\n    - \\AppData\\\n    TargetFilename|endswith: .dll\nfalsepositives:\n- Unknown\nid: dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c\nlevel: medium\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-5d46dd4ac6866b4337ec126be8cee0e115467b3e8703794ba6f6df6432c806bc\n- https://posts.specterops.io/automating-dll-hijack-discovery-81c4295904b0\nstatus: experimental\ntags:\n- attack.t1566\n- attack.t1566.001\n- attack.initial_access\n- attack.t1574\n- attack.t1574.001\n- attack.defense_evasion\ntitle: Potential Initial Access via DLL Search Order Hijacking\n",
                            "sigma:id": "dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c",
                            "title": "Potential Initial Access via DLL Search Order Hijacking",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "295a59c1-7b79-4b47-a930-df12c15fc9c2",
                        "lookup_data": {
                            "description": "Alerts on trust record modification within the registry, indicating usage of macros",
                            "raw": "author: Antonlovesdnb\ndate: 2020/02/19\ndescription: Alerts on trust record modification within the registry, indicating usage\n  of macros\ndetection:\n  condition: selection\n  selection:\n    TargetObject|contains: TrustRecords\nfalsepositives:\n- Alerts on legitimate macro usage as well, will need to filter as appropriate\nid: 295a59c1-7b79-4b47-a930-df12c15fc9c2\nlevel: medium\nlogsource:\n  category: registry_event\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://outflank.nl/blog/2018/01/16/hunting-for-evil-detect-macros-being-executed/\n- http://az4n6.blogspot.com/2016/02/more-on-trust-records-macros-and.html\nstatus: test\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: Windows Registry Trust Record Modification\n",
                            "sigma:id": "295a59c1-7b79-4b47-a930-df12c15fc9c2",
                            "title": "Windows Registry Trust Record Modification",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a018fdc3-46a3-44e5-9afb-2cd4af1d4b39",
                        "lookup_data": {
                            "description": "Detects a suspicious program execution in Outlook temp folder",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2019/10/01\ndescription: Detects a suspicious program execution in Outlook temp folder\ndetection:\n  condition: selection\n  selection:\n    Image|contains: \\Temporary Internet Files\\Content.Outlook\\\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentCommandLine\nid: a018fdc3-46a3-44e5-9afb-2cd4af1d4b39\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/09\nstatus: test\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: Execution in Outlook Temp Folder\n",
                            "sigma:id": "a018fdc3-46a3-44e5-9afb-2cd4af1d4b39",
                            "title": "Execution in Outlook Temp Folder",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5a717019-2b96-48ea-aad0-8532d4f1dad2",
                        "lookup_data": {
                            "description": "Return of the Evilnum APT with updated TTPs and new targets",
                            "link": "http://www.botvrij.eu/data/feed-osint/5a717019-2b96-48ea-aad0-8532d4f1dad2.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1656703958",
                            "uuid": "5a717019-2b96-48ea-aad0-8532d4f1dad2",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2ec1f538-1915-4636-8b38-101cb1efce5e",
                        "lookup_data": {
                            "description": "A22-108A TraderTraitor North Korean State-Sponsored APT Targets Blockchain Companies",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/2ec1f538-1915-4636-8b38-101cb1efce5e.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1650976786",
                            "uuid": "2ec1f538-1915-4636-8b38-101cb1efce5e",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "864403a1-36c9-40a2-a982-4c9a45f7d833",
                        "lookup_data": {
                            "description": "Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/02/22\ndescription: Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits\n  for CVE-2017-0261 and CVE-2017-0262\ndetection:\n  condition: selection\n  selection:\n    Image|contains: \\FLTLDR.exe\n    ParentImage|endswith: \\WINWORD.EXE\nfalsepositives:\n- Several false positives identified, check for suspicious file names or locations\n  (e.g. Temp folders)\nid: 864403a1-36c9-40a2-a982-4c9a45f7d833\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.fireeye.com/blog/threat-research/2017/05/eps-processing-zero-days.html\nstatus: test\ntags:\n- attack.execution\n- attack.t1203\n- attack.t1204.002\n- attack.initial_access\n- attack.t1566.001\ntitle: Exploit for CVE-2017-0261\n",
                            "sigma:id": "864403a1-36c9-40a2-a982-4c9a45f7d833",
                            "title": "Exploit for CVE-2017-0261",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d8c0c469-2d3e-437a-80a1-a38bfe5998e8",
                        "lookup_data": {
                            "description": "IndigoZebra APT continues to attack Central Asia with evolving tools",
                            "link": "http://www.botvrij.eu/data/feed-osint/d8c0c469-2d3e-437a-80a1-a38bfe5998e8.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1625229668",
                            "uuid": "d8c0c469-2d3e-437a-80a1-a38bfe5998e8",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "42e5a5d8-59d6-4075-9c9d-2d334b9d74e1",
                        "lookup_data": {
                            "description": "DangerousSavanna: Two-year long campaign targets financial institutions in French-speaking Africa",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/42e5a5d8-59d6-4075-9c9d-2d334b9d74e1.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1662644030",
                            "uuid": "42e5a5d8-59d6-4075-9c9d-2d334b9d74e1",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c27515df-97a9-4162-8a60-dc0eeb51b775",
                        "lookup_data": {
                            "description": "Detects suspicious child processes of the Microsoft OneNote application. This may indicate an attempt to execute malicious embedded objects from a .one file.",
                            "raw": "author: Tim Rauch (rule), Elastic (idea)\ndate: 2022/10/21\ndescription: Detects suspicious child processes of the Microsoft OneNote application.\n  This may indicate an attempt to execute malicious embedded objects from a .one file.\ndetection:\n  condition: selection_parent and 1 of selection_opt*\n  selection_opt_exp:\n    CommandLine|contains:\n    - .hta\n    - .vb\n    - .wsh\n    - .js\n    - .ps\n    - .scr\n    - .pif\n    - .bat\n    - .cmd\n    Image|endswith: \\explorer.exe\n  selection_opt_img:\n    Image|contains:\n    - \\AppData\\\n    - \\Users\\Public\\\n    - \\ProgramData\\\n    - \\Windows\\Tasks\\\n    - \\Windows\\Temp\\\n    - \\Windows\\System32\\Tasks\\\n  selection_opt_name:\n  - OriginalFileName:\n    - RUNDLL32.exe\n    - REGSVR32.exe\n    - bitsadmin.exe\n    - CertUtil.exe\n    - InstallUtil.exe\n    - schtasks.exe\n    - wmic.exe\n    - cscript.exe\n    - wscript.exe\n    - CMSTP.EXE\n    - Microsoft.Workflow.Compiler.exe\n    - RegAsm.exe\n    - RegSvcs.exe\n    - MSHTA.EXE\n    - Msxsl.exe\n    - IEExec.exe\n    - Cmd.Exe\n    - PowerShell.EXE\n    - HH.exe\n    - javaw.exe\n    - pcalua.exe\n    - curl.exe\n    - ScriptRunner.exe\n    - CertOC.exe\n    - WorkFolders.exe\n    - odbcconf.exe\n    - msiexec.exe\n    - msdt.exe\n  - Image|endswith:\n    - \\rundll32.exe\n    - \\regsvr32.exe\n    - \\bitsadmin.exe\n    - \\certutil.exe\n    - \\installutil.exe\n    - \\schtasks.exe\n    - \\wmic.exe\n    - \\cscript.exe\n    - \\wscript.exe\n    - \\cmstp.exe\n    - \\Microsoft.Workflow.Compiler.exe\n    - \\regasm.exe\n    - \\regsvcs.exe\n    - \\mshta.exe\n    - \\msxsl.exe\n    - \\ieexec.exe\n    - \\cmd.exe\n    - \\powershell.exe\n    - \\hh.exe\n    - \\javaw.exe\n    - \\pcalua.exe\n    - \\curl.exe\n    - \\scriptrunner.exe\n    - \\certoc.exe\n    - \\workfolders.exe\n    - \\odbcconf.exe\n    - \\msiexec.exe\n    - \\msdt.exe\n  selection_parent:\n    ParentImage|endswith: \\onenote.exe\nfalsepositives:\n- File located in the AppData folder with trusted signature\nid: c27515df-97a9-4162-8a60-dc0eeb51b775\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/12/30\nreferences:\n- https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-e34e43eb5666427602ddf488b2bf3b545bd9aae81af3e6f6c7949f9652abdf18\nstatus: experimental\ntags:\n- attack.t1566\n- attack.t1566.001\n- attack.initial_access\ntitle: Suspicious Microsoft OneNote Child Process\n",
                            "sigma:id": "c27515df-97a9-4162-8a60-dc0eeb51b775",
                            "title": "Suspicious Microsoft OneNote Child Process",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "678eb5f4-8597-4be6-8be7-905e4234b53a",
                        "lookup_data": {
                            "description": "Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/11/23\ndescription: Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other\n  sub processes like mshta.exe\ndetection:\n  condition: selection\n  selection:\n    ParentImage|endswith: \\EQNEDT32.EXE\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\nid: 678eb5f4-8597-4be6-8be7-905e4234b53a\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.hybrid-analysis.com/sample/2a4ae284c76f868fc51d3bb65da8caa6efacb707f265b25c30f34250b76b7507?environmentId=100\n- https://www.google.com/url?hl=en&q=https://embedi.com/blog/skeleton-closet-ms-office-vulnerability-you-didnt-know-about&source=gmail&ust=1511481120837000&usg=AFQjCNGdL7gVwLXaNSl2Td8ylDYbSJFmPw\nstatus: stable\ntags:\n- attack.execution\n- attack.t1203\n- attack.t1204.002\n- attack.initial_access\n- attack.t1566.001\ntitle: Droppers Exploiting CVE-2017-11882\n",
                            "sigma:id": "678eb5f4-8597-4be6-8be7-905e4234b53a",
                            "title": "Droppers Exploiting CVE-2017-11882",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "24de4f3b-804c-4165-b442-5a06a2302c7e",
                        "lookup_data": {
                            "description": "The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create \"shortcuts\" to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.",
                            "raw": "author: Sreeman\ndate: 2020/03/13\ndescription: The .SettingContent-ms file type was introduced in Windows 10 and allows\n  a user to create \"shortcuts\" to various Windows 10 setting pages. These files are\n  simply XML and contain paths to various Windows 10 settings binaries.\ndetection:\n  condition: selection and not filter\n  filter:\n    CommandLine|contains: immersivecontrolpanel\n  selection:\n    CommandLine|contains: .SettingContent-ms\nfalsepositives:\n- Unknown\nfields:\n- ParentProcess\n- CommandLine\n- ParentCommandLine\nid: 24de4f3b-804c-4165-b442-5a06a2302c7e\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/04/14\nreferences:\n- https://posts.specterops.io/the-tale-of-settingcontent-ms-files-f1ea253e4d39\nstatus: experimental\ntags:\n- attack.t1204\n- attack.t1566.001\n- attack.execution\n- attack.initial_access\ntitle: Arbitrary Shell Command Execution Via Settingcontent-Ms\n",
                            "sigma:id": "24de4f3b-804c-4165-b442-5a06a2302c7e",
                            "title": "Arbitrary Shell Command Execution Via Settingcontent-Ms",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2f9356ae-bf43-41b8-b858-4496d83b2acb",
                        "lookup_data": {
                            "description": "Detects the creation of a ISO file in the Outlook temp folder or in the Appdata temp folder. Typical of Qakbot TTP from end-July 2022.",
                            "raw": "author: '@sam0x90'\ndate: 2022/07/30\ndescription: Detects the creation of a ISO file in the Outlook temp folder or in the\n  Appdata temp folder. Typical of Qakbot TTP from end-July 2022.\ndetection:\n  condition: 1 of selection*\n  selection_1:\n    TargetFilename|contains|all:\n    - \\AppData\\Local\\Temp\\\n    - .zip\\\n    TargetFilename|endswith: .iso\n  selection_2:\n    TargetFilename|contains: \\AppData\\Local\\Microsoft\\Windows\\INetCache\\Content.Outlook\\\n    TargetFilename|endswith: .iso\nfalsepositives:\n- Potential FP by sysadmin opening a zip file containing a legitimate ISO file\nfields:\n- Image\n- ComputerName\n- TargetFileName\nid: 2f9356ae-bf43-41b8-b858-4496d83b2acb\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://twitter.com/Sam0x90/status/1552011547974696960\n- https://securityaffairs.co/wordpress/133680/malware/dll-sideloading-spread-qakbot.html\nstatus: experimental\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: ISO File Created Within Temp Folders\n",
                            "sigma:id": "2f9356ae-bf43-41b8-b858-4496d83b2acb",
                            "title": "ISO File Created Within Temp Folders",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7a4afb4a-3eb1-4966-9c25-7e1ce2b1eb74",
                        "lookup_data": {
                            "description": "Unmasking MirrorFace: Operation LiberalFace targeting Japanese political entities | WeLiveSecurity",
                            "link": "http://www.botvrij.eu/data/feed-osint/7a4afb4a-3eb1-4966-9c25-7e1ce2b1eb74.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1671610618",
                            "uuid": "7a4afb4a-3eb1-4966-9c25-7e1ce2b1eb74",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "fdd84c68-a1f6-47c9-9477-920584f94905",
                        "lookup_data": {
                            "description": "Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/09/15\ndescription: Detects Winword starting uncommon sub process csc.exe as used in exploits\n  for CVE-2017-8759\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\csc.exe\n    ParentImage|endswith: \\WINWORD.EXE\nfalsepositives:\n- Unknown\nid: fdd84c68-a1f6-47c9-9477-920584f94905\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.hybrid-analysis.com/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\n- https://www.reverse.it/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\nstatus: test\ntags:\n- attack.execution\n- attack.t1203\n- attack.t1204.002\n- attack.initial_access\n- attack.t1566.001\ntitle: Exploit for CVE-2017-8759\n",
                            "sigma:id": "fdd84c68-a1f6-47c9-9477-920584f94905",
                            "title": "Exploit for CVE-2017-8759",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1cdd9a09-06c9-4769-99ff-626e2b3991b8",
                        "lookup_data": {
                            "description": "Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns",
                            "raw": "author: Florian Roth (Nextron Systems), @blu3_team (idea)\ndate: 2019/06/26\ndescription: Detects suspicious use of an .exe extension after a non-executable file\n  extension like .pdf.exe, a set of spaces or underlines to cloak the executable file\n  in spear phishing campaigns\ndetection:\n  condition: selection\n  selection:\n    Image|endswith:\n    - .doc.exe\n    - .docx.exe\n    - .xls.exe\n    - .xlsx.exe\n    - .ppt.exe\n    - .pptx.exe\n    - .rtf.exe\n    - .pdf.exe\n    - .txt.exe\n    - '      .exe'\n    - ______.exe\nfalsepositives:\n- Unknown\nid: 1cdd9a09-06c9-4769-99ff-626e2b3991b8\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html\n- https://twitter.com/blackorbird/status/1140519090961825792\nstatus: stable\ntags:\n- attack.initial_access\n- attack.t1566.001\ntitle: Suspicious Double Extension\n",
                            "sigma:id": "1cdd9a09-06c9-4769-99ff-626e2b3991b8",
                            "title": "Suspicious Double Extension",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1566.001",
                "display_name": "Phishing: Spearphishing Attachment",
                "atomic_tests": [
                    {
                        "name": "Download Macro-Enabled Phishing Attachment",
                        "auto_generated_guid": "114ccff9-ae6d-4547-9ead-4cd69f687306",
                        "description": "This atomic test downloads a macro enabled document from the Atomic Red Team GitHub repository, simulating an end user clicking a phishing link to download the file.\nThe file \"PhishingAttachment.xlsm\" is downloaded to the %temp% directory.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "$url = 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1566.001/bin/PhishingAttachment.xlsm'\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nInvoke-WebRequest -Uri $url -OutFile $env:TEMP\\PhishingAttachment.xlsm\n",
                            "name": "powershell",
                            "cleanup_command": "Remove-Item $env:TEMP\\PhishingAttachment.xlsm -ErrorAction Ignore\n"
                        }
                    },
                    {
                        "name": "Word spawned a command shell and used an IP address in the command line",
                        "auto_generated_guid": "cbb6799a-425c-4f83-9194-5447a909d67f",
                        "description": "Word spawning a command prompt then running a command with an IP address in the command line is an indicator of malicious activity.\nUpon execution, CMD will be launched and ping 8.8.8.8.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "jse_path": {
                                "description": "Path for the macro to write out the \"malicious\" .jse file\n",
                                "type": "string",
                                "default": "C:\\Users\\Public\\art.jse"
                            },
                            "ms_product": {
                                "description": "Maldoc application Word or Excel",
                                "type": "string",
                                "default": "Word"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Microsoft #{ms_product} must be installed\n",
                                "prereq_command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
                                "get_prereq_command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"\n"
                            }
                        ],
                        "executor": {
                            "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"ping 8.8.8.8`\"`n\"\nInvoke-MalDoc -macroCode $macrocode -officeProduct \"#{ms_product}\"\n",
                            "cleanup_command": "Remove-Item #{jse_path} -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 17:05:29"
}