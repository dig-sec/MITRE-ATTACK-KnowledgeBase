{
    "id": "T1552.003",
    "name": "Bash History",
    "description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s `.bash_history` file. For each user, this file resides at the same location: `~/.bash_history`. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
    "platforms": "Linux, macOS",
    "kill_chain_phases": "Credential Access",
    "data_sources": "File: File Access, Command: Command Execution",
    "detection": "Monitoring when the user's `.bash_history` is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like `cat ~/.bash_history`.",
    "url": "https://attack.mitre.org/techniques/T1552/003",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "8187bd2a-866f-4457-9009-86b0ddedffa3",
                    "eae8ce9f-bde9-47a6-8e79-f20d18419910",
                    "b094d9fb-b1ad-4650-9f1a-fb7be9f1d34b",
                    "508a9374-ad52-4789-b568-fc358def2c65"
                ],
                "lookup_results": [
                    {
                        "uuid": "8187bd2a-866f-4457-9009-86b0ddedffa3",
                        "lookup_data": {
                            "mitre-attack-id": "T1552.003",
                            "mitre-cti:description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
                            "mitre-cti:name": "Bash History",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3', 'type': 'attack-pattern', 'created': '2020-02-04T13:02:11.685Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1552.003', 'url': 'https://attack.mitre.org/techniques/T1552/003'}, {'url': 'http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way', 'description': 'Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.', 'source_name': 'External to DA, the OS X Way'}], 'modified': '2022-03-08T21:34:44.728Z', 'name': 'Bash History', 'description': 'Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'credential-access'}], 'x_mitre_detection': 'Monitoring when the user\\'s <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Command: Command Execution', 'File: File Access'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "eae8ce9f-bde9-47a6-8e79-f20d18419910",
                        "lookup_data": {
                            "description": "Detects commandline operations on shell history files",
                            "raw": "author: Mikhail Larin, oscd.community\ndate: 2020/10/17\ndescription: Detects commandline operations on shell history files\ndetection:\n  condition: execve and history\n  execve:\n    type: EXECVE\n  history:\n  - .bash_history\n  - .zsh_history\n  - .zhistory\n  - .history\n  - .sh_history\n  - fish_history\nfalsepositives:\n- Legitimate administrative activity\n- Legitimate software, cleaning hist file\nfields:\n- a0\n- a1\n- a2\n- a3\n- key\nid: eae8ce9f-bde9-47a6-8e79-f20d18419910\nlevel: medium\nlogsource:\n  product: linux\n  service: auditd\nmodified: 2022/11/28\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.003/T1552.003.md\nstatus: test\ntags:\n- attack.credential_access\n- attack.t1552.003\ntitle: Suspicious History File Operations - Linux\n",
                            "sigma:id": "eae8ce9f-bde9-47a6-8e79-f20d18419910",
                            "title": "Suspicious History File Operations - Linux",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b094d9fb-b1ad-4650-9f1a-fb7be9f1d34b",
                        "lookup_data": {
                            "description": "See what commands are being input into the device by other people, full credentials can be in the history",
                            "raw": "author: Austin Clark\ndate: 2019/08/11\ndescription: See what commands are being input into the device by other people, full\n  credentials can be in the history\ndetection:\n  condition: keywords\n  keywords:\n  - show history\n  - show history all\n  - show logging\nfalsepositives:\n- Not commonly run by administrators, especially if remote logging is configured\nfields:\n- CmdSet\nid: b094d9fb-b1ad-4650-9f1a-fb7be9f1d34b\nlevel: medium\nlogsource:\n  product: cisco\n  service: aaa\nmodified: 2023/01/04\nstatus: test\ntags:\n- attack.credential_access\n- attack.t1552.003\ntitle: Cisco Show Commands Input\n",
                            "sigma:id": "b094d9fb-b1ad-4650-9f1a-fb7be9f1d34b",
                            "title": "Cisco Show Commands Input",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "508a9374-ad52-4789-b568-fc358def2c65",
                        "lookup_data": {
                            "description": "Detects commandline operations on shell history files",
                            "raw": "author: Mikhail Larin, oscd.community\ndate: 2020/10/17\ndescription: Detects commandline operations on shell history files\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - .bash_history\n    - .zsh_history\n    - .zhistory\n    - .history\n    - .sh_history\n    - fish_history\nfalsepositives:\n- Legitimate administrative activity\n- Legitimate software, cleaning hist file\nid: 508a9374-ad52-4789-b568-fc358def2c65\nlevel: medium\nlogsource:\n  category: process_creation\n  product: macos\nmodified: 2021/11/27\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.003/T1552.003.md\nstatus: test\ntags:\n- attack.credential_access\n- attack.t1552.003\ntitle: Suspicious History File Operations\n",
                            "sigma:id": "508a9374-ad52-4789-b568-fc358def2c65",
                            "title": "Suspicious History File Operations",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1552.003",
                "display_name": "Unsecured Credentials: Bash History",
                "atomic_tests": [
                    {
                        "name": "Search Through Bash History",
                        "auto_generated_guid": "3cfde62b-7c33-4b26-a61e-755d6131c8ce",
                        "description": "Search through bash history for specifice commands we want to capture\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "output_file": {
                                "description": "Path where captured results will be placed",
                                "type": "path",
                                "default": "~/loot.txt"
                            },
                            "bash_history_grep_args": {
                                "description": "grep arguments that filter out specific commands we want to capture",
                                "type": "path",
                                "default": "-e '-p ' -e 'pass' -e 'ssh'"
                            },
                            "bash_history_filename": {
                                "description": "Path of the bash history file to capture",
                                "type": "path",
                                "default": "~/.bash_history"
                            }
                        },
                        "executor": {
                            "command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Search Through sh History",
                        "auto_generated_guid": "d87d3b94-05b4-40f2-a80f-99864ffa6803",
                        "description": "Search through sh history for specifice commands we want to capture\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "output_file": {
                                "description": "Path where captured results will be placed",
                                "type": "path",
                                "default": "~/loot.txt"
                            },
                            "sh_history_grep_args": {
                                "description": "grep arguments that filter out specific commands we want to capture",
                                "type": "path",
                                "default": "-e '-p ' -e 'pass' -e 'ssh'"
                            },
                            "sh_history_filename": {
                                "description": "Path of the sh history file to capture",
                                "type": "path",
                                "default": "~/.history"
                            }
                        },
                        "executor": {
                            "command": "cat #{sh_history_filename} | grep #{sh_history_grep_args} > #{output_file}\n",
                            "name": "sh"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:01:51"
}