{
    "id": "T1610",
    "name": "Deploy Container",
    "description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\nContainers can be deployed by various means, such as via Docker's `create` and `start` APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
    "platforms": "Containers",
    "kill_chain_phases": "Defense Evasion, Execution",
    "data_sources": "Container: Container Creation, Container: Container Start, Pod: Pod Creation, Pod: Pod Modification, Application Log: Application Log Content",
    "detection": "Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.",
    "url": "https://attack.mitre.org/techniques/T1610",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "56e0d8b8-3e25-49dd-9050-3aa252f5aa92"
                ],
                "lookup_results": [
                    {
                        "uuid": "56e0d8b8-3e25-49dd-9050-3aa252f5aa92",
                        "lookup_data": {
                            "mitre-attack-id": "T1610",
                            "mitre-cti:description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
                            "mitre-cti:name": "Deploy Container",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Containers'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Pawan Kinger, @kingerpawan, Trend Micro', 'Alfredo Oliveira, Trend Micro', 'Idan Frimark, Cisco', 'Center for Threat-Informed Defense (CTID)', 'Magno Logan, @magnologan, Trend Micro', 'Ariel Shuper, Cisco', 'Vishwas Manral, McAfee', 'Yossi Weizman, Azure Defender Research Team'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--56e0d8b8-3e25-49dd-9050-3aa252f5aa92', 'type': 'attack-pattern', 'created': '2021-03-29T16:51:26.020Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1610', 'url': 'https://attack.mitre.org/techniques/T1610'}, {'source_name': 'Docker Containers API', 'url': 'https://docs.docker.com/engine/api/v1.41/#tag/Container', 'description': 'Docker. (n.d.). Docker Engine API v1.41 Reference - Container. Retrieved March 29, 2021.'}, {'source_name': 'Kubernetes Dashboard', 'url': 'https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/', 'description': 'The Kubernetes Authors. (n.d.). Kubernetes Web UI (Dashboard). Retrieved March 29, 2021.'}, {'source_name': 'Kubeflow Pipelines', 'url': 'https://www.kubeflow.org/docs/components/pipelines/overview/pipelines-overview/', 'description': 'The Kubeflow Authors. (n.d.). Overview of Kubeflow Pipelines. Retrieved March 29, 2021.'}, {'source_name': 'Aqua Build Images on Hosts', 'url': 'https://blog.aquasec.com/malicious-container-image-docker-container-host', 'description': 'Assaf Morag. (2020, July 15). Threat Alert: Attackers Building Malicious Images on Your Hosts. Retrieved March 29, 2021.'}], 'modified': '2022-04-01T13:14:58.939Z', 'name': 'Deploy Container', 'description': \"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\\n\\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)\", 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'execution'}], 'x_mitre_detection': 'Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.', 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Container: Container Start', 'Container: Container Creation', 'Pod: Pod Modification', 'Application Log: Application Log Content', 'Pod: Pod Creation'], 'x_mitre_permissions_required': ['User', 'root'], 'x_mitre_remote_support': True, 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1610",
                "display_name": "Deploy a container",
                "atomic_tests": [
                    {
                        "name": "Deploy Docker container",
                        "auto_generated_guid": "59aa6f26-7620-417e-9318-589e0fb7a372",
                        "description": "Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime. They can do this using docker create and docker start commands. Kinsing & Doki was exploited using this technique. \n",
                        "supported_platforms": [
                            "containers"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Verify docker is installed.",
                                "prereq_command": "which docker\n",
                                "get_prereq_command": "if [ \"\" == \"`which docker`\" ]; then echo \"Docker Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install docker ; elif [ -n \"`which yum`\" ]; then sudo yum -y install docker ; fi ; else echo \"Docker installed\"; fi\n"
                            },
                            {
                                "description": "Verify docker service is running.",
                                "prereq_command": "sudo systemctl status docker  --no-pager\n",
                                "get_prereq_command": "sudo systemctl start docker\n"
                            }
                        ],
                        "executor": {
                            "command": "docker build -t t1610 $PathtoAtomicsFolder/T1610/src/\ndocker run --name t1610_container --rm -itd t1610 bash /tmp/script.sh\n",
                            "name": "bash",
                            "cleanup_command": "docker stop t1610_container\ndocker rmi -f t1610:latest \n"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 19:02:16"
}