{
    "id": "T1027.002",
    "name": "Software Packing",
    "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018)\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
    "platforms": "macOS, Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "File: File Metadata",
    "detection": "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
    "url": "https://attack.mitre.org/techniques/T1027/002",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "02a470d8-493e-41d9-8367-622460dddbe8",
                    "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                    "cbb56d62-4060-40f7-9466-d8aaf3123f83",
                    "deb98323-e13f-4b0c-8d94-175379069062",
                    "5df8df26-fe0e-4858-94a7-6cf71d9519c9"
                ],
                "lookup_results": [
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "02a470d8-493e-41d9-8367-622460dddbe8",
                        "lookup_data": {
                            "description": "Ransomware Attack Irish on Health Sector",
                            "link": "http://www.botvrij.eu/data/feed-osint/02a470d8-493e-41d9-8367-622460dddbe8.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1621676993",
                            "uuid": "02a470d8-493e-41d9-8367-622460dddbe8",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                        "lookup_data": {
                            "description": "OSINT - Kobalos â€“ A complex Linux threat to high performance computing infrastructure",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/2ebc21a4-5635-4a7d-9553-ec5f58be0ee6.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1612271360",
                            "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cbb56d62-4060-40f7-9466-d8aaf3123f83",
                        "lookup_data": {
                            "description": "Detects the image load of Python Core indicative of a Python script bundled with Py2Exe.",
                            "raw": "author: Patrick St. John, OTR (Open Threat Research)\ndate: 2020/05/03\ndescription: Detects the image load of Python Core indicative of a Python script bundled\n  with Py2Exe.\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_aurora:\n    Image: null\n  filter_generic:\n  - Image|contains: Python\n  - Image|startswith:\n    - C:\\Program Files\\\n    - C:\\Program Files (x86)\\\n    - C:\\ProgramData\\Anaconda3\\\n  selection:\n    Description: Python Core\nfalsepositives:\n- Legitimate Py2Exe Binaries\n- Known false positive caused with Python Anaconda\nfields:\n- Description\nid: cbb56d62-4060-40f7-9466-d8aaf3123f83\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/11/08\nreferences:\n- https://www.py2exe.org/\n- https://unit42.paloaltonetworks.com/unit-42-technical-analysis-seaduke/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1027.002\ntitle: Python Py2Exe Image Load\n",
                            "sigma:id": "cbb56d62-4060-40f7-9466-d8aaf3123f83",
                            "title": "Python Py2Exe Image Load",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "deb98323-e13f-4b0c-8d94-175379069062",
                        "lookup_data": {
                            "capec": "CAPEC-570",
                            "mitre-attack-id": "T1027.002",
                            "mitre-cti:description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ",
                            "mitre-cti:name": "Software Packing",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['macOS', 'Windows', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Filip Kafka, ESET'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--deb98323-e13f-4b0c-8d94-175379069062', 'created': '2020-02-05T14:17:46.686Z', 'x_mitre_version': '1.2', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1027.002', 'url': 'https://attack.mitre.org/techniques/T1027/002'}, {'source_name': 'Awesome Executable Packing', 'url': 'https://github.com/dhondta/awesome-executable-packing', 'description': \"Alexandre D'Hondt. (n.d.). Awesome Executable Packing. Retrieved March 11, 2022.\"}, {'source_name': 'ESET FinFisher Jan 2018', 'url': 'https://www.welivesecurity.com/wp-content/uploads/2018/01/WP-FinFisher.pdf', 'description': \"Kafka, F. (2018, January). ESET's Guide to Deobfuscating and Devirtualizing FinFisher. Retrieved August 12, 2019.\"}, {'url': 'https://capec.mitre.org/data/definitions/570.html', 'source_name': 'capec', 'external_id': 'CAPEC-570'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': \"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  \", 'modified': '2022-04-19T02:09:27.046Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Software Packing', 'x_mitre_detection': 'Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_is_subtechnique': True, 'x_mitre_data_sources': ['File: File Metadata'], 'x_mitre_defense_bypassed': ['Anti-virus', 'Heuristic detection', 'Signature-based detection'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                        "lookup_data": {
                            "description": "UEFI threats moving to the ESP: Introducing ESPecter bootkit",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5df8df26-fe0e-4858-94a7-6cf71d9519c9.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1637336858",
                            "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1027.002",
                "display_name": "Obfuscated Files or Information: Software Packing",
                "atomic_tests": [
                    {
                        "name": "Binary simply packed by UPX (linux)",
                        "auto_generated_guid": "11c46cd8-e471-450e-acb8-52a1216ae6a4",
                        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "bin_path": {
                                "description": "Packed binary",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1027.002/bin/linux/test_upx"
                            }
                        },
                        "executor": {
                            "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n",
                            "cleanup_command": "rm /tmp/packed_bin\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Binary packed by UPX, with modified headers (linux)",
                        "auto_generated_guid": "f06197f8-ff46-48c2-a0c6-afc1b50665e1",
                        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "bin_path": {
                                "description": "Packed binary",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1027.002/bin/linux/test_upx_header_changed"
                            }
                        },
                        "executor": {
                            "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n",
                            "cleanup_command": "rm /tmp/packed_bin\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Binary simply packed by UPX",
                        "auto_generated_guid": "b16ef901-00bb-4dda-b4fc-a04db5067e20",
                        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "input_arguments": {
                            "bin_path": {
                                "description": "Packed binary",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1027.002/bin/darwin/test_upx"
                            }
                        },
                        "executor": {
                            "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n",
                            "cleanup_command": "rm /tmp/packed_bin\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Binary packed by UPX, with modified headers",
                        "auto_generated_guid": "4d46e16b-5765-4046-9f25-a600d3e65e4d",
                        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "input_arguments": {
                            "bin_path": {
                                "description": "Packed binary",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1027.002/bin/darwin/test_upx_header_changed"
                            }
                        },
                        "executor": {
                            "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n",
                            "cleanup_command": "rm /tmp/packed_bin\n",
                            "name": "sh"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 11:07:30"
}