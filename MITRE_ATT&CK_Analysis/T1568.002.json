{
    "id": "T1568.002",
    "name": "Domain Generation Algorithms",
    "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\nAdversaries may use DGAs for the purpose of [Fallback Channels](T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Command and Control",
    "data_sources": "Network Traffic: Network Traffic Flow, Network Traffic: Network Connection Creation",
    "detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)",
    "url": "https://attack.mitre.org/techniques/T1568/002",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "19bf6fdb-7721-4f3d-867f-53467f6a5db6",
                    "118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                    "1d08ac94-400d-4469-a82f-daee9a908849"
                ],
                "lookup_results": [
                    {
                        "uuid": "19bf6fdb-7721-4f3d-867f-53467f6a5db6",
                        "lookup_data": {
                            "description": "Detects an executable accessing an ngrok tunneling endpoint, which could be a sign of forbidden exfiltration of data exfiltration by malicious actors",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/11/03\ndescription: Detects an executable accessing an ngrok tunneling endpoint, which could\n  be a sign of forbidden exfiltration of data exfiltration by malicious actors\ndetection:\n  condition: selection\n  selection:\n    DestinationHostname|contains:\n    - tunnel.us.ngrok.com\n    - tunnel.eu.ngrok.com\n    - tunnel.ap.ngrok.com\n    - tunnel.au.ngrok.com\n    - tunnel.sa.ngrok.com\n    - tunnel.jp.ngrok.com\n    - tunnel.in.ngrok.com\nfalsepositives:\n- Legitimate use of ngrok\nid: 19bf6fdb-7721-4f3d-867f-53467f6a5db6\nlevel: high\nlogsource:\n  category: network_connection\n  product: linux\nreferences:\n- https://twitter.com/hakluke/status/1587733971814977537/photo/1\n- https://ngrok.com/docs/secure-tunnels/tunnels/ssh-reverse-tunnel-agent\nstatus: experimental\ntags:\n- attack.exfiltration\n- attack.command_and_control\n- attack.t1567\n- attack.t1568.002\n- attack.t1572\n- attack.t1090\n- attack.t1102\n- attack.s0508\ntitle: Communication To Ngrok Tunneling Service - Linux\n",
                            "sigma:id": "19bf6fdb-7721-4f3d-867f-53467f6a5db6",
                            "title": "Communication To Ngrok Tunneling Service - Linux",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                        "lookup_data": {
                            "mitre-attack-id": "T1568.002",
                            "mitre-cti:description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                            "mitre-cti:name": "Domain Generation Algorithms",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Ryan Benson, Exabeam', 'Barry Shteiman, Exabeam', 'Sylvain Gil, Exabeam'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd', 'type': 'attack-pattern', 'created': '2020-03-10T17:44:59.787Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1568.002', 'url': 'https://attack.mitre.org/techniques/T1568/002'}, {'source_name': 'Cybereason Dissecting DGAs', 'url': 'http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf', 'description': 'Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019.'}, {'source_name': 'Cisco Umbrella DGA', 'url': 'https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/', 'description': 'Scarfo, A. (2016, October 10). Domain Generation Algorithms – Why so effective?. Retrieved February 18, 2019.'}, {'source_name': 'Unit 42 DGA Feb 2019', 'url': 'https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/', 'description': 'Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019.'}, {'url': 'http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html', 'description': 'Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.', 'source_name': 'Talos CCleanup 2017'}, {'source_name': 'Akamai DGA Mitigation', 'url': 'https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html', 'description': 'Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019.'}, {'url': 'https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html', 'description': 'Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.', 'source_name': 'FireEye POSHSPY April 2017'}, {'source_name': 'ESET Sednit 2017 Activity', 'url': 'https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/', 'description': 'ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.'}, {'source_name': 'Data Driven Security DGA', 'url': 'https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/', 'description': 'Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.'}, {'source_name': 'Pace University Detecting DGA May 2017', 'url': 'http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf', 'description': 'Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019.'}, {'source_name': 'Elastic Predicting DGA', 'url': 'https://arxiv.org/pdf/1611.00791.pdf', 'description': 'Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019.'}], 'modified': '2022-03-11T18:26:23.432Z', 'name': 'Domain Generation Algorithms', 'description': 'Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\\n\\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\\n\\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'command-and-control'}], 'x_mitre_detection': 'Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\\n\\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Network Traffic: Network Traffic Flow'], 'x_mitre_permissions_required': ['User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1d08ac94-400d-4469-a82f-daee9a908849",
                        "lookup_data": {
                            "description": "Detects an executable accessing an ngrok tunneling endpoint, which could be a sign of forbidden exfiltration of data exfiltration by malicious actors",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/11/03\ndescription: Detects an executable accessing an ngrok tunneling endpoint, which could\n  be a sign of forbidden exfiltration of data exfiltration by malicious actors\ndetection:\n  condition: selection\n  selection:\n    DestinationHostname|contains:\n    - tunnel.us.ngrok.com\n    - tunnel.eu.ngrok.com\n    - tunnel.ap.ngrok.com\n    - tunnel.au.ngrok.com\n    - tunnel.sa.ngrok.com\n    - tunnel.jp.ngrok.com\n    - tunnel.in.ngrok.com\nfalsepositives:\n- Legitimate use of ngrok\nid: 1d08ac94-400d-4469-a82f-daee9a908849\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nreferences:\n- https://twitter.com/hakluke/status/1587733971814977537/photo/1\n- https://ngrok.com/docs/secure-tunnels/tunnels/ssh-reverse-tunnel-agent\nstatus: experimental\ntags:\n- attack.exfiltration\n- attack.command_and_control\n- attack.t1567\n- attack.t1568.002\n- attack.t1572\n- attack.t1090\n- attack.t1102\n- attack.s0508\ntitle: Communication To Ngrok Tunneling Service\n",
                            "sigma:id": "1d08ac94-400d-4469-a82f-daee9a908849",
                            "title": "Communication To Ngrok Tunneling Service",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": []
    },
    "timestamp": "2025-02-28 17:12:44"
}