{
    "id": "T1574.002",
    "name": "DLL Side-Loading",
    "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](T1574.001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
    "platforms": "Windows",
    "kill_chain_phases": "Persistence, Privilege Escalation, Defense Evasion",
    "data_sources": "File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation",
    "detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
    "url": "https://attack.mitre.org/techniques/T1574/002",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "9ca2bf31-0570-44d8-a543-534c47c33ed7",
                    "4fc0deee-0057-4998-ab31-d24e46e0aba4",
                    "602a1f13-c640-4d73-b053-be9a2fa58b77",
                    "bc3cc333-48b9-467a-9d1f-d44ee594ef48",
                    "0b0ea3cc-99c8-4730-9c53-45deee2a4c86",
                    "50f852e6-af22-4c78-9ede-42ef36aa3453",
                    "90ae0469-0cee-4509-b67f-e5efcef040f7",
                    "9d3436ef-9476-4c43-acca-90ce06bdf33a",
                    "1908fcc1-1b92-4272-8214-0fbaf2fa5163",
                    "6b98b92b-4f00-4f62-b4fe-4d1920215771",
                    "0a4f6091-223b-41f6-8743-f322ec84930b",
                    "418dc89a-9808-4b87-b1d7-e5ae0cb6effc",
                    "193d5ccd-6f59-40c6-b5b0-8e32d5ddd3d1",
                    "829a3bdf-34da-4051-9cf4-8ed221a8ae4f",
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "aeab5ec5-be14-471a-80e8-e344418305c2",
                    "ebea773c-a8f1-42ad-a856-00cb221966e8",
                    "df6ecb8b-7822-4f4b-b412-08f524b4576c",
                    "7b4f794b-590a-4ad4-ba18-7964a2832205",
                    "827e941e-4a99-4e2c-a578-bfcec2d40552",
                    "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                    "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
                    "828af599-4c53-4ed2-ba4a-a9f835c434ea",
                    "73d70463-75c9-4258-92c6-17500fe972f2",
                    "3121461b-5aa0-4a41-b910-66d25524edbb",
                    "6414b5cd-b19d-447e-bb5e-9f03940b5784",
                    "8289bf8c-4aca-4f5a-9db3-dc3d7afe5c10",
                    "9313dc13-d04c-46d8-af4a-a930cc55d93b",
                    "cc4e02ba-9c06-48e2-b09e-2500cace9ae0",
                    "e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
                    "72ca7c75-bf85-45cd-aca7-255d360e423c",
                    "552b6b65-df37-4d3e-a258-f2fc4771ae54",
                    "b6f91281-20aa-446a-b986-38a92813a18f",
                    "6360757a-d460-456c-8b13-74cf0e60cceb",
                    "a5ea83a7-05a5-44c1-be2e-addccbbd8c03",
                    "f9df325d-d7bc-4a32-8a1a-2cc61dcefc63",
                    "9aa01d62-7667-4d3b-acb8-8cb5103e2014",
                    "70e8e9b4-6a93-4cb7-8cde-da69502e7aff",
                    "e32ce4f5-46c6-4c47-ba69-5de3c9193cd7",
                    "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
                    "e61e8a88-59a9-451c-874e-70fcc9740d67",
                    "e173ad47-4388-4012-ae62-bd13f71c18a8",
                    "75edd3fd-7146-48e5-9848-3013d7f0282c",
                    "13fc89a9-971e-4ca6-b9dc-aa53a445bf40",
                    "caa02837-f659-466f-bca6-48bde2826ab4",
                    "cbe51394-cd93-4473-b555-edf0144952d9",
                    "68654bf0-4412-43d5-bfe8-5eaa393cd939"
                ],
                "lookup_results": [
                    {
                        "uuid": "9ca2bf31-0570-44d8-a543-534c47c33ed7",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of \"dbgcore.dll\"",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/10/25\ndescription: Detects DLL sideloading of \"dbgcore.dll\"\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_generic:\n    ImageLoaded|startswith:\n    - C:\\Windows\\System32\\\n    - C:\\Windows\\SysWOW64\\\n    - C:\\Windows\\WinSxS\\\n    - C:\\Windows\\SoftwareDistribution\\\n    - C:\\Windows\\SystemTemp\\\n    - C:\\Program Files (x86)\\\n    - C:\\Program Files\\\n  filter_steam:\n    ImageLoaded|endswith: \\Steam\\bin\\cef\\cef.win7x64\\dbgcore.dll\n  selection:\n    ImageLoaded|endswith: \\dbgcore.dll\nfalsepositives:\n- Legitimate applications loading their own versions of the DLL mentioned in this\n  rule\nid: 9ca2bf31-0570-44d8-a543-534c47c33ed7\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/10/28\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: DLL Sideloading Of DBGCORE.DLL\n",
                            "sigma:id": "9ca2bf31-0570-44d8-a543-534c47c33ed7",
                            "title": "DLL Sideloading Of DBGCORE.DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4fc0deee-0057-4998-ab31-d24e46e0aba4",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of DLLs usually located in system locations (System32, SysWOW64...)",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/14\ndescription: Detects DLL sideloading of DLLs usually located in system locations (System32,\n  SysWOW64...)\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_appvpolicy:\n    Image: C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\OfficeClickToRun.exe\n    ImageLoaded: C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\AppVPolicy.dll\n  filter_azure:\n    ImageLoaded|startswith: C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\\n  filter_cleanmgr:\n    Image: C:\\Windows\\System32\\cleanmgr.exe\n    ImageLoaded|endswith: \\ssshim.dll\n  filter_dell:\n    ImageLoaded|startswith: C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs\n    Image|startswith:\n    - C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs\n    - C:\\Windows\\System32\\backgroundTaskHost.exe\n  filter_generic:\n    ImageLoaded|startswith:\n    - C:\\Windows\\System32\\\n    - C:\\Windows\\SysWOW64\\\n    - C:\\Windows\\WinSxS\\\n    - C:\\Windows\\SoftwareDistribution\\\n    - C:\\Windows\\SystemTemp\\\n  filter_upgrade:\n    Image|startswith: C:\\$WINDOWS.~BT\\\n  selection:\n    ImageLoaded|endswith:\n    - \\shfolder.dll\n    - \\activeds.dll\n    - \\adsldpc.dll\n    - \\aepic.dll\n    - \\apphelp.dll\n    - \\applicationframe.dll\n    - \\appxalluserstore.dll\n    - \\appxdeploymentclient.dll\n    - \\archiveint.dll\n    - \\atl.dll\n    - \\audioses.dll\n    - \\auditpolcore.dll\n    - \\authfwcfg.dll\n    - \\authz.dll\n    - \\avrt.dll\n    - \\bcd.dll\n    - \\bcp47langs.dll\n    - \\bcp47mrm.dll\n    - \\bcrypt.dll\n    - \\cabinet.dll\n    - \\cabview.dll\n    - \\certenroll.dll\n    - \\cldapi.dll\n    - \\clipc.dll\n    - \\clusapi.dll\n    - \\cmpbk32.dll\n    - \\coloradapterclient.dll\n    - \\colorui.dll\n    - \\comdlg32.dll\n    - \\connect.dll\n    - \\coremessaging.dll\n    - \\credui.dll\n    - \\cryptbase.dll\n    - \\cryptdll.dll\n    - \\cryptui.dll\n    - \\cryptxml.dll\n    - \\cscapi.dll\n    - \\cscobj.dll\n    - \\cscui.dll\n    - \\d2d1.dll\n    - \\d3d10.dll\n    - \\d3d10_1.dll\n    - \\d3d10_1core.dll\n    - \\d3d10core.dll\n    - \\d3d10warp.dll\n    - \\d3d11.dll\n    - \\d3d12.dll\n    - \\d3d9.dll\n    - \\dataexchange.dll\n    - \\davclnt.dll\n    - \\dcomp.dll\n    - \\defragproxy.dll\n    - \\desktopshellext.dll\n    - \\deviceassociation.dll\n    - \\devicecredential.dll\n    - \\devicepairing.dll\n    - \\devobj.dll\n    - \\devrtl.dll\n    - \\dhcpcmonitor.dll\n    - \\dhcpcsvc.dll\n    - \\dhcpcsvc6.dll\n    - \\directmanipulation.dll\n    - \\dismapi.dll\n    - \\dismcore.dll\n    - \\dmcfgutils.dll\n    - \\dmcmnutils.dll\n    - \\dmenrollengine.dll\n    - \\dmenterprisediagnostics.dll\n    - \\dmiso8601utils.dll\n    - \\dmoleaututils.dll\n    - \\dmprocessxmlfiltered.dll\n    - \\dmpushproxy.dll\n    - \\dmxmlhelputils.dll\n    - \\dnsapi.dll\n    - \\dot3api.dll\n    - \\dot3cfg.dll\n    - \\drprov.dll\n    - \\dsclient.dll\n    - \\dsparse.dll\n    - \\dsreg.dll\n    - \\dsrole.dll\n    - \\dui70.dll\n    - \\duser.dll\n    - \\dusmapi.dll\n    - \\dwmapi.dll\n    - \\dwrite.dll\n    - \\dxgi.dll\n    - \\dxva2.dll\n    - \\eappcfg.dll\n    - \\eappprxy.dll\n    - \\edputil.dll\n    - \\efsadu.dll\n    - \\efsutil.dll\n    - \\esent.dll\n    - \\execmodelproxy.dll\n    - \\explorerframe.dll\n    - \\fastprox.dll\n    - \\faultrep.dll\n    - \\fddevquery.dll\n    - \\feclient.dll\n    - \\fhcfg.dll\n    - \\firewallapi.dll\n    - \\flightsettings.dll\n    - \\fltlib.dll\n    - \\fveapi.dll\n    - \\fwbase.dll\n    - \\fwcfg.dll\n    - \\fwpolicyiomgr.dll\n    - \\fwpuclnt.dll\n    - \\getuname.dll\n    - \\hid.dll\n    - \\hnetmon.dll\n    - \\httpapi.dll\n    - \\idstore.dll\n    - \\ieadvpack.dll\n    - \\iedkcs32.dll\n    - \\iertutil.dll\n    - \\ifmon.dll\n    - \\iphlpapi.dll\n    - \\iri.dll\n    - \\iscsidsc.dll\n    - \\iscsium.dll\n    - \\isv.exe_rsaenh.dll\n    - \\joinutil.dll\n    - \\ksuser.dll\n    - \\ktmw32.dll\n    - \\licensemanagerapi.dll\n    - \\licensingdiagspp.dll\n    - \\linkinfo.dll\n    - \\loadperf.dll\n    - \\logoncli.dll\n    - \\logoncontroller.dll\n    - \\lpksetupproxyserv.dll\n    - \\magnification.dll\n    - \\mapistub.dll\n    - \\mfcore.dll\n    - \\mfplat.dll\n    - \\mi.dll\n    - \\midimap.dll\n    - \\miutils.dll\n    - \\mlang.dll\n    - \\mmdevapi.dll\n    - \\mobilenetworking.dll\n    - \\mpr.dll\n    - \\mprapi.dll\n    - \\mrmcorer.dll\n    - \\msacm32.dll\n    - \\mscms.dll\n    - \\mscoree.dll\n    - \\msctf.dll\n    - \\msctfmonitor.dll\n    - \\msdrm.dll\n    - \\msftedit.dll\n    - \\msi.dll\n    - \\msutb.dll\n    - \\mswb7.dll\n    - \\mswsock.dll\n    - \\msxml3.dll\n    - \\mtxclu.dll\n    - \\napinsp.dll\n    - \\ncrypt.dll\n    - \\ndfapi.dll\n    - \\netid.dll\n    - \\netiohlp.dll\n    - \\netplwiz.dll\n    - \\netprofm.dll\n    - \\netsetupapi.dll\n    - \\netshell.dll\n    - \\netutils.dll\n    - \\networkexplorer.dll\n    - \\newdev.dll\n    - \\ninput.dll\n    - \\nlaapi.dll\n    - \\nlansp_c.dll\n    - \\npmproxy.dll\n    - \\nshhttp.dll\n    - \\nshipsec.dll\n    - \\nshwfp.dll\n    - \\ntdsapi.dll\n    - \\ntlanman.dll\n    - \\ntlmshared.dll\n    - \\ntmarta.dll\n    - \\ntshrui.dll\n    - \\oleacc.dll\n    - \\omadmapi.dll\n    - \\onex.dll\n    - \\osbaseln.dll\n    - \\osuninst.dll\n    - \\p2p.dll\n    - \\p2pnetsh.dll\n    - \\p9np.dll\n    - \\pcaui.dll\n    - \\pdh.dll\n    - \\peerdistsh.dll\n    - \\pla.dll\n    - \\pnrpnsp.dll\n    - \\policymanager.dll\n    - \\polstore.dll\n    - \\printui.dll\n    - \\propsys.dll\n    - \\prvdmofcomp.dll\n    - \\puiapi.dll\n    - \\radcui.dll\n    - \\rasapi32.dll\n    - \\rasgcw.dll\n    - \\rasman.dll\n    - \\rasmontr.dll\n    - \\reagent.dll\n    - \\regapi.dll\n    - \\resutils.dll\n    - \\rmclient.dll\n    - \\rpcnsh.dll\n    - \\rsaenh.dll\n    - \\rtutils.dll\n    - \\rtworkq.dll\n    - \\samcli.dll\n    - \\samlib.dll\n    - \\sapi_onecore.dll\n    - \\sas.dll\n    - \\scansetting.dll\n    - \\scecli.dll\n    - \\schedcli.dll\n    - \\secur32.dll\n    - \\shell32.dll\n    - \\slc.dll\n    - \\snmpapi.dll\n    - \\spp.dll\n    - \\sppc.dll\n    - \\srclient.dll\n    - \\srpapi.dll\n    - \\srvcli.dll\n    - \\ssp.exe_rsaenh.dll\n    - \\ssp_isv.exe_rsaenh.dll\n    - \\sspicli.dll\n    - \\ssshim.dll\n    - \\staterepository.core.dll\n    - \\structuredquery.dll\n    - \\sxshared.dll\n    - \\tapi32.dll\n    - \\tbs.dll\n    - \\tdh.dll\n    - \\tquery.dll\n    - \\tsworkspace.dll\n    - \\ttdrecord.dll\n    - \\twext.dll\n    - \\twinapi.dll\n    - \\twinui.appcore.dll\n    - \\uianimation.dll\n    - \\uiautomationcore.dll\n    - \\uireng.dll\n    - \\uiribbon.dll\n    - \\updatepolicy.dll\n    - \\userenv.dll\n    - \\utildll.dll\n    - \\uxinit.dll\n    - \\uxtheme.dll\n    - \\vaultcli.dll\n    - \\virtdisk.dll\n    - \\vssapi.dll\n    - \\vsstrace.dll\n    - \\wbemprox.dll\n    - \\wbemsvc.dll\n    - \\wcmapi.dll\n    - \\wcnnetsh.dll\n    - \\wdi.dll\n    - \\wdscore.dll\n    - \\webservices.dll\n    - \\wecapi.dll\n    - \\wer.dll\n    - \\wevtapi.dll\n    - \\whhelper.dll\n    - \\wimgapi.dll\n    - \\winbrand.dll\n    - \\windows.storage.dll\n    - \\windows.storage.search.dll\n    - \\windowscodecs.dll\n    - \\windowscodecsext.dll\n    - \\windowsudk.shellcommon.dll\n    - \\winhttp.dll\n    - \\wininet.dll\n    - \\winipsec.dll\n    - \\winmde.dll\n    - \\winmm.dll\n    - \\winnsi.dll\n    - \\winrnr.dll\n    - \\winsqlite3.dll\n    - \\winsta.dll\n    - \\wkscli.dll\n    - \\wlanapi.dll\n    - \\wlancfg.dll\n    - \\wldp.dll\n    - \\wlidprov.dll\n    - \\wmiclnt.dll\n    - \\wmidcom.dll\n    - \\wmiutils.dll\n    - \\wmsgapi.dll\n    - \\wofutil.dll\n    - \\wpdshext.dll\n    - \\wshbth.dll\n    - \\wshelper.dll\n    - \\wtsapi32.dll\n    - \\wwapi.dll\n    - \\xmllite.dll\n    - \\xolehlp.dll\n    - \\xwizards.dll\n    - \\xwtpw32.dll\n    - \\aclui.dll\n    - \\bderepair.dll\n    - \\bootmenuux.dll\n    - \\dcntel.dll\n    - \\dwmcore.dll\n    - \\dynamoapi.dll\n    - \\fhsvcctl.dll\n    - \\fxsst.dll\n    - \\inproclogger.dll\n    - \\iumbase.dll\n    - \\kdstub.dll\n    - \\maintenanceui.dll\n    - \\mdmdiagnostics.dll\n    - \\mintdh.dll\n    - \\msdtctm.dll\n    - \\nettrace.dll\n    - \\osksupport.dll\n    - \\reseteng.dll\n    - \\resetengine.dll\n    - \\spectrumsyncclient.dll\n    - \\srcore.dll\n    - \\systemsettingsthresholdadminflowui.dll\n    - \\timesync.dll\n    - \\upshared.dll\n    - \\wmpdui.dll\n    - \\wwancfg.dll\n    - \\dpx.dll\n    - \\fxsapi.dll\n    - \\fxstiff.dll\n    - \\xpsservices.dll\n    - \\appvpolicy.dll\n    - \\batmeter.dll\n    - \\bootux.dll\n    - \\cmutil.dll\n    - \\configmanager2.dll\n    - \\coredplus.dll\n    - \\coreuicomponents.dll\n    - \\cryptsp.dll\n    - \\dmcommandlineutils.dll\n    - \\drvstore.dll\n    - \\dsprop.dll\n    - \\dxcore.dll\n    - \\edgeiso.dll\n    - \\framedynos.dll\n    - \\fveskybackup.dll\n    - \\fvewiz.dll\n    - \\gpapi.dll\n    - \\icmp.dll\n    - \\ifsutil.dll\n    - \\iumsdk.dll\n    - \\lockhostingframework.dll\n    - \\lrwizdll.dll\n    - \\mbaexmlparser.dll\n    - \\mfc42u.dll\n    - \\msiso.dll\n    - \\msvcp110_win.dll\n    - \\netapi32.dll\n    - \\netjoin.dll\n    - \\netprovfw.dll\n    - \\opcservices.dll\n    - \\pkeyhelper.dll\n    - \\playsndsrv.dll\n    - \\powrprof.dll\n    - \\prntvpt.dll\n    - \\profapi.dll\n    - \\proximitycommon.dll\n    - \\proximityservicepal.dll\n    - \\rasdlg.dll\n    - \\security.dll\n    - \\sppcext.dll\n    - \\srmtrace.dll\n    - \\tpmcoreprovisioning.dll\n    - \\umpdc.dll\n    - \\unattend.dll\n    - \\urlmon.dll\n    - \\vdsutil.dll\n    - \\version.dll\n    - \\winbio.dll\n    - \\windows.ui.immersive.dll\n    - \\winscard.dll\n    - \\winsync.dll\n    - \\wscapi.dll\n    - \\wsmsvc.dll\n    - \\FxsCompose.dll\n    - \\WfsR.dll\n    - \\rpchttp.dll\n    - \\storageusage.dll\n    - \\amsi.dll\n    - \\PrintIsolationProxy.dll\n    - \\msdtcVSp1res.dll\n    - \\rdpendp.dll\n    - \\dxilconv.dll\n    - \\utcutil.dll\n    - \\appraiser.dll\n    - \\dsound.dll\n    - \\DispBroker.dll\n    - \\FXSRESM.DLL\n    - \\cryptnet.dll\n    - \\COMRES.DLL\n    - \\igdumdim64.dll\n    - \\igd10iumd64.dll\n    - \\igd12umd64.dll\n    - \\igdusc64.dll\n    - \\WLBSCTRL.dll\n    - \\TSMSISrv.dll\n    - \\TSVIPSrv.dll\n    - \\wow64log.dll\n    - \\WptsExtensions.dll\n    - \\wbemcomn.dll\nfalsepositives:\n- Legitimate applications loading their own versions of the DLLs mentioned in this\n  rule\nid: 4fc0deee-0057-4998-ab31-d24e46e0aba4\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2023/01/09\nreferences:\n- https://hijacklibs.net/\n- https://blog.cyble.com/2022/07/21/qakbot-resurfaces-with-new-playbook/\n- https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/\n- https://github.com/XForceIR/SideLoadHunter/blob/cc7ef2e5d8908279b0c4cee4e8b6f85f7b8eed52/SideLoads/README.md\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential System DLL Sideloading From Non System Locations\n",
                            "sigma:id": "4fc0deee-0057-4998-ab31-d24e46e0aba4",
                            "title": "Potential System DLL Sideloading From Non System Locations",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "602a1f13-c640-4d73-b053-be9a2fa58b77",
                        "lookup_data": {
                            "description": "IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\\Windows\\System32\\ by default.\nAn attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services \"svchost.exe -k netsvcs\" to gain code execution on a remote machine.\n",
                            "raw": "author: SBousseaden\ndate: 2019/10/28\ndescription: 'IKEEXT and SessionEnv service, as they call LoadLibrary on files that\n  do not exist within C:\\Windows\\System32\\ by default.\n\n  An attacker can place their malicious logic within the PROCESS_ATTACH block of their\n  library and restart the aforementioned services \"svchost.exe -k netsvcs\" to gain\n  code execution on a remote machine.\n\n  '\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith: C:\\Windows\\WinSxS\\\n  selection:\n    ImageLoaded|endswith:\n    - \\tsmsisrv.dll\n    - \\tsvipsrv.dll\n    - \\wlbsctrl.dll\n    Image|endswith: \\svchost.exe\nfalsepositives:\n- Unknown\nid: 602a1f13-c640-4d73-b053-be9a2fa58b77\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\nstatus: test\ntags:\n- attack.persistence\n- attack.defense_evasion\n- attack.t1574.002\n- attack.t1574.001\ntitle: Svchost DLL Search Order Hijack\n",
                            "sigma:id": "602a1f13-c640-4d73-b053-be9a2fa58b77",
                            "title": "Svchost DLL Search Order Hijack",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "bc3cc333-48b9-467a-9d1f-d44ee594ef48",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of DLLs that are loaded by the SCM for some services (IKE, IKEEXT, SessionEnv) which do not exists on a typical modern system",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/12/01\ndescription: Detects DLL sideloading of DLLs that are loaded by the SCM for some services\n  (IKE, IKEEXT, SessionEnv) which do not exists on a typical modern system\ndetection:\n  condition: selection\n  selection:\n    Image: C:\\Windows\\System32\\svchost.exe\n    ImageLoaded:\n    - C:\\Windows\\System32\\WLBSCTRL.dll\n    - C:\\Windows\\System32\\TSMSISrv.dll\n    - C:\\Windows\\System32\\TSVIPSrv.dll\nfalsepositives:\n- Unknown\nid: bc3cc333-48b9-467a-9d1f-d44ee594ef48\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://decoded.avast.io/martinchlumecky/png-steganography/\n- https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: SCM DLL Sideload\n",
                            "sigma:id": "bc3cc333-48b9-467a-9d1f-d44ee594ef48",
                            "title": "SCM DLL Sideload",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0b0ea3cc-99c8-4730-9c53-45deee2a4c86",
                        "lookup_data": {
                            "description": "Detects Code Integrity (CI) engine blocking Microsoft Defender's processes (MpCmdRun and NisSrv) from loading unsigned DLLs which may be an attempt to sideload arbitrary DLL",
                            "raw": "author: Bhabesh Raj\ndate: 2022/08/02\ndescription: Detects Code Integrity (CI) engine blocking Microsoft Defender's processes\n  (MpCmdRun and NisSrv) from loading unsigned DLLs which may be an attempt to sideload\n  arbitrary DLL\ndetection:\n  condition: selection\n  selection:\n    EventID:\n    - 11\n    - 12\n    ProcessPath|endswith:\n    - \\MpCmdRun.exe\n    - \\NisSrv.exe\nfalsepositives:\n- Unknown\nid: 0b0ea3cc-99c8-4730-9c53-45deee2a4c86\nlevel: high\nlogsource:\n  product: windows\n  service: security-mitigations\nmodified: 2022/09/28\nreferences:\n- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Microsoft Defender Blocked from Loading Unsigned DLL\n",
                            "sigma:id": "0b0ea3cc-99c8-4730-9c53-45deee2a4c86",
                            "title": "Microsoft Defender Blocked from Loading Unsigned DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "50f852e6-af22-4c78-9ede-42ef36aa3453",
                        "lookup_data": {
                            "description": "Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account)\nwanting to perform SSO authentication in the browser.\nAn attacker can use this to authenticate to Azure AD in a browser as that user.\n",
                            "raw": "author: Den Iuzvyk\ndate: 2020/07/15\ndescription: 'Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens\n  for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure\n  AD and a user logs in with their Azure AD account)\n\n  wanting to perform SSO authentication in the browser.\n\n  An attacker can use this to authenticate to Azure AD in a browser as that user.\n\n  '\ndetection:\n  condition: selection_dll and not filter_legit\n  filter_legit:\n  - Image|endswith:\n    - \\BackgroundTaskHost.exe\n    - \\devenv.exe\n    - \\iexplore.exe\n    - \\MicrosoftEdge.exe\n    - \\Microsoft\\Edge\\Application\\msedge.exe\n    - \\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe\n    - \\msedgewebview2.exe\n    - \\OneDrive.exe\n  - Image|startswith: C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\\n  - Image: null\n  selection_dll:\n    ImageLoaded|endswith: MicrosoftAccountTokenProvider.dll\nfalsepositives:\n- Unknown\nid: 50f852e6-af22-4c78-9ede-42ef36aa3453\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/10/21\nreferences:\n- https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.privilege_escalation\n- attack.t1574.002\ntitle: Abusing Azure Browser SSO\n",
                            "sigma:id": "50f852e6-af22-4c78-9ede-42ef36aa3453",
                            "title": "Abusing Azure Browser SSO",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "90ae0469-0cee-4509-b67f-e5efcef040f7",
                        "lookup_data": {
                            "description": "Detects potential DLL sideloading activity via the Aruba Networks Virtual Intranet Access \"arubanetsvc.exe\" process using DLL Search Order Hijacking",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2023/01/22\ndescription: Detects potential DLL sideloading activity via the Aruba Networks Virtual\n  Intranet Access \"arubanetsvc.exe\" process using DLL Search Order Hijacking\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith:\n    - C:\\Windows\\System32\\\n    - C:\\Windows\\SysWOW64\\\n    - C:\\Windows\\WinSxS\\\n  selection:\n    ImageLoaded|endswith:\n    - \\wtsapi32.dll\n    - \\msvcr100.dll\n    - \\msvcp100.dll\n    - \\dbghelp.dll\n    - \\dbgcore.dll\n    - \\wininet.dll\n    - \\iphlpapi.dll\n    - \\version.dll\n    - \\cryptsp.dll\n    - \\cryptbase.dll\n    - \\wldp.dll\n    - \\profapi.dll\n    - \\sspicli.dll\n    - \\winsta.dll\n    - \\dpapi.dll\n    Image|endswith: \\arubanetsvc.exe\nfalsepositives:\n- Unknown\nid: 90ae0469-0cee-4509-b67f-e5efcef040f7\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://twitter.com/wdormann/status/1616581559892545537?t=XLCBO9BziGzD7Bmbt8oMEQ&s=09\nstatus: experimental\ntags:\n- attack.privilege_escalation\n- attack.persistence\n- attack.t1574.001\n- attack.t1574.002\ntitle: Aruba Network Service Potential DLL Sideloading\n",
                            "sigma:id": "90ae0469-0cee-4509-b67f-e5efcef040f7",
                            "title": "Aruba Network Service Potential DLL Sideloading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9d3436ef-9476-4c43-acca-90ce06bdf33a",
                        "lookup_data": {
                            "description": "Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)",
                            "raw": "author: Dimitrios Slamaris\ndate: 2017/05/15\ndescription: Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled\n  parameter in Registry, which can be used to execute code in context of the DHCP\n  server (restart required)\ndetection:\n  condition: selection\n  selection:\n    EventType: Setvalue\n    TargetObject|endswith:\n    - \\Services\\DHCPServer\\Parameters\\CalloutDlls\n    - \\Services\\DHCPServer\\Parameters\\CalloutEnabled\nfalsepositives:\n- Unknown\nid: 9d3436ef-9476-4c43-acca-90ce06bdf33a\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/06/26\nreferences:\n- https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n- https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n- https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\n- attack.t1112\ntitle: DHCP Callout DLL Installation\n",
                            "sigma:id": "9d3436ef-9476-4c43-acca-90ce06bdf33a",
                            "title": "DHCP Callout DLL Installation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "1908fcc1-1b92-4272-8214-0fbaf2fa5163",
                        "lookup_data": {
                            "description": "Detects creation of a malicious DLL file in the location where the OneDrive or Team applications\nUpon execution of the Teams or OneDrive application, the dropped malicious DLL file (“iphlpapi.dll”) is sideloaded\n",
                            "raw": "author: frack113\ndate: 2022/08/12\ndescription: \"Detects creation of a malicious DLL file in the location where the OneDrive\\\n  \\ or Team applications\\nUpon execution of the Teams or OneDrive application, the\\\n  \\ dropped malicious DLL file (\\u201Ciphlpapi.dll\\u201D) is sideloaded\\n\"\ndetection:\n  condition: selection\n  selection:\n    TargetFilename|contains|all:\n    - iphlpapi.dll\n    - \\AppData\\Local\\Microsoft\nfalsepositives:\n- Unknown\nid: 1908fcc1-1b92-4272-8214-0fbaf2fa5163\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/\nstatus: experimental\ntags:\n- attack.persistence\n- attack.privilege_escalation\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Malicious DLL File Dropped in the Teams or OneDrive Folder\n",
                            "sigma:id": "1908fcc1-1b92-4272-8214-0fbaf2fa5163",
                            "title": "Malicious DLL File Dropped in the Teams or OneDrive Folder",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6b98b92b-4f00-4f62-b4fe-4d1920215771",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of system dlls that are not present on the system by default. Usualy to achieve techniques such as UAC bypass and privilege escalation",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/12/09\ndescription: Detects DLL sideloading of system dlls that are not present on the system\n  by default. Usualy to achieve techniques such as UAC bypass and privilege escalation\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_ms_signed:\n    Signature: Microsoft Windows\n    Signed: 'true'\n  selection:\n    ImageLoaded:\n    - C:\\Windows\\System32\\WLBSCTRL.dll\n    - C:\\Windows\\System32\\TSMSISrv.dll\n    - C:\\Windows\\System32\\TSVIPSrv.dll\n    - C:\\Windows\\System32\\wow64log.dll\n    - C:\\Windows\\System32\\WptsExtensions.dll\n    - C:\\Windows\\System32\\wbem\\wbemcomn.dll\nfalsepositives:\n- Unknown\nid: 6b98b92b-4f00-4f62-b4fe-4d1920215771\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2023/01/30\nreferences:\n- https://decoded.avast.io/martinchlumecky/png-steganography/\n- https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\n- https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/\n- https://github.com/Wh04m1001/SysmonEoP\n- https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/\n- http://remoteawesomethoughts.blogspot.com/2019/05/windows-10-task-schedulerservice.html\nrelated:\n- id: df6ecb8b-7822-4f4b-b412-08f524b4576c\n  type: similar\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential DLL Sideloading Of Non-Existent DLLs From System Folders\n",
                            "sigma:id": "6b98b92b-4f00-4f62-b4fe-4d1920215771",
                            "title": "Potential DLL Sideloading Of Non-Existent DLLs From System Folders",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0a4f6091-223b-41f6-8743-f322ec84930b",
                        "lookup_data": {
                            "description": "Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2019/02/06\ndescription: Detects execution of the Notepad++ updater in a suspicious directory,\n  which is often used in DLL side-loading attacks\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_end:\n    Image|endswith:\n    - \\Program Files\\Notepad++\\updater\\GUP.exe\n    - \\Program Files (x86)\\Notepad++\\updater\\GUP.exe\n  filter_user:\n    Image|contains: \\Users\\\n    Image|endswith:\n    - \\AppData\\Local\\Notepad++\\updater\\GUP.exe\n    - \\AppData\\Roaming\\Notepad++\\updater\\GUP.exe\n  selection:\n    Image|endswith: \\GUP.exe\nfalsepositives:\n- Execution of tools named GUP.exe and located in folders different than Notepad++\\updater\nid: 0a4f6091-223b-41f6-8743-f322ec84930b\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/13\nreferences:\n- https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Suspicious GUP Usage\n",
                            "sigma:id": "0a4f6091-223b-41f6-8743-f322ec84930b",
                            "title": "Suspicious GUP Usage",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "418dc89a-9808-4b87-b1d7-e5ae0cb6effc",
                        "lookup_data": {
                            "description": "Detects loading of Microsoft Defender's DLLs by its processes (MpCmdRun and NisSrv) from the non-default directory which may be an attempt to sideload arbitrary DLL",
                            "raw": "author: Bhabesh Raj\ndate: 2022/08/02\ndescription: Detects loading of Microsoft Defender's DLLs by its processes (MpCmdRun\n  and NisSrv) from the non-default directory which may be an attempt to sideload arbitrary\n  DLL\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\Windows Defender\\\n    - C:\\Program Files (x86)\\Windows Defender\\\n    - C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\\n  selection:\n    ImageLoaded|endswith: \\mpclient.dll\n    Image|endswith:\n    - \\MpCmdRun.exe\n    - \\NisSrv.exe\nfalsepositives:\n- Very unlikely\nid: 418dc89a-9808-4b87-b1d7-e5ae0cb6effc\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/08/17\nreferences:\n- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Microsoft Defender Loading DLL from Nondefault Path\n",
                            "sigma:id": "418dc89a-9808-4b87-b1d7-e5ae0cb6effc",
                            "title": "Microsoft Defender Loading DLL from Nondefault Path",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "193d5ccd-6f59-40c6-b5b0-8e32d5ddd3d1",
                        "lookup_data": {
                            "description": "Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll",
                            "raw": "author: Christian Burkard (Nextron Systems)\ndate: 2021/09/20\ndescription: Detects the execution of Xwizard tool from the non-default directory\n  which can be used to sideload a custom xwizards.dll\ndetection:\n  condition: selection and not filter\n  filter:\n    Image|startswith: C:\\Windows\\System32\\\n  selection:\n    Image|endswith: \\xwizard.exe\nfalsepositives:\n- Windows installed on non-C drive\nid: 193d5ccd-6f59-40c6-b5b0-8e32d5ddd3d1\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://lolbas-project.github.io/lolbas/Binaries/Xwizard/\n- http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Xwizard DLL Sideloading\n",
                            "sigma:id": "193d5ccd-6f59-40c6-b5b0-8e32d5ddd3d1",
                            "title": "Xwizard DLL Sideloading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "829a3bdf-34da-4051-9cf4-8ed221a8ae4f",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of DLLs that are part of Microsoft Office from non standard location",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/08/17\ndescription: Detects DLL sideloading of DLLs that are part of Microsoft Office from\n  non standard location\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\Microsoft Office\\OFFICE\n    - C:\\Program Files (x86)\\Microsoft Office\\OFFICE\n    - C:\\Program Files\\Microsoft Office\\Root\\OFFICE\n    - C:\\Program Files (x86)\\Microsoft Office\\Root\\OFFICE\n  selection:\n    ImageLoaded|endswith: \\outllib.dll\nfalsepositives:\n- Unlikely\nid: 829a3bdf-34da-4051-9cf4-8ed221a8ae4f\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Microsoft Office DLL Sideload\n",
                            "sigma:id": "829a3bdf-34da-4051-9cf4-8ed221a8ae4f",
                            "title": "Microsoft Office DLL Sideload",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "aeab5ec5-be14-471a-80e8-e344418305c2",
                        "lookup_data": {
                            "description": "Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/06/12\ndescription: Detects the execution of an executable that is typically used by PlugX\n  for DLL side loading started from an uncommon location\ndetection:\n  condition: ( selection_cammute and not filter_cammute ) or ( selection_chrome_frame\n    and not filter_chrome_frame ) or ( selection_devemu and not filter_devemu ) or\n    ( selection_gadget and not filter_gadget ) or ( selection_hcc and not filter_hcc\n    ) or ( selection_hkcmd and not filter_hkcmd ) or ( selection_mc and not filter_mc\n    ) or ( selection_msmpeng and not filter_msmpeng ) or ( selection_msseces and not\n    filter_msseces ) or ( selection_oinfo and not filter_oinfo ) or ( selection_oleview\n    and not filter_oleview ) or ( selection_rc and not filter_rc )\n  filter_cammute:\n    Image|contains:\n    - \\Lenovo\\Communication Utility\\\n    - \\Lenovo\\Communications Utility\\\n  filter_chrome_frame:\n    Image|contains: \\Google\\Chrome\\application\\\n  filter_devemu:\n    Image|contains: \\Microsoft Device Emulator\\\n  filter_gadget:\n    Image|contains: \\Windows Media Player\\\n  filter_hcc:\n    Image|contains: \\HTML Help Workshop\\\n  filter_hkcmd:\n    Image|contains:\n    - \\System32\\\n    - \\SysNative\\\n    - \\SysWow64\\\n  filter_mc:\n    Image|contains:\n    - \\Microsoft Visual Studio\n    - \\Microsoft SDK\n    - \\Windows Kit\n  filter_msmpeng:\n    Image|contains:\n    - \\Microsoft Security Client\\\n    - \\Windows Defender\\\n    - \\AntiMalware\\\n  filter_msseces:\n    Image|contains:\n    - \\Microsoft Security Center\\\n    - \\Microsoft Security Client\\\n    - \\Microsoft Security Essentials\\\n  filter_oinfo:\n    Image|contains: \\Common Files\\Microsoft Shared\\\n  filter_oleview:\n    Image|contains:\n    - \\Microsoft Visual Studio\n    - \\Microsoft SDK\n    - \\Windows Kit\n    - \\Windows Resource Kit\\\n  filter_rc:\n    Image|contains:\n    - \\Microsoft Visual Studio\n    - \\Microsoft SDK\n    - \\Windows Kit\n    - \\Windows Resource Kit\\\n    - \\Microsoft.NET\\\n  selection_cammute:\n    Image|endswith: \\CamMute.exe\n  selection_chrome_frame:\n    Image|endswith: \\chrome_frame_helper.exe\n  selection_devemu:\n    Image|endswith: \\dvcemumanager.exe\n  selection_gadget:\n    Image|endswith: \\Gadget.exe\n  selection_hcc:\n    Image|endswith: \\hcc.exe\n  selection_hkcmd:\n    Image|endswith: \\hkcmd.exe\n  selection_mc:\n    Image|endswith: \\Mc.exe\n  selection_msmpeng:\n    Image|endswith: \\MsMpEng.exe\n  selection_msseces:\n    Image|endswith: \\msseces.exe\n  selection_oinfo:\n    Image|endswith: \\OInfoP11.exe\n  selection_oleview:\n    Image|endswith: \\OleView.exe\n  selection_rc:\n    Image|endswith: \\rc.exe\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentCommandLine\nid: aeab5ec5-be14-471a-80e8-e344418305c2\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/01/28\nreferences:\n- http://www.hexacorn.com/blog/2016/03/10/beyond-good-ol-run-key-part-36/\n- https://countuponsecurity.com/2017/06/07/threat-hunting-in-the-enterprise-with-appcompatprocessor/\nstatus: test\ntags:\n- attack.s0013\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Executable Used by PlugX in Uncommon Location\n",
                            "sigma:id": "aeab5ec5-be14-471a-80e8-e344418305c2",
                            "title": "Executable Used by PlugX in Uncommon Location",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "ebea773c-a8f1-42ad-a856-00cb221966e8",
                        "lookup_data": {
                            "description": "Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/02\ndescription: Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the\n  non-default directory which may be an attempt to sideload arbitrary DLL\ndetection:\n  condition: selection and not filter\n  filter:\n    Image|startswith: C:\\Program Files\\VMware\\\n  selection:\n    Image|endswith: \\VMwareXferlogs.exe\nfalsepositives:\n- Unlikely\nid: ebea773c-a8f1-42ad-a856-00cb221966e8\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DLL Sideloading by VMware Xfer Utility\n",
                            "sigma:id": "ebea773c-a8f1-42ad-a856-00cb221966e8",
                            "title": "DLL Sideloading by VMware Xfer Utility",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "df6ecb8b-7822-4f4b-b412-08f524b4576c",
                        "lookup_data": {
                            "description": "Detects the creation of system dlls that are not present on the system. Usualy to achieve dll hijacking",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/12/01\ndescription: Detects the creation of system dlls that are not present on the system.\n  Usualy to achieve dll hijacking\ndetection:\n  condition: selection and not filter\n  filter:\n    Image|startswith: C:\\Windows\\System32\\\n  selection:\n    TargetFilename:\n    - C:\\Windows\\System32\\WLBSCTRL.dll\n    - C:\\Windows\\System32\\TSMSISrv.dll\n    - C:\\Windows\\System32\\TSVIPSrv.dll\n    - C:\\Windows\\System32\\wow64log.dll\nfalsepositives:\n- Unknown\nid: df6ecb8b-7822-4f4b-b412-08f524b4576c\nlevel: medium\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/12/09\nreferences:\n- https://decoded.avast.io/martinchlumecky/png-steganography/\n- https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\n- https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/\n- https://github.com/Wh04m1001/SysmonEoP\n- https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/\nrelated:\n- id: 6b98b92b-4f00-4f62-b4fe-4d1920215771\n  type: similar\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Creation Of Non-Existent DLLs In System Folders\n",
                            "sigma:id": "df6ecb8b-7822-4f4b-b412-08f524b4576c",
                            "title": "Creation Of Non-Existent DLLs In System Folders",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7b4f794b-590a-4ad4-ba18-7964a2832205",
                        "lookup_data": {
                            "description": "Detects renamed vmnat.exe or portable version that can be used for DLL side-loading",
                            "raw": "author: elhoim\ndate: 2022/09/09\ndescription: Detects renamed vmnat.exe or portable version that can be used for DLL\n  side-loading\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_portable:\n    Image:\n    - C:\\Program Files (x86)\\VMware\\VMware Workstation\\vmnat.exe\n    - C:\\Windows\\SysWOW64\\vmnat.exe\n  filter_rename:\n    Image|endswith: vmnat.exe\n  selection:\n    OriginalFileName: vmnat.exe\nfalsepositives:\n- Unknown\nid: 7b4f794b-590a-4ad4-ba18-7964a2832205\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://twitter.com/malmoeb/status/1525901219247845376\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Renamed or Portable Vmnat.exe\n",
                            "sigma:id": "7b4f794b-590a-4ad4-ba18-7964a2832205",
                            "title": "Renamed or Portable Vmnat.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "827e941e-4a99-4e2c-a578-bfcec2d40552",
                        "lookup_data": {
                            "description": "Malware analysis report on SparrowDoor malware",
                            "link": "http://www.botvrij.eu/data/feed-osint/827e941e-4a99-4e2c-a578-bfcec2d40552.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1650959349",
                            "uuid": "827e941e-4a99-4e2c-a578-bfcec2d40552",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                        "lookup_data": {
                            "description": "Operation â€˜Harvestâ€™: A Deep Dive into a Long-term Campaign",
                            "link": "http://www.botvrij.eu/data/feed-osint/c1bd5026-520b-45bd-9a79-82d38cf96c7b.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1633469315",
                            "uuid": "c1bd5026-520b-45bd-9a79-82d38cf96c7b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
                        "lookup_data": {
                            "description": "Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/05/08\ndescription: Detects the installation of a plugin DLL via ServerLevelPluginDll parameter\n  in Registry, which can be used to execute code in context of the DNS server (restart\n  required)\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - /config\n    - /serverlevelplugindll\n    Image|endswith: \\dnscmd.exe\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- Image\n- User\n- TargetObject\nid: f63b56ee-3f79-4b8a-97fb-5c48007e8573\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/09\nreferences:\n- https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\nrelated:\n- id: e61e8a88-59a9-451c-874e-70fcc9740d67\n  type: derived\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\n- attack.t1112\ntitle: DNS ServerLevelPluginDll Install\n",
                            "sigma:id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
                            "title": "DNS ServerLevelPluginDll Install",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "828af599-4c53-4ed2-ba4a-a9f835c434ea",
                        "lookup_data": {
                            "description": "The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.",
                            "raw": "author: NVISO\ndate: 2020/05/04\ndescription: The Fax service attempts to load ualapi.dll, which is non-existent. An\n  attacker can then (side)load their own malicious DLL using this service.\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith: C:\\Windows\\WinSxS\\\n  selection:\n    ImageLoaded|endswith: ualapi.dll\n    Image|endswith: \\fxssvc.exe\nfalsepositives:\n- Unlikely\nid: 828af599-4c53-4ed2-ba4a-a9f835c434ea\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/06/02\nreferences:\n- https://windows-internals.com/faxing-your-way-to-system/\nstatus: test\ntags:\n- attack.persistence\n- attack.defense_evasion\n- attack.t1574.001\n- attack.t1574.002\ntitle: Fax Service DLL Search Order Hijack\n",
                            "sigma:id": "828af599-4c53-4ed2-ba4a-a9f835c434ea",
                            "title": "Fax Service DLL Search Order Hijack",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "73d70463-75c9-4258-92c6-17500fe972f2",
                        "lookup_data": {
                            "description": "Detects specific process characteristics of Winnti Pipemon malware reported by ESET",
                            "raw": "author: Florian Roth (Nextron Systems), oscd.community\ndate: 2020/07/30\ndescription: Detects specific process characteristics of Winnti Pipemon malware reported\n  by ESET\ndetection:\n  condition: selection1 or all of selection2*\n  selection1:\n    CommandLine|contains: setup0.exe -p\n  selection2a:\n    CommandLine|contains: setup.exe\n  selection2b:\n    CommandLine|endswith:\n    - -x:0\n    - -x:1\n    - -x:2\nfalsepositives:\n- Legitimate setups that use similar flags\nid: 73d70463-75c9-4258-92c6-17500fe972f2\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.welivesecurity.com/2020/05/21/no-game-over-winnti-group/\nstatus: stable\ntags:\n- attack.defense_evasion\n- attack.t1574.002\n- attack.g0044\ntitle: Winnti Pipemon Characteristics\n",
                            "sigma:id": "73d70463-75c9-4258-92c6-17500fe972f2",
                            "title": "Winnti Pipemon Characteristics",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3121461b-5aa0-4a41-b910-66d25524edbb",
                        "lookup_data": {
                            "description": "Detects specific process characteristics of Winnti malware noticed in Dec/Jan 2020 in a campaign against Honk Kong universities",
                            "raw": "author: Florian Roth (Nextron Systems), Markus Neis\ndate: 2020/02/01\ndescription: Detects specific process characteristics of Winnti malware noticed in\n  Dec/Jan 2020 in a campaign against Honk Kong universities\ndetection:\n  condition: 1 of selection*\n  selection1:\n    Image|startswith: C:\\ProgramData\\DRM\n    ParentImage|contains:\n    - C:\\Windows\\Temp\n    - \\hpqhvind.exe\n  selection2:\n    Image|endswith: \\wmplayer.exe\n    ParentImage|startswith: C:\\ProgramData\\DRM\n  selection3:\n    Image|endswith: \\wmplayer.exe\n    ParentImage|endswith: \\Test.exe\n  selection4:\n    Image: C:\\ProgramData\\DRM\\CLR\\CLR.exe\n  selection5:\n    Image|endswith: \\SearchFilterHost.exe\n    ParentImage|startswith: C:\\ProgramData\\DRM\\Windows\nfalsepositives:\n- Unlikely\nid: 3121461b-5aa0-4a41-b910-66d25524edbb\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://www.welivesecurity.com/2020/01/31/winnti-group-targeting-universities-hong-kong/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\n- attack.g0044\ntitle: Winnti Malware HK University Campaign\n",
                            "sigma:id": "3121461b-5aa0-4a41-b910-66d25524edbb",
                            "title": "Winnti Malware HK University Campaign",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6414b5cd-b19d-447e-bb5e-9f03940b5784",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of \"dbghelp.dll\"",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/10/25\ndescription: Detects DLL sideloading of \"dbghelp.dll\"\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_generic:\n  - ImageLoaded|startswith:\n    - C:\\Windows\\System32\\\n    - C:\\Windows\\SysWOW64\\\n    - C:\\Windows\\WinSxS\\\n    - C:\\Windows\\SoftwareDistribution\\\n    - C:\\Windows\\SystemTemp\\\n    - C:\\Program Files (x86)\\\n    - C:\\Program Files\\\n  - ImageLoaded|endswith:\n    - \\Epic Games\\Launcher\\Engine\\Binaries\\ThirdParty\\DbgHelp\\dbghelp.dll\n    - \\Epic Games\\MagicLegends\\x86\\dbghelp.dll\n    - \\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp.dll\n    - \\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\i386\\dbghelp.dll\n  selection:\n    ImageLoaded|endswith: \\dbghelp.dll\nfalsepositives:\n- Legitimate applications loading their own versions of the DLL mentioned in this\n  rule\nid: 6414b5cd-b19d-447e-bb5e-9f03940b5784\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/10/28\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: DLL Sideloading Of DBGHELP.DLL\n",
                            "sigma:id": "6414b5cd-b19d-447e-bb5e-9f03940b5784",
                            "title": "DLL Sideloading Of DBGHELP.DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "8289bf8c-4aca-4f5a-9db3-dc3d7afe5c10",
                        "lookup_data": {
                            "description": "Detects Code Integrity (CI) engine blocking processes from loading unsigned DLLs residing in suspicious locations",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/03\ndescription: Detects Code Integrity (CI) engine blocking processes from loading unsigned\n  DLLs residing in suspicious locations\ndetection:\n  condition: selection\n  selection:\n    EventID:\n    - 11\n    - 12\n    ImageName|contains:\n    - \\Users\\Public\\\n    - \\PerfLogs\\\n    - \\Desktop\\\n    - \\Downloads\\\n    - \\AppData\\Local\\Temp\\\n    - C:\\Windows\\TEMP\\\nfalsepositives:\n- Unknown\nid: 8289bf8c-4aca-4f5a-9db3-dc3d7afe5c10\nlevel: high\nlogsource:\n  product: windows\n  service: security-mitigations\nmodified: 2022/09/28\nreferences:\n- https://github.com/nasbench/EVTX-ETW-Resources/blob/45fd5be71a51aa518b1b36d4e1f36af498084e27/ETWEventsList/CSV/Windows11/21H2/W11_21H2_Pro_20220719_22000.795/Providers/Microsoft-Windows-Security-Mitigations.csv\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Unsigned Binary Loaded From Suspicious Location\n",
                            "sigma:id": "8289bf8c-4aca-4f5a-9db3-dc3d7afe5c10",
                            "title": "Unsigned Binary Loaded From Suspicious Location",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9313dc13-d04c-46d8-af4a-a930cc55d93b",
                        "lookup_data": {
                            "description": "Detects loading of a DLL by the VMware Xfer utility from the non-default directory which may be an attempt to sideload arbitrary DLL",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/08/02\ndescription: Detects loading of a DLL by the VMware Xfer utility from the non-default\n  directory which may be an attempt to sideload arbitrary DLL\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith: C:\\Program Files\\VMware\\\n  selection:\n    ImageLoaded|endswith: \\glib-2.0.dll\n    Image|endswith: \\VMwareXferlogs.exe\nfalsepositives:\n- Unlikely\nid: 9313dc13-d04c-46d8-af4a-a930cc55d93b\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: VMware Xfer Loading DLL from Nondefault Path\n",
                            "sigma:id": "9313dc13-d04c-46d8-af4a-a930cc55d93b",
                            "title": "VMware Xfer Loading DLL from Nondefault Path",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cc4e02ba-9c06-48e2-b09e-2500cace9ae0",
                        "lookup_data": {
                            "description": "The Tasks folder in system32 and syswow64 are globally writable paths.\nAdversaries can take advantage of this and load or influence any script hosts or ANY .NET Application \nin Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr\n",
                            "raw": "author: Sreeman\ndate: 2020/01/13\ndescription: \"The Tasks folder in system32 and syswow64 are globally writable paths.\\n\\\n  Adversaries can take advantage of this and load or influence any script hosts or\\\n  \\ ANY .NET Application \\nin Tasks to load and execute a custom assembly into cscript,\\\n  \\ wscript, regsvr32, mshta, eventvwr\\n\"\ndetection:\n  condition: all of selection*\n  selection1:\n    CommandLine|contains:\n    - 'echo '\n    - 'copy '\n    - 'type '\n    - file createnew\n  selection2:\n    CommandLine|contains:\n    - ' C:\\Windows\\System32\\Tasks\\'\n    - ' C:\\Windows\\SysWow64\\Tasks\\'\nfalsepositives:\n- Unknown\nfields:\n- CommandLine\n- ParentProcess\nid: cc4e02ba-9c06-48e2-b09e-2500cace9ae0\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/12/25\nreferences:\n- https://twitter.com/subTee/status/1216465628946563073\n- https://gist.github.com/am0nsec/8378da08f848424e4ab0cc5b317fdd26\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.execution\n- attack.t1574.002\ntitle: Tasks Folder Evasion\n",
                            "sigma:id": "cc4e02ba-9c06-48e2-b09e-2500cace9ae0",
                            "title": "Tasks Folder Evasion",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
                        "lookup_data": {
                            "capec": "CAPEC-641",
                            "mitre-attack-id": "T1574.002",
                            "mitre-cti:description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
                            "mitre-cti:name": "DLL Side-Loading",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b', 'created': '2020-03-13T19:41:37.908Z', 'x_mitre_version': '2.0', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1574.002', 'url': 'https://attack.mitre.org/techniques/T1574/002'}, {'source_name': 'FireEye DLL Side-Loading', 'url': 'https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf', 'description': 'Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.'}, {'url': 'https://capec.mitre.org/data/definitions/641.html', 'source_name': 'capec', 'external_id': 'CAPEC-641'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\\n\\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)', 'modified': '2022-05-05T04:07:48.912Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'DLL Side-Loading', 'x_mitre_detection': 'Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'privilege-escalation'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_is_subtechnique': True, 'x_mitre_data_sources': ['File: File Modification', 'File: File Creation', 'Module: Module Load', 'Process: Process Creation'], 'x_mitre_defense_bypassed': ['Anti-virus', 'Application Control'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "72ca7c75-bf85-45cd-aca7-255d360e423c",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of DLLs that are part of web browsers",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/08/17\ndescription: Detects DLL sideloading of DLLs that are part of web browsers\ndetection:\n  condition: selection_chrome and not filter_chrome\n  filter_chrome:\n  - ImageLoaded|contains: \\AppData\\local\\Google\\Chrome\\Application\\\n  - ImageLoaded|startswith:\n    - C:\\Program Files\\Google\\Chrome\\Application\\\n    - C:\\Program Files (x86)\\Google\\Chrome\\Application\\\n  selection_chrome:\n    ImageLoaded|endswith: \\chrome_frame_helper.dll\nfalsepositives:\n- Unknown\nid: 72ca7c75-bf85-45cd-aca7-255d360e423c\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Web Browsers DLL Sideloading\n",
                            "sigma:id": "72ca7c75-bf85-45cd-aca7-255d360e423c",
                            "title": "Web Browsers DLL Sideloading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "552b6b65-df37-4d3e-a258-f2fc4771ae54",
                        "lookup_data": {
                            "description": "Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/08/17\ndescription: Detects potential DLL sideloading of DLLs that are part of antivirus\n  software suchas McAfee, Symantec...etc\ndetection:\n  condition: (selection_bitdefender and not 1 of filter_log_dll_*) or (selection_fsecure\n    and not filter_fsecure) or (selection_mcafee and not filter_mcafee) or (selection_cyberark\n    and not filter_cyberark) or (selection_avast and not filter_avast) or (selection_titanium\n    and not filter_titanium)\n  filter_avast:\n    ImageLoaded|startswith:\n    - C:\\program Files\\AVAST Software\\Avast\\\n    - C:\\program Files (x86)\\AVAST Software\\Avast\\\n  filter_cyberark:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\\n    - C:\\Program Files (x86)\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\\n  filter_fsecure:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\F-Secure\\Anti-Virus\\\n    - C:\\Program Files (x86)\\F-Secure\\Anti-Virus\\\n  filter_log_dll_bitdefender:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\Bitdefender Antivirus Free\\\n    - C:\\Program Files (x86)\\Bitdefender Antivirus Free\\\n  filter_log_dll_canon:\n    ImageLoaded|startswith: C:\\Program Files\\Canon\\MyPrinter\\\n  filter_log_dll_dell_sar:\n    Image: C:\\Program Files\\Dell\\SARemediation\\audit\\TelemetryUtility.exe\n    ImageLoaded:\n    - C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll\n    - C:\\Program Files\\Dell\\SARemediation\\audit\\log.dll\n  filter_mcafee:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\McAfee\\\n    - C:\\Program Files (x86)\\McAfee\\\n  filter_titanium:\n    ImageLoaded|startswith:\n    - C:\\program Files\\Trend Micro\\Titanium\\\n    - C:\\program Files (x86)\\Trend Micro\\Titanium\\\n  selection_avast:\n    ImageLoaded|endswith: \\wsc.dll\n  selection_bitdefender:\n    ImageLoaded|endswith: \\log.dll\n  selection_cyberark:\n    ImageLoaded|endswith: \\vftrace.dll\n  selection_fsecure:\n    ImageLoaded|endswith: \\qrt.dll\n  selection_mcafee:\n    ImageLoaded|endswith:\n    - \\ashldres.dll\n    - \\lockdown.dll\n    - \\vsodscpl.dll\n  selection_titanium:\n    ImageLoaded|endswith: \\tmdbglog.dll\nfalsepositives:\n- Applications that load the same dlls mentioned in the detection section. Investigate\n  them and filter them out if a lot FPs are caused.\n- Dell SARemediation plugin folder (C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll)\n  is known to contain the 'log.dll' file.\n- The Canon MyPrinter folder 'C:\\Program Files\\Canon\\MyPrinter\\' is known to contain\n  the 'log.dll' file\nid: 552b6b65-df37-4d3e-a258-f2fc4771ae54\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2023/01/29\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential Antivirus Software DLL Sideloading\n",
                            "sigma:id": "552b6b65-df37-4d3e-a258-f2fc4771ae54",
                            "title": "Potential Antivirus Software DLL Sideloading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b6f91281-20aa-446a-b986-38a92813a18f",
                        "lookup_data": {
                            "description": "Detects when an attacker create a similar folder structure to windows system folders such as (Windows, Program Files...)\nbut with a space in order to trick DLL load search order and perform a \"DLL Search Order Hijacking\" attack\n",
                            "raw": "author: frack113, Nasreddine Bencherchali\ndate: 2022/07/30\ndescription: 'Detects when an attacker create a similar folder structure to windows\n  system folders such as (Windows, Program Files...)\n\n  but with a space in order to trick DLL load search order and perform a \"DLL Search\n  Order Hijacking\" attack\n\n  '\ndetection:\n  condition: selection\n  selection:\n    TargetFilename|endswith: .dll\n    TargetFilename|startswith:\n    - C:\\Windows \\\n    - C:\\Program Files \\\n    - C:\\Program Files (x86) \\\nfalsepositives:\n- Unknown\nid: b6f91281-20aa-446a-b986-38a92813a18f\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://twitter.com/cyb3rops/status/1552932770464292864\n- https://www.wietzebeukema.nl/blog/hijacking-dlls-in-windows\nstatus: experimental\ntags:\n- attack.persistence\n- attack.privilege_escalation\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DLL Search Order Hijackig Via Additional Space in Path\n",
                            "sigma:id": "b6f91281-20aa-446a-b986-38a92813a18f",
                            "title": "DLL Search Order Hijackig Via Additional Space in Path",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6360757a-d460-456c-8b13-74cf0e60cceb",
                        "lookup_data": {
                            "description": "Detects potential DLL sideloading using comctl32.dll to obtain system privileges",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Subhash Popuri (@pbssubhash)\ndate: 2022/12/16\ndescription: Detects potential DLL sideloading using comctl32.dll to obtain system\n  privileges\ndetection:\n  condition: selection\n  selection:\n    ImageLoaded|endswith: \\comctl32.dll\n    ImageLoaded|startswith:\n    - C:\\Windows\\System32\\logonUI.exe.local\\\n    - C:\\Windows\\System32\\werFault.exe.local\\\n    - C:\\Windows\\System32\\consent.exe.local\\\n    - C:\\Windows\\System32\\narrator.exe.local\\\n    - C:\\windows\\system32\\wermgr.exe.local\\\nfalsepositives:\n- Unlikely\nid: 6360757a-d460-456c-8b13-74cf0e60cceb\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/12/19\nreferences:\n- https://github.com/binderlabs/DirCreate2System\n- https://github.com/sailay1996/awesome_windows_logical_bugs/blob/60cbb23a801f4c3195deac1cc46df27c225c3d07/dir_create2system.txt\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential DLL Sideloading Via comctl32.dll\n",
                            "sigma:id": "6360757a-d460-456c-8b13-74cf0e60cceb",
                            "title": "Potential DLL Sideloading Via comctl32.dll",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a5ea83a7-05a5-44c1-be2e-addccbbd8c03",
                        "lookup_data": {
                            "description": "Attempts to load dismcore.dll after dropping it",
                            "raw": "author: oscd.community, Dmitry Uchakin\ndate: 2020/10/06\ndescription: Attempts to load dismcore.dll after dropping it\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded: C:\\Windows\\System32\\Dism\\dismcore.dll\n  selection:\n    ImageLoaded|endswith: \\dismcore.dll\n    Image|endswith: \\dism.exe\nfalsepositives:\n- Actions of a legitimate telnet client\nid: a5ea83a7-05a5-44c1-be2e-addccbbd8c03\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2022/12/25\nreferences:\n- https://steemit.com/utopian-io/@ah101/uac-bypassing-utility\nstatus: test\ntags:\n- attack.persistence\n- attack.defense_evasion\n- attack.privilege_escalation\n- attack.t1548.002\n- attack.t1574.002\ntitle: UAC Bypass With Fake DLL\n",
                            "sigma:id": "a5ea83a7-05a5-44c1-be2e-addccbbd8c03",
                            "title": "UAC Bypass With Fake DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "f9df325d-d7bc-4a32-8a1a-2cc61dcefc63",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of DLLs that are part of third party software (zoom, discord....etc)",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)\ndate: 2022/08/17\ndescription: Detects DLL sideloading of DLLs that are part of third party software\n  (zoom, discord....etc)\ndetection:\n  condition: (selection_lenovo and not filter_lenovo) or (selection_toshiba and not\n    filter_toshiba)\n  filter_lenovo:\n  - ImageLoaded|contains: \\AppData\\local\\Google\\Chrome\\Application\\\n  - ImageLoaded|startswith:\n    - C:\\Program Files\\Lenovo\\Communications Utility\\\n    - C:\\Program Files (x86)\\Lenovo\\Communications Utility\\\n  filter_toshiba:\n    ImageLoaded|startswith:\n    - C:\\Program Files\\Toshiba\\Bluetooth Toshiba Stack\\\n    - C:\\Program Files (x86)\\Toshiba\\Bluetooth Toshiba Stack\\\n  selection_lenovo:\n    ImageLoaded|endswith: \\commfunc.dll\n  selection_toshiba:\n    ImageLoaded|endswith: \\tosbtkbd.dll\nfalsepositives:\n- Unknown\nid: f9df325d-d7bc-4a32-8a1a-2cc61dcefc63\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://hijacklibs.net/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Third Party Software DLL Sideloading\n",
                            "sigma:id": "f9df325d-d7bc-4a32-8a1a-2cc61dcefc63",
                            "title": "Third Party Software DLL Sideloading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "9aa01d62-7667-4d3b-acb8-8cb5103e2014",
                        "lookup_data": {
                            "description": "Detects the execution of DLL side-loading malware used by threat group Emissary Panda aka APT27",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/09/03\ndescription: Detects the execution of DLL side-loading malware used by threat group\n  Emissary Panda aka APT27\ndetection:\n  condition: selection\n  selection:\n    Image|endswith: \\svchost.exe\n    ParentImage|endswith: \\sllauncher.exe\nfalsepositives:\n- Unknown\nid: 9aa01d62-7667-4d3b-acb8-8cb5103e2014\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://app.any.run/tasks/579e7587-f09d-4aae-8b07-472833262965\n- https://twitter.com/cyb3rops/status/1168863899531132929\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Emissary Panda Malware SLLauncher\n",
                            "sigma:id": "9aa01d62-7667-4d3b-acb8-8cb5103e2014",
                            "title": "Emissary Panda Malware SLLauncher",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "70e8e9b4-6a93-4cb7-8cde-da69502e7aff",
                        "lookup_data": {
                            "description": "Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/12/01\ndescription: Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.\ndetection:\n  condition: selection and not filter\n  filter:\n    Signed: 'true'\n  selection:\n    ImageLoaded|contains|all:\n    - \\VMware\\VMware Tools\\vmStatsProvider\\win32\n    - \\vmGuestLib.dll\n    Image|endswith: \\Windows\\System32\\wbem\\WmiApSrv.exe\nfalsepositives:\n- FP could occure if the legitimate version of vmGuestLib already exists on the system\nid: 70e8e9b4-6a93-4cb7-8cde-da69502e7aff\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://decoded.avast.io/martinchlumecky/png-steganography/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: VMGuestLib DLL Sideload\n",
                            "sigma:id": "70e8e9b4-6a93-4cb7-8cde-da69502e7aff",
                            "title": "VMGuestLib DLL Sideload",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e32ce4f5-46c6-4c47-ba69-5de3c9193cd7",
                        "lookup_data": {
                            "description": "Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz",
                            "raw": "author: Markus Neis\ndate: 2018/01/07\ndescription: Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g.\n  through process hollowing by Mimikatz\ndetection:\n  condition: selection\n  selection:\n    ImageLoaded|endswith:\n    - \\samlib.dll\n    - \\WinSCard.dll\n    Image|endswith: \\notepad.exe\nfalsepositives:\n- Very likely, needs more tuning\nid: e32ce4f5-46c6-4c47-ba69-5de3c9193cd7\nlevel: high\nlogsource:\n  category: image_load\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for.html\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: Possible Process Hollowing Image Loading\n",
                            "sigma:id": "e32ce4f5-46c6-4c47-ba69-5de3c9193cd7",
                            "title": "Possible Process Hollowing Image Loading",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
                        "lookup_data": {
                            "description": "Detects execution of Microsoft Defender's CLI process (MpCmdRun.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL",
                            "raw": "author: Bhabesh Raj\ndate: 2022/08/01\ndescription: Detects execution of Microsoft Defender's CLI process (MpCmdRun.exe)\n  from the non-default directory which may be an attempt to sideload arbitrary DLL\ndetection:\n  condition: selection and not legit_path\n  legit_path:\n    Image|startswith:\n    - C:\\Program Files\\Windows Defender\\\n    - C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\\n    - C:\\Windows\\winsxs\\\n    - C:\\Program Files\\Microsoft Security Client\\MpCmdRun.exe\n  selection:\n    Image|endswith: \\MpCmdRun.exe\nfalsepositives:\n- Unknown\nid: 7002aa10-b8d4-47ae-b5ba-51ab07e228b9\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/08/09\nreferences:\n- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DLL Sideloading by Microsoft Defender\n",
                            "sigma:id": "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
                            "title": "DLL Sideloading by Microsoft Defender",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e61e8a88-59a9-451c-874e-70fcc9740d67",
                        "lookup_data": {
                            "description": "Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/05/08\ndescription: Detects the installation of a plugin DLL via ServerLevelPluginDll parameter\n  in Registry, which can be used to execute code in context of the DNS server (restart\n  required)\ndetection:\n  condition: selection\n  selection:\n    EventType: SetValue\n    TargetObject|endswith: \\services\\DNS\\Parameters\\ServerLevelPluginDll\nfalsepositives:\n- Unknown\nfields:\n- EventID\n- CommandLine\n- ParentCommandLine\n- Image\n- User\n- TargetObject\nid: e61e8a88-59a9-451c-874e-70fcc9740d67\nlevel: high\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/11/26\nreferences:\n- https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\n- attack.t1112\ntitle: DNS ServerLevelPluginDll Install - Registry\n",
                            "sigma:id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
                            "title": "DNS ServerLevelPluginDll Install - Registry",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e173ad47-4388-4012-ae62-bd13f71c18a8",
                        "lookup_data": {
                            "description": "Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that doesnt exist. This non-existent DLL file is named \"ShellChromeAPI.dll\". \nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter\n",
                            "raw": "author: '@gott_cyber'\ndate: 2022/08/29\ndescription: \"Detects the use of the PhoneDeepLink parameter to potentially sideload\\\n  \\ a DLL file that doesnt exist. This non-existent DLL file is named \\\"ShellChromeAPI.dll\\\"\\\n  . \\nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe\\\n  \\ using this parameter\\n\"\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: /PhoneDeepLink\n    Image|endswith: \\deviceenroller.exe\nfalsepositives:\n- Unknown\nid: e173ad47-4388-4012-ae62-bd13f71c18a8\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://mobile.twitter.com/0gtweet/status/1564131230941122561\n- https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DLL Sideloading via DeviceEnroller.exe\n",
                            "sigma:id": "e173ad47-4388-4012-ae62-bd13f71c18a8",
                            "title": "DLL Sideloading via DeviceEnroller.exe",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "75edd3fd-7146-48e5-9848-3013d7f0282c",
                        "lookup_data": {
                            "description": "This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded",
                            "raw": "author: Dimitrios Slamaris, @atc_project (fix)\ndate: 2017/05/15\ndescription: This rule detects a DHCP server error in which a specified Callout DLL\n  (in registry) could not be loaded\ndetection:\n  condition: selection\n  selection:\n    EventID:\n    - 1031\n    - 1032\n    - 1034\n    Provider_Name: Microsoft-Windows-DHCP-Server\nfalsepositives:\n- Unknown\nid: 75edd3fd-7146-48e5-9848-3013d7f0282c\nlevel: high\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/12/25\nreferences:\n- https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n- https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n- https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DHCP Server Error Failed Loading the CallOut DLL\n",
                            "sigma:id": "75edd3fd-7146-48e5-9848-3013d7f0282c",
                            "title": "DHCP Server Error Failed Loading the CallOut DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "13fc89a9-971e-4ca6-b9dc-aa53a445bf40",
                        "lookup_data": {
                            "description": "This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded",
                            "raw": "author: Dimitrios Slamaris\ndate: 2017/05/15\ndescription: This rule detects a DHCP server in which a specified Callout DLL (in\n  registry) was loaded\ndetection:\n  condition: selection\n  selection:\n    EventID: 1033\n    Provider_Name: Microsoft-Windows-DHCP-Server\nfalsepositives:\n- Unknown\nid: 13fc89a9-971e-4ca6-b9dc-aa53a445bf40\nlevel: high\nlogsource:\n  product: windows\n  service: system\nmodified: 2022/12/25\nreferences:\n- https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n- https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n- https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DHCP Server Loaded the CallOut DLL\n",
                            "sigma:id": "13fc89a9-971e-4ca6-b9dc-aa53a445bf40",
                            "title": "DHCP Server Loaded the CallOut DLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "caa02837-f659-466f-bca6-48bde2826ab4",
                        "lookup_data": {
                            "description": "Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software",
                            "raw": "author: frack113\ndate: 2022/12/13\ndescription: Detects potential DLL sideloading using ClassicExplorer32.dll from the\n  Classic Shell software\ndetection:\n  condition: selection_classicexplorer and not filter_classicexplorer\n  filter_classicexplorer:\n    ImageLoaded|startswith: C:\\Program Files\\Classic Shell\\\n  selection_classicexplorer:\n    ImageLoaded|endswith: \\ClassicExplorer32.dll\nfalsepositives:\n- Unknown\nid: caa02837-f659-466f-bca6-48bde2826ab4\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://blogs.blackberry.com/en/2022/12/mustang-panda-uses-the-russian-ukrainian-war-to-attack-europe-and-asia-pacific-targets\n- https://app.any.run/tasks/6d8cabb0-dcda-44b6-8050-28d6ce281687/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential DLL Sideloading Via ClassicExplorer32.dll\n",
                            "sigma:id": "caa02837-f659-466f-bca6-48bde2826ab4",
                            "title": "Potential DLL Sideloading Via ClassicExplorer32.dll",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cbe51394-cd93-4473-b555-edf0144952d9",
                        "lookup_data": {
                            "description": "This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2017/05/08\ndescription: This rule detects a DNS server error in which a specified plugin DLL\n  (in registry) could not be loaded\ndetection:\n  condition: selection\n  selection:\n    EventID:\n    - 150\n    - 770\nfalsepositives:\n- Unknown\nid: cbe51394-cd93-4473-b555-edf0144952d9\nlevel: high\nlogsource:\n  product: windows\n  service: dns-server\nmodified: 2021/11/27\nreferences:\n- https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\n- https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx\n- https://twitter.com/gentilkiwi/status/861641945944391680\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1574.002\ntitle: DNS Server Error Failed Loading the ServerLevelPluginDLL\n",
                            "sigma:id": "cbe51394-cd93-4473-b555-edf0144952d9",
                            "title": "DNS Server Error Failed Loading the ServerLevelPluginDLL",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "68654bf0-4412-43d5-bfe8-5eaa393cd939",
                        "lookup_data": {
                            "description": "Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor",
                            "raw": "author: frack113\ndate: 2022/12/14\ndescription: Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor\ndetection:\n  condition: selection and not filter\n  filter:\n    ImageLoaded|startswith: C:\\Program Files\\Common Files\\Justsystem\\JsSchHlp\\\n  selection:\n    ImageLoaded|endswith: \\JSESPR.dll\nfalsepositives:\n- Unknown\nid: 68654bf0-4412-43d5-bfe8-5eaa393cd939\nlevel: medium\nlogsource:\n  category: image_load\n  product: windows\nreferences:\n- https://www.welivesecurity.com/2022/12/14/unmasking-mirrorface-operation-liberalface-targeting-japanese-political-entities/\n- http://www.windowexe.com/bbs/board.php?q=jsschhlp-exe-c-program-files-common-files-justsystem-jsschhlp-jsschhlp\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.persistence\n- attack.privilege_escalation\n- attack.t1574.001\n- attack.t1574.002\ntitle: Potential DLL Sideloading Via JsSchHlp\n",
                            "sigma:id": "68654bf0-4412-43d5-bfe8-5eaa393cd939",
                            "title": "Potential DLL Sideloading Via JsSchHlp",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1574.002",
                "display_name": "Hijack Execution Flow: DLL Side-Loading",
                "atomic_tests": [
                    {
                        "name": "DLL Side-Loading using the Notepad++ GUP.exe binary",
                        "auto_generated_guid": "65526037-7079-44a9-bda1-2cb624838040",
                        "description": "GUP is an open source signed binary used by Notepad++ for software updates, and is vulnerable to DLL Side-Loading, thus enabling the libcurl dll to be loaded.\nUpon execution, calc.exe will be opened.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "process_name": {
                                "description": "Name of the created process",
                                "type": "string",
                                "default": "calculator.exe"
                            },
                            "gup_executable": {
                                "description": "GUP is an open source signed binary used by Notepad++ for software updates",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1574.002\\bin\\GUP.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Gup.exe binary must exist on disk at specified location (#{gup_executable})\n",
                                "prereq_command": "if (Test-Path \"#{gup_executable}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{gup_executable}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1574.002/bin/GUP.exe?raw=true\" -OutFile \"#{gup_executable}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "\"#{gup_executable}\"\n",
                            "cleanup_command": "taskkill /F /IM #{process_name} >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "DLL Side-Loading using the dotnet startup hook environment variable",
                        "auto_generated_guid": "d322cdd7-7d60-46e3-9111-648848da7c02",
                        "description": "Utilizing the dotnet_startup_hooks environment variable, this method allows for registering a global method in an assembly that will be executed whenever a .net core application is started. This unlocks a whole range of scenarios, from injecting a profiler to tweaking a static context in a given environment. [blog post](https://medium.com/criteo-engineering/c-have-some-fun-with-net-core-startup-hooks-498b9ad001e1)\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "process_name": {
                                "description": "Name of the created process",
                                "type": "string",
                                "default": "calculator.exe"
                            },
                            "preloader_dll": {
                                "description": "library for interfacing with the dotnet framework",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1574.002\\bin\\preloader.dll"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": ".Net SDK must be installed\n",
                                "prereq_command": "if (Test-Path \"C:\\Program Files\\dotnet\\dotnet.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "winget install Microsoft.DotNet.SDK.6 --accept-source-agreements --accept-package-agreements -h > $null\necho.\n"
                            },
                            {
                                "description": "preloader must exist\n",
                                "prereq_command": "if (Test-Path \"#{preloader_dll}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1574.002/bin/preloader?raw=true\" -OutFile \"#{preloader_dll}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "set DOTNET_STARTUP_HOOKS=\"#{preloader_dll}\"\ndotnet -h > nul\necho.\n",
                            "cleanup_command": "taskkill /F /IM #{process_name} >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "DLL Search Order Hijacking,DLL Sideloading Of KeyScramblerIE.DLL Via KeyScrambler.EXE",
                        "auto_generated_guid": "c095ad8e-4469-4d33-be9d-6f6d1fb21585",
                        "description": "Various threat actors and malware have been found side loading a masqueraded \"KeyScramblerIE.dll\" through \"KeyScrambler.exe\", which can load further executables embedded in modified KeyScramblerIE.dll file.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "Write-Host 1.Downloading KeyScrambler from official website to temp directory\nInvoke-WebRequest -Uri \"https://download.qfxsoftware.com/download/latest/KeyScrambler_Setup.exe\" -OutFile $env:Temp\\KeyScrambler_Setup.exe\nWrite-Host 2.Installing KeyScrambler with KeyScrambler_Setup.exe from temp directory\nStart-Process -FilePath $env:Temp\\KeyScrambler_Setup.exe -ArgumentList /S -Wait\nWrite-Host 3.Copying KeyScrambler.exe to temp folder,to avoid permission issues, which calls KeyScramblerIE.dll in CWD i.e. temp\nCopy-Item \"C:\\Program Files (x86)\\KeyScrambler\\KeyScrambler.exe\" -Destination $env:TEMP\\KeyScrambler.exe\nWrite-Host 4.Executing KeyScrambler.exe, you should see a popup of missing KeyScramblerIE.dll, you can close this popup\nStart-Process -FilePath $env:Temp\\KeyScrambler.exe\nWrite-Host 5.A modified KeyScramblerIE.dll can be copied to temp, which can be misused by Attacker",
                            "cleanup_command": "Write-Host 1.Kindly close the popup window asking for KeyScramblerIE.dll ,so that it gets deleted.\n\nRemove-Item -Path $env:Temp\\KeyScrambler_Setup.exe\nStart-Process -FilePath \"C:\\Program Files (x86)\\KeyScrambler\\Uninstall.exe\" -ArgumentList /S -Wait\nRemove-Item -Path $env:Temp\\KeyScrambler.exe\nWrite-Host 2.KeyScrambler cleanup completed successfully.",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 17:24:47"
}