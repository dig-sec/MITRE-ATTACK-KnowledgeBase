{
    "id": "T1010",
    "name": "Application Window Discovery",
    "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.",
    "platforms": "macOS, Windows",
    "kill_chain_phases": "Discovery",
    "data_sources": "Process: Process Creation, Command: Command Execution, Process: OS API Execution",
    "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](T1047) and [PowerShell](T1059.001).",
    "url": "https://attack.mitre.org/techniques/T1010",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "13addce7-47b2-4ca0-a98f-1de964d1d669",
                    "54dd4ef7-f7b2-418e-a191-5def4fbb0033",
                    "25d5e1d8-c6fb-4735-bc57-115a21222f4b",
                    "4ae4f953-fe58-4cc8-a327-33257e30a830",
                    "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                    "5d498330-f574-4889-bcc9-c53c950d210f"
                ],
                "lookup_results": [
                    {
                        "uuid": "13addce7-47b2-4ca0-a98f-1de964d1d669",
                        "lookup_data": {
                            "description": "Detects non-system users failing to get a handle of the SCM database.",
                            "raw": "author: Roberto Rodriguez @Cyb3rWard0g\ndate: 2019/08/12\ndescription: Detects non-system users failing to get a handle of the SCM database.\ndetection:\n  condition: selection and not filter\n  filter:\n    SubjectLogonId: '0x3e4'\n  selection:\n    AccessMask: '0xf003f'\n    EventID: 4656\n    ObjectName: ServicesActive\n    ObjectType: SC_MANAGER OBJECT\nfalsepositives:\n- Unknown\nid: 13addce7-47b2-4ca0-a98f-1de964d1d669\nlevel: medium\nlogsource:\n  product: windows\n  service: security\nmodified: 2022/07/11\nreferences:\n- https://threathunterplaybook.com/notebooks/windows/07_discovery/WIN-190826010110.html\nstatus: experimental\ntags:\n- attack.discovery\n- attack.t1010\ntitle: SCM Database Handle Failure\n",
                            "sigma:id": "13addce7-47b2-4ca0-a98f-1de964d1d669",
                            "title": "SCM Database Handle Failure",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "54dd4ef7-f7b2-418e-a191-5def4fbb0033",
                        "lookup_data": {
                            "description": "Turla: A Galaxy of Opportunity",
                            "link": "http://www.botvrij.eu/data/feed-osint/54dd4ef7-f7b2-418e-a191-5def4fbb0033.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1673286950",
                            "uuid": "54dd4ef7-f7b2-418e-a191-5def4fbb0033",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "25d5e1d8-c6fb-4735-bc57-115a21222f4b",
                        "lookup_data": {
                            "mitre-attack-id": "T1010",
                            "mitre-cti:description": "Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
                            "mitre-cti:name": "Application Window Discovery Mitigation",
                            "mitre-cti:type": "course-of-action",
                            "raw": "{'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'course-of-action--25d5e1d8-c6fb-4735-bc57-115a21222f4b', 'type': 'course-of-action', 'created': '2018-10-17T00:14:20.652Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'external_id': 'T1010', 'url': 'https://attack.mitre.org/mitigations/T1010', 'source_name': 'mitre-attack'}, {'source_name': 'Beechey 2010', 'description': 'Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.', 'url': 'http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599'}, {'url': 'http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html', 'description': 'Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.', 'source_name': 'Windows Commands JPCERT'}, {'url': 'https://apps.nsa.gov/iaarchive/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm', 'description': 'NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.', 'source_name': 'NSA MS AppLocker'}, {'source_name': 'Corio 2008', 'description': 'Corio, C., & Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.', 'url': 'http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx'}, {'source_name': 'TechNet Applocker vs SRP', 'description': 'Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.', 'url': 'https://technet.microsoft.com/en-us/library/ee791851.aspx'}], 'modified': '2020-01-17T16:45:23.664Z', 'name': 'Application Window Discovery Mitigation', 'description': 'Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)', 'x_mitre_deprecated': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "4ae4f953-fe58-4cc8-a327-33257e30a830",
                        "lookup_data": {
                            "mitre-attack-id": "T1010",
                            "mitre-cti:description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.(Citation: Prevailion DarkWatchman 2021)",
                            "mitre-cti:name": "Application Window Discovery",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['macOS', 'Windows', 'Linux'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830', 'created': '2017-05-31T21:30:24.512Z', 'x_mitre_version': '1.2', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1010', 'url': 'https://attack.mitre.org/techniques/T1010'}, {'source_name': 'Prevailion DarkWatchman 2021', 'url': 'https://www.prevailion.com/darkwatchman-new-fileless-techniques/', 'description': 'Smith, S., Stafford, M. (2021, December 14). DarkWatchman: A new evolution in fileless techniques. Retrieved January 10, 2022.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.(Citation: Prevailion DarkWatchman 2021)', 'modified': '2022-04-19T02:07:41.751Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Application Window Discovery', 'x_mitre_detection': 'System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\\n\\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'discovery'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Process: OS API Execution', 'Process: Process Creation', 'Command: Command Execution'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                        "lookup_data": {
                            "description": "UEFI threats moving to the ESP: Introducing ESPecter bootkit",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5df8df26-fe0e-4858-94a7-6cf71d9519c9.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1637336858",
                            "uuid": "5df8df26-fe0e-4858-94a7-6cf71d9519c9",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5d498330-f574-4889-bcc9-c53c950d210f",
                        "lookup_data": {
                            "description": "OSINT - Sharpening the Machete",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5d498330-f574-4889-bcc9-c53c950d210f.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1566552908",
                            "uuid": "5d498330-f574-4889-bcc9-c53c950d210f",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1010",
                "display_name": "Application Window Discovery",
                "atomic_tests": [
                    {
                        "name": "List Process Main Windows - C# .NET",
                        "auto_generated_guid": "fe94a1c3-3e22-4dc9-9fdf-3a8bdbc10dc4",
                        "description": "Compiles and executes C# code to list main window titles associated with each process.\n\nUpon successful execution, powershell will download the .cs from the Atomic Red Team repo, and cmd.exe will compile and execute T1010.exe. Upon T1010.exe execution, expected output will be via stdout.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "input_source_code": {
                                "description": "Path to source of C# code",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1010\\src\\T1010.cs"
                            },
                            "output_file_name": {
                                "description": "Name of output binary",
                                "type": "string",
                                "default": "%TEMP%\\T1010.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "T1010.cs must exist on disk at specified location (#{input_source_code})\n",
                                "prereq_command": "if (Test-Path \"#{input_source_code}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{input_source_code}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1010/src/T1010.cs -OutFile \"#{input_source_code}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} \"#{input_source_code}\"\n#{output_file_name}\n",
                            "cleanup_command": "del /f /q /s #{output_file_name} >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 10:48:15"
}