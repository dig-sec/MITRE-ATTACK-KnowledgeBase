{
    "id": "T1036.007",
    "name": "Double File Extension",
    "description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: `File.txt.exe` may render in some views as just `File.txt`). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension)\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](TA0001) into a user’s system via [Spearphishing Attachment](T1566.001) then [User Execution](T1204). For example, an executable file attachment named `Evil.txt.exe` may display as `Evil.txt` to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
    "platforms": "Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "File: File Creation, File: File Metadata",
    "detection": "Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)",
    "url": "https://attack.mitre.org/techniques/T1036/007",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1036.007",
                "atomic_attack_guid": "c7fa0c3b-b57f-4cba-9118-863bf4e653fc",
                "atomic_attack_name": "File Extension Masquerading",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "LOL-Binary Copied From System Directory",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_copy_system_dir_lolbin.yml",
                        "remote_content": "title: LOL-Binary Copied From System Directory\nid: f5d19838-41b5-476c-98d8-ba8af4929ee2\nrelated:\n    - id: fff9d2b7-e11c-4a69-93d3-40ef66189767\n      type: derived\nstatus: test\ndescription: |\n    Detects a suspicious copy operation that tries to copy a known LOLBIN from system (System32, SysWOW64, WinSxS) directories to another on disk in order to bypass detections based on locations.\nreferences:\n    - https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120\n    - https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html\n    - https://thedfirreport.com/2023/08/28/html-smuggling-leads-to-domain-wide-ransomware/\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2023-08-29\ntags:\n    - attack.defense-evasion\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_tools_cmd:\n        Image|endswith: '\\cmd.exe'\n        CommandLine|contains: 'copy '\n    selection_tools_pwsh:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n        CommandLine|contains:\n            - 'copy-item'\n            - ' copy '\n            - 'cpi '\n            - ' cp '\n    selection_tools_other:\n        - Image|endswith:\n              - '\\robocopy.exe'\n              - '\\xcopy.exe'\n        - OriginalFileName:\n              - 'robocopy.exe'\n              - 'XCOPY.EXE'\n    selection_target_path:\n        CommandLine|contains:\n            - '\\System32'\n            - '\\SysWOW64'\n            - '\\WinSxS'\n    selection_target_lolbin:\n        CommandLine|contains:\n            # Note: add more binaries to increase coverage\n            - '\\bitsadmin.exe'\n            - '\\calc.exe'\n            - '\\certutil.exe'\n            - '\\cmdl32.exe'\n            - '\\cscript.exe'\n            - '\\mshta.exe'\n            - '\\rundll32.exe'\n            - '\\wscript.exe'\n    condition: 1 of selection_tools_* and all of selection_target_*\nfalsepositives:\n    - Unknown\nlevel: high\n"
                    },
                    {
                        "rule_name": "Suspicious Copy From or To System Directory",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_copy_system_dir.yml",
                        "remote_content": "title: Suspicious Copy From or To System Directory\nid: fff9d2b7-e11c-4a69-93d3-40ef66189767\nrelated:\n    - id: 855bc8b5-2ae8-402e-a9ed-b889e6df1900\n      type: derived\nstatus: test\ndescription: |\n    Detects a suspicious copy operation that tries to copy a program from system (System32, SysWOW64, WinSxS) directories to another on disk.\n    Often used to move LOLBINs such as 'certutil' or 'desktopimgdownldr' to a different location with a different name in order to bypass detections based on locations.\nreferences:\n    - https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120\n    - https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html\n    - https://thedfirreport.com/2023/08/28/html-smuggling-leads-to-domain-wide-ransomware/\nauthor: Florian Roth (Nextron Systems), Markus Neis, Tim Shelton (HAWK.IO), Nasreddine Bencherchali (Nextron Systems)\ndate: 2020-07-03\nmodified: 2023-08-29\ntags:\n    - attack.defense-evasion\n    - attack.t1036.003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_cmd:\n        Image|endswith: '\\cmd.exe'\n        CommandLine|contains: 'copy '\n    selection_pwsh:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n        CommandLine|contains:\n            - 'copy-item'\n            - ' copy '\n            - 'cpi '\n            - ' cp '\n    selection_other:\n        - Image|endswith:\n              - '\\robocopy.exe'\n              - '\\xcopy.exe'\n        - OriginalFileName:\n              - 'robocopy.exe'\n              - 'XCOPY.EXE'\n    target:\n        CommandLine|contains:\n            - '\\System32'\n            - '\\SysWOW64'\n            - '\\WinSxS'\n    condition: 1 of selection_* and target\nfalsepositives:\n    - Depend on scripts and administrative tools used in the monitored environment (For example an admin scripts like https://www.itexperience.net/sccm-batch-files-and-32-bits-processes-on-64-bits-os/)\n    - When cmd.exe and xcopy.exe are called directly #  C:\\Windows\\System32\\cmd.exe /c copy file1 file2\n    - When the command contains the keywords but not in the correct order\nlevel: medium\n"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "11f29a39-0942-4d62-92b6-fe236cf3066e",
                    "b4926b47-a9d7-434c-b3a0-adc3fa0bd13e",
                    "3215aa19-f060-4332-86d5-5602511f3ca8",
                    "5e6a80c8-2d45-4633-9ef4-fa2671a39c5c"
                ],
                "lookup_results": [
                    {
                        "uuid": "11f29a39-0942-4d62-92b6-fe236cf3066e",
                        "lookup_data": {
                            "mitre-attack-id": "T1036.007",
                            "mitre-cti:description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
                            "mitre-cti:name": "Double File Extension",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e', 'type': 'attack-pattern', 'created': '2021-08-04T20:54:03.066Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1036.007', 'url': 'https://attack.mitre.org/techniques/T1036/007'}, {'source_name': 'PCMag DoubleExtension', 'url': 'https://www.pcmag.com/encyclopedia/term/double-extension', 'description': 'PCMag. (n.d.). Encyclopedia: double extension. Retrieved August 4, 2021.'}, {'source_name': 'SOCPrime DoubleExtension', 'url': 'https://socprime.com/blog/rule-of-the-week-possible-malicious-file-double-extension/', 'description': 'Eugene Tkachenko. (2020, May 1). Rule of the Week: Possible Malicious File Double Extension. Retrieved July 27, 2021.'}, {'source_name': 'Seqrite DoubleExtension', 'url': 'https://www.seqrite.com/blog/how-to-avoid-dual-attack-and-vulnerable-files-with-double-extension/', 'description': 'Seqrite. (n.d.). How to avoid dual attack and vulnerable files with double extension?. Retrieved July 27, 2021.'}], 'modified': '2021-10-14T21:09:59.588Z', 'name': 'Double File Extension', 'description': 'Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \\n\\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\\n\\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['File: File Creation', 'File: File Metadata']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b4926b47-a9d7-434c-b3a0-adc3fa0bd13e",
                        "lookup_data": {
                            "description": "Detects dropped files with double extensions, which is often used by malware as a method to abuse the fact that windows hide default extensions by default.",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), frack113\ndate: 2022/06/19\ndescription: Detects dropped files with double extensions, which is often used by\n  malware as a method to abuse the fact that windows hide default extensions by default.\ndetection:\n  condition: 1 of selection_*\n  selection_exe:\n    TargetFilename|endswith:\n    - .zip.exe\n    - .rar.exe\n  selection_gen:\n    TargetFilename|contains:\n    - .doc.\n    - .docx.\n    - .xls.\n    - .xlsx.\n    - .ppt.\n    - .pptx.\n    - .jpg.\n    - .pdf.\n    TargetFilename|endswith:\n    - .zip\n    - .rar\n    - .iso\n    - .exe\nfalsepositives:\n- Unlikely\nid: b4926b47-a9d7-434c-b3a0-adc3fa0bd13e\nlevel: high\nlogsource:\n  category: file_event\n  product: windows\nmodified: 2022/11/07\nreferences:\n- https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/\n- https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations\n- https://www.cybereason.com/blog/research/a-bazar-of-tricks-following-team9s-development-cycles\n- https://twitter.com/malwrhunterteam/status/1235135745611960321\n- https://twitter.com/luc4m/status/1073181154126254080\nrelated:\n- id: 1cdd9a09-06c9-4769-99ff-626e2b3991b8\n  type: derived\n- id: 3215aa19-f060-4332-86d5-5602511f3ca8\n  type: similar\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1036.007\ntitle: Suspicious Double Extension Files\n",
                            "sigma:id": "b4926b47-a9d7-434c-b3a0-adc3fa0bd13e",
                            "title": "Suspicious Double Extension Files",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3215aa19-f060-4332-86d5-5602511f3ca8",
                        "lookup_data": {
                            "description": "Detects dropped files with LNK double extension, which is often used by malware as a method to abuse the fact that windows hide default extensions by default.",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems), frack113\ndate: 2022/11/07\ndescription: Detects dropped files with LNK double extension, which is often used\n  by malware as a method to abuse the fact that windows hide default extensions by\n  default.\ndetection:\n  condition: selection and not filter\n  filter:\n    TargetFilename|contains:\n    - \\AppData\\Roaming\\Microsoft\\Office\\Recent\\\n    - \\AppData\\Roaming\\Microsoft\\Windows\\Recent\\\n  selection:\n    TargetFilename|contains:\n    - .doc.\n    - .docx.\n    - .xls.\n    - .xlsx.\n    - .ppt.\n    - .pptx.\n    - .jpg.\n    - .pdf.\n    TargetFilename|endswith: .lnk\nfalsepositives:\n- Users creating a shortcut on e.g. desktop\nid: 3215aa19-f060-4332-86d5-5602511f3ca8\nlevel: medium\nlogsource:\n  category: file_event\n  product: windows\nreferences:\n- https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/\n- https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations\n- https://www.cybereason.com/blog/research/a-bazar-of-tricks-following-team9s-development-cycles\n- https://twitter.com/malwrhunterteam/status/1235135745611960321\n- https://twitter.com/luc4m/status/1073181154126254080\nrelated:\n- id: b4926b47-a9d7-434c-b3a0-adc3fa0bd13e\n  type: derived\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1036.007\ntitle: Suspicious LNK Double Extension Files\n",
                            "sigma:id": "3215aa19-f060-4332-86d5-5602511f3ca8",
                            "title": "Suspicious LNK Double Extension Files",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5e6a80c8-2d45-4633-9ef4-fa2671a39c5c",
                        "lookup_data": {
                            "description": "Detect execution of suspicious double extension files in ParentCommandLine",
                            "raw": "author: frack113\ndate: 2023/01/06\ndescription: Detect execution of suspicious double extension files in ParentCommandLine\ndetection:\n  condition: selection\n  selection:\n    ParentCommandLine|contains:\n    - .doc.lnk\n    - .docx.lnk\n    - .xls.lnk\n    - .xlsx.lnk\n    - .ppt.lnk\n    - .pptx.lnk\n    - .rtf.lnk\n    - .pdf.lnk\n    - .txt.lnk\nfalsepositives:\n- Unknown\nid: 5e6a80c8-2d45-4633-9ef4-fa2671a39c5c\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.virustotal.com/gui/file/7872d8845a332dce517adae9c3389fde5313ff2fed38c2577f3b498da786db68/behavior\n- https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/bluebottle-banks-targeted-africa\nrelated:\n- id: 1cdd9a09-06c9-4769-99ff-626e2b3991b8\n  type: derived\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1036.007\ntitle: Suspicious Double File Extention in ParentCommandLine\n",
                            "sigma:id": "5e6a80c8-2d45-4633-9ef4-fa2671a39c5c",
                            "title": "Suspicious Double File Extention in ParentCommandLine",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1036.007",
                "display_name": "Masquerading: Double File Extension",
                "atomic_tests": [
                    {
                        "name": "File Extension Masquerading",
                        "auto_generated_guid": "c7fa0c3b-b57f-4cba-9118-863bf4e653fc",
                        "description": "download and execute a file masquerading as images or Office files. Upon execution 3 calc instances and 3 vbs windows will be launched.\n\ne.g SOME_LEGIT_NAME.[doc,docx,xls,xlsx,pdf,rtf,png,jpg,etc.].[exe,vbs,js,ps1,etc] (Quartelyreport.docx.exe)\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "exe_path": {
                                "description": "path to exe to use when creating masquerading files",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\calc.exe"
                            },
                            "vbs_path": {
                                "description": "path of vbs to use when creating masquerading files",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1036.007\\src\\T1036.007_masquerading.vbs"
                            },
                            "ps1_path": {
                                "description": "path of powershell script to use when creating masquerading files",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1036.007\\src\\T1036.007_masquerading.ps1"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "File to copy must exist on disk at specified location (#{vbs_path})\n",
                                "prereq_command": "if (Test-Path \"#{vbs_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{vbs_path}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036.007/src/T1036.007_masquerading.vbs\" -OutFile \"#{vbs_path}\"\n"
                            },
                            {
                                "description": "File to copy must exist on disk at specified location (#{ps1_path})\n",
                                "prereq_command": "if (Test-Path \"#{ps1_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{ps1_path}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036.007/src/T1036.007_masquerading.ps1\" -OutFile \"#{ps1_path}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "copy \"#{exe_path}\" %temp%\\T1036.007_masquerading.docx.exe /Y\ncopy \"#{exe_path}\" %temp%\\T1036.007_masquerading.pdf.exe /Y\ncopy \"#{exe_path}\" %temp%\\T1036.007_masquerading.ps1.exe /Y\ncopy \"#{vbs_path}\" %temp%\\T1036.007_masquerading.xls.vbs /Y\ncopy \"#{vbs_path}\" %temp%\\T1036.007_masquerading.xlsx.vbs /Y\ncopy \"#{vbs_path}\" %temp%\\T1036.007_masquerading.png.vbs /Y\ncopy \"#{ps1_path}\" %temp%\\T1036.007_masquerading.doc.ps1 /Y\ncopy \"#{ps1_path}\" %temp%\\T1036.007_masquerading.pdf.ps1 /Y\ncopy \"#{ps1_path}\" %temp%\\T1036.007_masquerading.rtf.ps1 /Y\n%temp%\\T1036.007_masquerading.docx.exe\n%temp%\\T1036.007_masquerading.pdf.exe\n%temp%\\T1036.007_masquerading.ps1.exe\n%temp%\\T1036.007_masquerading.xls.vbs\n%temp%\\T1036.007_masquerading.xlsx.vbs\n%temp%\\T1036.007_masquerading.png.vbs\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.007_masquerading.doc.ps1\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.007_masquerading.pdf.ps1\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -File %temp%\\T1036.007_masquerading.rtf.ps1\n",
                            "cleanup_command": "del /f %temp%\\T1036.007_masquerading.docx.exe > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.pdf.exe > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.ps1.exe > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.xls.vbs > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.xlsx.vbs > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.png.vbs > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.doc.ps1 > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.pdf.ps1 > nul 2>&1\ndel /f %temp%\\T1036.007_masquerading.rtf.ps1 > nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 11:21:12"
}