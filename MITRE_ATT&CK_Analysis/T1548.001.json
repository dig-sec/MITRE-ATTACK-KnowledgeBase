{
    "id": "T1548.001",
    "name": "Setuid and Setgid",
    "description": "An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. (Citation: setuid man page). Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges.\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via `ls -l`. The `chmod` program can set these bits with via bitmasking, `chmod 4777 [file]` or via shorthand naming, `chmod u+s [file]`.\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware).",
    "platforms": "Linux, macOS",
    "kill_chain_phases": "Privilege Escalation, Defense Evasion",
    "data_sources": "Command: Command Execution, File: File Metadata, File: File Modification",
    "detection": "Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.",
    "url": "https://attack.mitre.org/techniques/T1548/001",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "1ac3272f-9bcf-443a-9888-4b1d3de785c1",
                "atomic_attack_name": "Provide the SetUID capability to a file",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Setuid Using Setcap Utility",
                        "rule_link": "https://research.splunk.com/endpoint/9d96022e-6250-11ec-9a19-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Sudo OR Su Execution",
                        "rule_link": "https://research.splunk.com/endpoint/4b00f134-6d6a-11ec-a90c-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "db53959c-207d-4000-9e7a-cd8eb417e072",
                "atomic_attack_name": "Make and modify capabilities of a binary",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Setuid Using Setcap Utility",
                        "rule_link": "https://research.splunk.com/endpoint/9d96022e-6250-11ec-9a19-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "1f73af33-62a8-4bf1-bd10-3bea931f2c0d",
                "atomic_attack_name": "Set a SetGID flag on file (freebsd)",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "db55f666-7cba-46c6-9fe6-205a05c3242c",
                "atomic_attack_name": "Set a SetGID flag on file",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "9be9b827-ff47-4e1b-bef8-217db6fb7283",
                "atomic_attack_name": "Set a SetUID flag on file (freebsd)",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "759055b3-3885-4582-a8ec-c00c9d64dd79",
                "atomic_attack_name": "Set a SetUID flag on file",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "dd580455-d84b-481b-b8b0-ac96f3b1dc4c",
                "atomic_attack_name": "Make and modify binary from C source (freebsd)",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Setuid and Setgid",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_setgid_setuid.yml",
                        "remote_content": "title: Setuid and Setgid\nid: c21c4eaa-ba2e-419a-92b2-8371703cbe21\nstatus: test\ndescription: Detects suspicious change of file privileges with chown and chmod commands\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.001/T1548.001.md\n    - https://attack.mitre.org/techniques/T1548/001/\nauthor: Ömer Günal\ndate: 2020-06-16\nmodified: 2022-10-05\ntags:\n    - attack.persistence\n    - attack.t1548.001\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection_root:\n        CommandLine|contains: 'chown root'\n    selection_perm:\n        CommandLine|contains:\n            - ' chmod u+s'\n            - ' chmod g+s'\n    condition: all of selection_*\nfalsepositives:\n    - Legitimate administration activities\nlevel: low\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Setuid Using Chmod Utility",
                        "rule_link": "https://research.splunk.com/endpoint/bf0304b6-6250-11ec-9d7c-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "896dfe97-ae43-4101-8e96-9a7996555d80",
                "atomic_attack_name": "Make and modify binary from C source",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Setuid and Setgid",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_setgid_setuid.yml",
                        "remote_content": "title: Setuid and Setgid\nid: c21c4eaa-ba2e-419a-92b2-8371703cbe21\nstatus: test\ndescription: Detects suspicious change of file privileges with chown and chmod commands\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.001/T1548.001.md\n    - https://attack.mitre.org/techniques/T1548/001/\nauthor: Ömer Günal\ndate: 2020-06-16\nmodified: 2022-10-05\ntags:\n    - attack.persistence\n    - attack.t1548.001\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection_root:\n        CommandLine|contains: 'chown root'\n    selection_perm:\n        CommandLine|contains:\n            - ' chmod u+s'\n            - ' chmod g+s'\n    condition: all of selection_*\nfalsepositives:\n    - Legitimate administration activities\nlevel: low\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Linux Common Process For Elevation Control",
                        "rule_link": "https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Setuid Using Chmod Utility",
                        "rule_link": "https://research.splunk.com/endpoint/bf0304b6-6250-11ec-9d7c-acde48001122/"
                    },
                    {
                        "rule_name": "Linux Change File Owner To Root",
                        "rule_link": "https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "3fb46e17-f337-4c14-9f9a-a471946533e2",
                "atomic_attack_name": "Do reconnaissance for files that have the setgid bit set",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Potential Discovery Activity Using Find - Linux",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_susp_find_execution.yml",
                        "remote_content": "title: Potential Discovery Activity Using Find - Linux\nid: 8344c0e5-5783-47cc-9cf9-a0f7fd03e6cf\nrelated:\n    - id: 85de3a19-b675-4a51-bfc6-b11a5186c971\n      type: similar\nstatus: test\ndescription: Detects usage of \"find\" binary in a suspicious manner to perform discovery\nreferences:\n    - https://github.com/SaiSathvik1/Linux-Privilege-Escalation-Notes\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-12-28\ntags:\n    - attack.discovery\n    - attack.t1083\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/find'\n        CommandLine|contains:\n            - '-perm -4000'\n            - '-perm -2000'\n            - '-perm 0777'\n            - '-perm -222'\n            - '-perm -o w'\n            - '-perm -o x'\n            - '-perm -u=s'\n            - '-perm -g=s'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ]
            },
            {
                "tech_id": "T1548.001",
                "atomic_attack_guid": "8e36da01-cd29-45fd-be72-8a0fcaad4481",
                "atomic_attack_name": "Do reconnaissance for files that have the setuid bit set",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Potential Discovery Activity Using Find - Linux",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_susp_find_execution.yml",
                        "remote_content": "title: Potential Discovery Activity Using Find - Linux\nid: 8344c0e5-5783-47cc-9cf9-a0f7fd03e6cf\nrelated:\n    - id: 85de3a19-b675-4a51-bfc6-b11a5186c971\n      type: similar\nstatus: test\ndescription: Detects usage of \"find\" binary in a suspicious manner to perform discovery\nreferences:\n    - https://github.com/SaiSathvik1/Linux-Privilege-Escalation-Notes\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-12-28\ntags:\n    - attack.discovery\n    - attack.t1083\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/find'\n        CommandLine|contains:\n            - '-perm -4000'\n            - '-perm -2000'\n            - '-perm 0777'\n            - '-perm -222'\n            - '-perm -o w'\n            - '-perm -o x'\n            - '-perm -u=s'\n            - '-perm -g=s'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium\n"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "0506a799-698b-43b4-85a1-ac4c84c720e9",
                    "6831414d-bb70-42b7-8030-d4e06b2660c9",
                    "c21c4eaa-ba2e-419a-92b2-8371703cbe21"
                ],
                "lookup_results": [
                    {
                        "uuid": "0506a799-698b-43b4-85a1-ac4c84c720e9",
                        "lookup_data": {
                            "description": "Detects potential PwnKit exploitation CVE-2021-4034 in auth logs",
                            "raw": "author: Sreeman\ndate: 2022/01/26\ndescription: Detects potential PwnKit exploitation CVE-2021-4034 in auth logs\ndetection:\n  condition: keywords\n  keywords:\n    '|all':\n    - pkexec\n    - The value for environment variable XAUTHORITY contains suscipious content\n    - '[USER=root] [TTY=/dev/pts/0]'\nfalsepositives:\n- Unknown\nid: 0506a799-698b-43b4-85a1-ac4c84c720e9\nlevel: high\nlogsource:\n  product: linux\n  service: auth\nmodified: 2023/01/23\nreferences:\n- https://twitter.com/wdormann/status/1486161836961579020\nstatus: experimental\ntags:\n- attack.privilege_escalation\n- attack.t1548.001\ntitle: PwnKit Local Privilege Escalation\n",
                            "sigma:id": "0506a799-698b-43b4-85a1-ac4c84c720e9",
                            "title": "PwnKit Local Privilege Escalation",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "6831414d-bb70-42b7-8030-d4e06b2660c9",
                        "lookup_data": {
                            "mitre-attack-id": "T1548.001",
                            "mitre-cti:description": "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgit bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\n\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)",
                            "mitre-cti:name": "Setuid and Setgid",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--6831414d-bb70-42b7-8030-d4e06b2660c9', 'created': '2020-01-30T14:11:41.212Z', 'x_mitre_version': '1.1', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1548.001', 'url': 'https://attack.mitre.org/techniques/T1548/001'}, {'source_name': 'GTFOBins Suid', 'url': 'https://gtfobins.github.io/#+suid', 'description': 'Emilio Pinna, Andrea Cardaci. (n.d.). GTFOBins. Retrieved January 28, 2022.'}, {'source_name': 'OSX Keydnap malware', 'url': 'https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/', 'description': 'Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.'}, {'source_name': 'setuid man page', 'url': 'http://man7.org/linux/man-pages/man2/setuid.2.html', 'description': \"Michael Kerrisk. (2017, September 15). Linux Programmer's Manual. Retrieved September 21, 2018.\"}], 'x_mitre_deprecated': False, 'revoked': False, 'description': 'An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\\n\\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgit bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.\\n\\nAdversaries can use this mechanism on their own malware to make sure they\\'re able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\\n\\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file\\'s attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)', 'modified': '2022-04-19T15:07:53.060Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Setuid and Setgid', 'x_mitre_detection': 'Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'privilege-escalation'}, {'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_is_subtechnique': True, 'x_mitre_data_sources': ['File: File Modification', 'File: File Metadata', 'Command: Command Execution'], 'x_mitre_permissions_required': ['User'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c21c4eaa-ba2e-419a-92b2-8371703cbe21",
                        "lookup_data": {
                            "description": "Detects suspicious change of file privileges with chown and chmod commands",
                            "raw": "author: \"\\xD6mer G\\xFCnal\"\ndate: 2020/06/16\ndescription: Detects suspicious change of file privileges with chown and chmod commands\ndetection:\n  condition: all of selection_*\n  selection_perm:\n    CommandLine|contains:\n    - ' chmod u+s'\n    - ' chmod g+s'\n  selection_root:\n    CommandLine|contains: chown root\nfalsepositives:\n- Legitimate administration activities\nid: c21c4eaa-ba2e-419a-92b2-8371703cbe21\nlevel: low\nlogsource:\n  category: process_creation\n  product: linux\nmodified: 2022/10/05\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.001/T1548.001.md\n- https://attack.mitre.org/techniques/T1548/001/\nstatus: test\ntags:\n- attack.persistence\n- attack.t1548.001\ntitle: Setuid and Setgid\n",
                            "sigma:id": "c21c4eaa-ba2e-419a-92b2-8371703cbe21",
                            "title": "Setuid and Setgid",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1548.001",
                "display_name": "Abuse Elevation Control Mechanism: Setuid and Setgid",
                "atomic_tests": [
                    {
                        "name": "Make and modify binary from C source",
                        "auto_generated_guid": "896dfe97-ae43-4101-8e96-9a7996555d80",
                        "description": "Make, change owner, and change file attributes on a C source code file\n",
                        "supported_platforms": [
                            "macos",
                            "linux"
                        ],
                        "input_arguments": {
                            "payload": {
                                "description": "hello.c payload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1548.001/src/hello.c"
                            }
                        },
                        "executor": {
                            "command": "cp #{payload} /tmp/hello.c\nsudo chown root /tmp/hello.c\nsudo make /tmp/hello\nsudo chown root /tmp/hello\nsudo chmod u+s /tmp/hello\n/tmp/hello\n",
                            "cleanup_command": "sudo rm /tmp/hello\nsudo rm /tmp/hello.c\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Make and modify binary from C source (freebsd)",
                        "auto_generated_guid": "dd580455-d84b-481b-b8b0-ac96f3b1dc4c",
                        "description": "Make, change owner, and change file attributes on a C source code file\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "payload": {
                                "description": "hello.c payload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1548.001/src/hello.c"
                            }
                        },
                        "executor": {
                            "command": "cp #{payload} /tmp/hello.c\nchown root /tmp/hello.c\nmake /tmp/hello\nchown root /tmp/hello\nchmod u+s /tmp/hello\n/tmp/hello\n",
                            "cleanup_command": "rm /tmp/hello\nrm /tmp/hello.c\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Set a SetUID flag on file",
                        "auto_generated_guid": "759055b3-3885-4582-a8ec-c00c9d64dd79",
                        "description": "This test sets the SetUID flag on a file in FreeBSD.\n",
                        "supported_platforms": [
                            "macos",
                            "linux"
                        ],
                        "input_arguments": {
                            "file_to_setuid": {
                                "description": "Path of file to set SetUID flag",
                                "type": "path",
                                "default": "/tmp/evilBinary"
                            }
                        },
                        "executor": {
                            "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod u+xs #{file_to_setuid}\n",
                            "cleanup_command": "sudo rm #{file_to_setuid}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Set a SetUID flag on file (freebsd)",
                        "auto_generated_guid": "9be9b827-ff47-4e1b-bef8-217db6fb7283",
                        "description": "This test sets the SetUID flag on a file in FreeBSD.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "file_to_setuid": {
                                "description": "Path of file to set SetUID flag",
                                "type": "path",
                                "default": "/tmp/evilBinary"
                            }
                        },
                        "executor": {
                            "command": "touch #{file_to_setuid}\nchown root #{file_to_setuid}\nchmod u+xs #{file_to_setuid}\n",
                            "cleanup_command": "rm #{file_to_setuid}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Set a SetGID flag on file",
                        "auto_generated_guid": "db55f666-7cba-46c6-9fe6-205a05c3242c",
                        "description": "This test sets the SetGID flag on a file in Linux and macOS.\n",
                        "supported_platforms": [
                            "macos",
                            "linux"
                        ],
                        "input_arguments": {
                            "file_to_setuid": {
                                "description": "Path of file to set SetGID flag",
                                "type": "path",
                                "default": "/tmp/evilBinary"
                            }
                        },
                        "executor": {
                            "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod g+xs #{file_to_setuid}\n",
                            "cleanup_command": "sudo rm #{file_to_setuid}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Set a SetGID flag on file (freebsd)",
                        "auto_generated_guid": "1f73af33-62a8-4bf1-bd10-3bea931f2c0d",
                        "description": "This test sets the SetGID flag on a file in FreeBSD.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "file_to_setuid": {
                                "description": "Path of file to set SetGID flag",
                                "type": "path",
                                "default": "/tmp/evilBinary"
                            }
                        },
                        "executor": {
                            "command": "touch #{file_to_setuid}\nchown root #{file_to_setuid}\nchmod g+xs #{file_to_setuid}\n",
                            "cleanup_command": "rm #{file_to_setuid}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Make and modify capabilities of a binary",
                        "auto_generated_guid": "db53959c-207d-4000-9e7a-cd8eb417e072",
                        "description": "Make and modify [capabilities](https://man7.org/linux/man-pages/man7/capabilities.7.html) of a C source code file.\nThe binary doesn't have to modify the UID, but the binary is given the capability to arbitrarily modify it at any time with `setuid(0)`.\nWithout being owned by root, the binary can set the UID to 0.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "payload": {
                                "description": "cap.c payload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1548.001/src/cap.c"
                            }
                        },
                        "executor": {
                            "command": "cp #{payload} /tmp/cap.c\nmake /tmp/cap\nsudo setcap cap_setuid=ep /tmp/cap\n/tmp/cap\n",
                            "cleanup_command": "rm /tmp/cap\nrm /tmp/cap.c\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Provide the SetUID capability to a file",
                        "auto_generated_guid": "1ac3272f-9bcf-443a-9888-4b1d3de785c1",
                        "description": "This test gives a file the capability to set UID without using flags.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "file_to_setcap": {
                                "description": "Path of file to provide the SetUID capability",
                                "type": "path",
                                "default": "/tmp/evilBinary"
                            }
                        },
                        "executor": {
                            "command": "touch #{file_to_setcap}\nsudo setcap cap_setuid=ep #{file_to_setcap}\n",
                            "cleanup_command": "rm #{file_to_setcap}\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Do reconnaissance for files that have the setuid bit set",
                        "auto_generated_guid": "8e36da01-cd29-45fd-be72-8a0fcaad4481",
                        "description": "This test simulates a command that can be run to enumerate files that have the setuid bit set\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "executor": {
                            "command": "find /usr/bin -perm -4000\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Do reconnaissance for files that have the setgid bit set",
                        "auto_generated_guid": "3fb46e17-f337-4c14-9f9a-a471946533e2",
                        "description": "This test simulates a command that can be run to enumerate files that have the setgid bit set\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "executor": {
                            "command": "find /usr/bin -perm -2000\n",
                            "name": "sh"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 15:50:52"
}