{
    "id": "T1176",
    "name": "Browser Extensions",
    "description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the `profiles` tool to install malicious `.mobileconfig` files. In macOS 11+, the use of the `profiles` tool can no longer install configuration profiles, however `.mobileconfig` files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\nOnce the extension is installed, it can browse to websites in the background,(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions) steal all information that a user enters into a browser (including credentials)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension) and be used as an installer for a RAT for persistence.\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Persistence",
    "data_sources": "Command: Command Execution, Process: Process Creation, Network Traffic: Network Connection Creation, Windows Registry: Windows Registry Key Creation, File: File Creation",
    "detection": "Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\nOn macOS, monitor the command line for usage of the profiles tool, such as `profiles install -type=configuration`. Additionally, all installed extensions maintain a `plist` file in the `/Library/Managed Preferences/username/` directory. Ensure all listed files are in alignment with approved extensions.(Citation: xorrior chrome extensions macOS)",
    "url": "https://attack.mitre.org/techniques/T1176",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "27ba3207-dd30-4812-abbf-5d20c57d474e",
                    "b52f41b9-ccf6-4da7-a6c0-167eeb71fbd8",
                    "389735f1-f21c-4208-b8f0-f8031e7169b8"
                ],
                "lookup_results": [
                    {
                        "uuid": "27ba3207-dd30-4812-abbf-5d20c57d474e",
                        "lookup_data": {
                            "description": "Detects PowerShell process spawning a 'chrome.exe' process with the 'load-extension' flag to start a new chrome instance with custom extensions, as seen being used in 'ChromeLoader'",
                            "raw": "author: Aedan Russell, frack113 (sigma)\ndate: 2022/06/19\ndescription: Detects PowerShell process spawning a 'chrome.exe' process with the 'load-extension'\n  flag to start a new chrome instance with custom extensions, as seen being used in\n  'ChromeLoader'\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - --load-extension=\n    - \\AppData\\Local\\\n    Image|endswith: \\chrome.exe\n    ParentImage|endswith:\n    - \\powershell.exe\n    - \\pwsh.exe\nfalsepositives:\n- Unknown\nid: 27ba3207-dd30-4812-abbf-5d20c57d474e\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/07/14\nreferences:\n- https://redcanary.com/blog/chromeloader/\n- https://emkc.org/s/RJjuLa\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1176\ntitle: Powershell ChromeLoader Browser Hijacker\n",
                            "sigma:id": "27ba3207-dd30-4812-abbf-5d20c57d474e",
                            "title": "Powershell ChromeLoader Browser Hijacker",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b52f41b9-ccf6-4da7-a6c0-167eeb71fbd8",
                        "lookup_data": {
                            "mitre-attack-id": "T1176",
                            "mitre-cti:description": "Only install browser extensions from trusted sources that can be verified. Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.\n\nBrowser extensions for some browsers can be controlled through Group Policy. Set a browser extension white or black list as appropriate for your security policy. (Citation: Technospot Chrome Extensions GP)\n\nChange settings to prevent the browser from installing extensions without sufficient permissions.\n\nClose out all browser sessions when finished using them.",
                            "mitre-cti:name": "Browser Extensions Mitigation",
                            "mitre-cti:type": "course-of-action",
                            "raw": "{'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'course-of-action--b52f41b9-ccf6-4da7-a6c0-167eeb71fbd8', 'type': 'course-of-action', 'created': '2018-10-17T00:14:20.652Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'url': 'https://attack.mitre.org/mitigations/T1176', 'external_id': 'T1176'}, {'source_name': 'Technospot Chrome Extensions GP', 'description': 'Mohta, A. (n.d.). Block Chrome Extensions using Google Chrome Group Policy Settings. Retrieved January 10, 2018.', 'url': 'http://www.technospot.net/blogs/block-chrome-extensions-using-google-chrome-group-policy-settings/'}], 'modified': '2019-07-24T14:41:17.903Z', 'name': 'Browser Extensions Mitigation', 'description': 'Only install browser extensions from trusted sources that can be verified. Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.\\n\\nBrowser extensions for some browsers can be controlled through Group Policy. Set a browser extension white or black list as appropriate for your security policy. (Citation: Technospot Chrome Extensions GP)\\n\\nChange settings to prevent the browser from installing extensions without sufficient permissions.\\n\\nClose out all browser sessions when finished using them.', 'x_mitre_deprecated': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "389735f1-f21c-4208-b8f0-f8031e7169b8",
                        "lookup_data": {
                            "mitre-attack-id": "T1176",
                            "mitre-cti:description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)",
                            "mitre-cti:name": "Browser Extensions",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Chris Ross @xorrior', 'Justin Warner, ICEBRG'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'type': 'attack-pattern', 'id': 'attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8', 'created': '2018-01-16T16:13:52.465Z', 'x_mitre_version': '1.2', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1176', 'url': 'https://attack.mitre.org/techniques/T1176'}, {'source_name': 'Chrome Extension Crypto Miner', 'url': 'https://www.ghacks.net/2017/09/19/first-chrome-extension-with-javascript-crypto-miner-detected/', 'description': 'Brinkmann, M. (2017, September 19). First Chrome extension with JavaScript Crypto Miner detected. Retrieved November 16, 2017.'}, {'source_name': 'xorrior chrome extensions macOS', 'url': 'https://www.xorrior.com/No-Place-Like-Chrome/', 'description': 'Chris Ross. (2019, February 8). No Place Like Chrome. Retrieved April 27, 2021.'}, {'source_name': 'Chrome Extensions Definition', 'url': 'https://developer.chrome.com/extensions', 'description': 'Chrome. (n.d.). What are Extensions?. Retrieved November 16, 2017.'}, {'source_name': 'ICEBRG Chrome Extensions', 'url': 'https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses', 'description': 'De Tore, M., Warner, J. (2018, January 15). MALICIOUS CHROME EXTENSIONS ENABLE CRIMINALS TO IMPACT OVER HALF A MILLION USERS AND GLOBAL BUSINESSES. Retrieved January 17, 2018.'}, {'source_name': 'Malicious Chrome Extension Numbers', 'url': 'https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43824.pdf', 'description': 'Jagpal, N., et al. (2015, August). Trends and Lessons from Three Years Fighting Malicious Extensions. Retrieved November 17, 2017.'}, {'source_name': 'Chrome Extension C2 Malware', 'url': 'https://kjaer.io/extension-malware/', 'description': 'Kjaer, M. (2016, July 18). Malware in the browser: how you might get hacked by a Chrome extension. Retrieved November 22, 2017.'}, {'source_name': 'Catch All Chrome Extension', 'url': 'https://isc.sans.edu/forums/diary/CatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data/22976/https:/threatpost.com/malicious-chrome-extension-steals-data-posted-to-any-website/128680/)', 'description': 'Marinho, R. (n.d.). \"Catch-All\" Google Chrome Malicious Extension Steals All Posted Data. Retrieved November 16, 2017.'}, {'source_name': 'Banker Google Chrome Extension Steals Creds', 'url': 'https://isc.sans.edu/forums/diary/BankerGoogleChromeExtensiontargetingBrazil/22722/', 'description': 'Marinho, R. (n.d.). (Banker(GoogleChromeExtension)).targeting. Retrieved November 18, 2017.'}, {'source_name': 'Stantinko Botnet', 'url': 'https://www.welivesecurity.com/2017/07/20/stantinko-massive-adware-campaign-operating-covertly-since-2012/', 'description': 'Vachon, F., Faou, M. (2017, July 20). Stantinko: A massive adware campaign operating covertly since 2012. Retrieved November 16, 2017.'}, {'source_name': 'Wikipedia Browser Extension', 'url': 'https://en.wikipedia.org/wiki/Browser_extension', 'description': 'Wikipedia. (2017, October 8). Browser Extension. Retrieved January 11, 2018.'}], 'x_mitre_deprecated': False, 'revoked': False, 'description': \"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\\n\\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\\n\\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\\n\\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\\n\\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)\", 'modified': '2022-04-20T16:46:36.707Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'name': 'Browser Extensions', 'x_mitre_detection': 'Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\\n\\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\\n\\nOn macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.(Citation: xorrior chrome extensions macOS)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}], 'x_mitre_is_subtechnique': False, 'x_mitre_data_sources': ['Process: Process Creation', 'Network Traffic: Network Connection Creation', 'File: File Creation', 'Windows Registry: Windows Registry Key Creation', 'Command: Command Execution'], 'x_mitre_attack_spec_version': '2.1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5'}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1176",
                "display_name": "Browser Extensions",
                "atomic_tests": [
                    {
                        "name": "Chrome/Chromium (Developer Mode)",
                        "auto_generated_guid": "3ecd790d-2617-4abf-9a8c-4e8d47da9ee1",
                        "description": "Turn on Chrome/Chromium developer mode and Load Extension found in the src directory",
                        "supported_platforms": [
                            "linux",
                            "windows",
                            "macos"
                        ],
                        "executor": {
                            "steps": "1. Navigate to [chrome://extensions](chrome://extensions) and\ntick 'Developer Mode'.\n\n2. Click 'Load unpacked extension...' and navigate to\n[Browser_Extension](../t1176/src/)\n\n3. Click 'Select'\n",
                            "name": "manual"
                        }
                    },
                    {
                        "name": "Chrome/Chromium (Chrome Web Store)",
                        "auto_generated_guid": "4c83940d-8ca5-4bb2-8100-f46dc914bc3f",
                        "description": "Install the \"Minimum Viable Malicious Extension\" Chrome extension",
                        "supported_platforms": [
                            "linux",
                            "windows",
                            "macos"
                        ],
                        "executor": {
                            "steps": "1. Navigate to https://chrome.google.com/webstore/detail/minimum-viable-malicious/odlpfdolehmhciiebahbpnaopneicend\nin Chrome\n\n2. Click 'Add to Chrome'\n",
                            "name": "manual"
                        }
                    },
                    {
                        "name": "Firefox",
                        "auto_generated_guid": "cb790029-17e6-4c43-b96f-002ce5f10938",
                        "description": "Create a file called test.wma, with the duration of 30 seconds\n",
                        "supported_platforms": [
                            "linux",
                            "windows",
                            "macos"
                        ],
                        "executor": {
                            "steps": "1. Navigate to [about:debugging](about:debugging) and\nclick \"Load Temporary Add-on\"\n\n2. Navigate to [manifest.json](./src/manifest.json)\n\n3. Then click 'Open'\n",
                            "name": "manual"
                        }
                    },
                    {
                        "name": "Edge Chromium Addon - VPN",
                        "auto_generated_guid": "3d456e2b-a7db-4af8-b5b3-720e7c4d9da5",
                        "description": "Adversaries may use VPN extensions in an attempt to hide traffic sent from a compromised host. This will install one (of many) available VPNS in the Edge add-on store.\n",
                        "supported_platforms": [
                            "windows",
                            "macos"
                        ],
                        "executor": {
                            "steps": "1. Navigate to https://microsoftedge.microsoft.com/addons/detail/fjnehcbecaggobjholekjijaaekbnlgj\nin Edge Chromium\n\n2. Click 'Get'\n",
                            "name": "manual"
                        }
                    },
                    {
                        "name": "Google Chrome Load Unpacked Extension With Command Line",
                        "auto_generated_guid": "7a714703-9f6b-461c-b06d-e6aeac650f27",
                        "description": "This test loads an unpacked extension in Google Chrome with the `--load-extension` parameter. This technique was previously used by the Grandoreiro malware to load a malicious extension that would capture the browsing history, steal cookies and other user information. Other malwares also leverage this technique to hijack searches, steal passwords, inject ads, and more.\n\nReferences:\nhttps://attack.mitre.org/techniques/T1176/\nhttps://securityintelligence.com/posts/grandoreiro-malware-now-targeting-banks-in-spain/",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "working_dir": {
                                "description": "Working directory where the files will be downloaded and extracted",
                                "type": "string",
                                "default": "$env:TEMP"
                            }
                        },
                        "executor": {
                            "command": "\n# Chromium\n$chromium =  \"https://commondatastorage.googleapis.com/chromium-browser-snapshots/Win_x64/1153778/chrome-win.zip\"\n\n# uBlock Origin Lite to test side-loading\n$extension = \"https://github.com/uBlockOrigin/uBOL-home/releases/download/uBOLite_2024.11.25.1376/uBOLite_2024.11.25.1376.chromium.mv3.zip\"\n\nSet-Location \"#{working_dir}\"\n\nSet-Variable ProgressPreference SilentlyContinue\nInvoke-WebRequest -URI $chromium -OutFile \"#{working_dir}\\chrome.zip\"\nInvoke-WebRequest -URI $extension -OutFile \"#{working_dir}\\extension.zip\"\n\n\nExpand-Archive chrome.zip -DestinationPath \"#{working_dir}\" -Force\nExpand-Archive extension.zip -Force\n\nStart-Process .\\chrome-win\\chrome.exe --load-extension=\"#{working_dir}\\extension\\\" -PassThru",
                            "cleanup_command": "Set-Location \"#{working_dir}\"\nStop-Process -Name chrome -Force\nRemove-Item .\\chrome.zip, .\\chrome-win, .\\extension, .\\extension.zip -Recurse -Force\nSet-Variable ProgressPreference Continue",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 13:40:59"
}