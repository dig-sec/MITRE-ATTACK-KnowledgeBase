{
    "id": "T1090.003",
    "name": "Multi-hop Proxy",
    "description": "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](T1601.001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organizationâ€™s WAN. Protocols such as ICMP may be used as a transport.",
    "platforms": "Linux, macOS, Windows, Network",
    "kill_chain_phases": "Command and Control",
    "data_sources": "Network Traffic: Network Traffic Flow, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",
    "detection": "When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](S0183)) or known adversary infrastructure that uses this technique.\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.",
    "url": "https://attack.mitre.org/techniques/T1090/003",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1090.003",
                "atomic_attack_guid": "5ff9d047-6e9c-4357-b39b-5cf89d9b59c7",
                "atomic_attack_name": "Tor Proxy Usage - Debian/Ubuntu/FreeBSD",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Service Started Or Enabled",
                        "rule_link": "https://research.splunk.com/endpoint/e0428212-61b7-11ec-88a3-acde48001122/"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "25adc94b-5b29-44fe-a4a8-c89d17ff3566",
                    "62f7c9bf-9135-49b2-8aeb-1e54a6ecc13c",
                    "b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544",
                    "8384bd26-bde6-4da9-8e5d-4174a7a47ca2",
                    "a782ebe2-daba-42c7-bc82-e8e9d923162d",
                    "cdc842aa-761d-48e2-9b97-c344bed8b3a8"
                ],
                "lookup_results": [
                    {
                        "uuid": "25adc94b-5b29-44fe-a4a8-c89d17ff3566",
                        "lookup_data": {
                            "description": "UNC3524: Eye Spy on Your Email",
                            "link": "http://www.botvrij.eu/data/feed-osint/25adc94b-5b29-44fe-a4a8-c89d17ff3566.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1652459344",
                            "uuid": "25adc94b-5b29-44fe-a4a8-c89d17ff3566",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "62f7c9bf-9135-49b2-8aeb-1e54a6ecc13c",
                        "lookup_data": {
                            "description": "Detects the use of Tor or Tor-Browser to connect to onion routing networks",
                            "raw": "author: frack113\ndate: 2022/02/20\ndescription: Detects the use of Tor or Tor-Browser to connect to onion routing networks\ndetection:\n  condition: selection\n  selection:\n    Image|endswith:\n    - \\tor.exe\n    - \\Tor Browser\\Browser\\firefox.exe\nfalsepositives:\n- Unknown\nid: 62f7c9bf-9135-49b2-8aeb-1e54a6ecc13c\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1090.003\ntitle: Tor Client or Tor Browser Use\n",
                            "sigma:id": "62f7c9bf-9135-49b2-8aeb-1e54a6ecc13c",
                            "title": "Tor Client or Tor Browser Use",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544",
                        "lookup_data": {
                            "description": "Detects DNS queries to an \".onion\" address related to Tor routing networks",
                            "raw": "author: frack113\ndate: 2022/02/20\ndescription: Detects DNS queries to an \".onion\" address related to Tor routing networks\ndetection:\n  condition: selection\n  selection:\n    QueryName|contains: .onion\nfalsepositives:\n- Unknown\nid: b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544\nlevel: high\nlogsource:\n  category: dns_query\n  product: windows\nmodified: 2023/01/16\nreferences:\n- https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/\nrelated:\n- id: 8384bd26-bde6-4da9-8e5d-4174a7a47ca2\n  type: similar\nstatus: experimental\ntags:\n- attack.command_and_control\n- attack.t1090.003\ntitle: DNS Query Tor Onion Address - Sysmon\n",
                            "sigma:id": "b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544",
                            "title": "DNS Query Tor Onion Address - Sysmon",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "8384bd26-bde6-4da9-8e5d-4174a7a47ca2",
                        "lookup_data": {
                            "description": "Detects DNS resolution of an .onion address related to Tor routing networks",
                            "raw": "author: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/02/20\ndescription: Detects DNS resolution of an .onion address related to Tor routing networks\ndetection:\n  condition: selection\n  selection:\n    EventID: 3008\n    QueryName|contains: .onion\nfalsepositives:\n- Unlikely\nid: 8384bd26-bde6-4da9-8e5d-4174a7a47ca2\nlevel: high\nlogsource:\n  definition: 'Requirements: Microsoft-Windows-DNS Client Events/Operational Event\n    Log must be enabled/collected in order to receive the events.'\n  product: windows\n  service: dns-client\nreferences:\n- https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/\nrelated:\n- id: b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544\n  type: similar\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1090.003\ntitle: Query Tor Onion Address - DNS Client\n",
                            "sigma:id": "8384bd26-bde6-4da9-8e5d-4174a7a47ca2",
                            "title": "Query Tor Onion Address - DNS Client",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a782ebe2-daba-42c7-bc82-e8e9d923162d",
                        "lookup_data": {
                            "mitre-attack-id": "T1090.003",
                            "mitre-cti:description": "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organizationâ€™s WAN. Protocols such as ICMP may be used as a transport.",
                            "mitre-cti:name": "Multi-hop Proxy",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows', 'Network'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d', 'type': 'attack-pattern', 'created': '2020-03-14T23:23:41.770Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1090.003', 'url': 'https://attack.mitre.org/techniques/T1090/003'}, {'source_name': 'Onion Routing', 'url': 'https://en.wikipedia.org/wiki/Onion_routing', 'description': 'Wikipedia. (n.d.). Onion Routing. Retrieved October 20, 2020.'}], 'modified': '2020-10-21T17:54:28.280Z', 'name': 'Multi-hop Proxy', 'description': 'To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\\n\\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organizationâ€™s WAN. Protocols such as ICMP may be used as a transport.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'command-and-control'}], 'x_mitre_detection': 'When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.\\n\\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '2.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Network Traffic: Network Traffic Flow', 'Network Traffic: Network Traffic Content', 'Network Traffic: Network Connection Creation']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cdc842aa-761d-48e2-9b97-c344bed8b3a8",
                        "lookup_data": {
                            "description": "Cyberattack on fuel supplier causes supply chain disruption",
                            "link": "http://www.botvrij.eu/data/feed-osint/cdc842aa-761d-48e2-9b97-c344bed8b3a8.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1644231782",
                            "uuid": "cdc842aa-761d-48e2-9b97-c344bed8b3a8",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1090.003",
                "display_name": "Proxy: Multi-hop Proxy",
                "atomic_tests": [
                    {
                        "name": "Psiphon",
                        "auto_generated_guid": "14d55ca0-920e-4b44-8425-37eedd72b173",
                        "description": "Psiphon 3 is a circumvention tool from Psiphon Inc. that utilizes VPN, SSH and HTTP Proxy technology to provide you\nwith uncensored access to Internet.\nThis process will launch Psiphon 3 and establish a connection. Shortly after it will be shut down via process kill commands.\nMore information can be found about Psiphon using the following urls\nhttp://s3.amazonaws.com/0ubz-2q11-gi9y/en.html\nhttps://psiphon.ca/faq.html\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "The proxy settings backup file must exist on disk at $env:Temp\\proxy-backup.txt\n",
                                "prereq_command": "if (Test-Path $env:Temp\\proxy-backup.txt) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "if(-not (test-path $env:Temp\\proxy-backup.txt)){\n$Proxy = (Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings' -Name \"ProxyServer\" -ErrorAction Ignore).ProxyServer\nSet-Content $env:Temp\\proxy-backup.txt $Proxy}\n"
                            },
                            {
                                "description": "The Psiphon executable must exist in the Downloads folder\n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\psiphon3.exe\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction ignore -Force | Out-Null\nInvoke-WebRequest \"https://s3.amazonaws.com/0ubz-2q11-gi9y/psiphon3.exe\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\psiphon3.exe\" \n"
                            },
                            {
                                "description": "Batch file containing commands to run must be in src directory \n",
                                "prereq_command": "if (Test-Path \"PathToAtomicsFolder\\T1090.003\\src\\Psiphon.bat\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\T1090.003\\src\\\" -ErrorAction ignore -Force | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1090.003/src/Psiphon.bat\" -OutFile \"PathToAtomicsFolder\\T1090.003\\src\\Psiphon.bat\"\n"
                            }
                        ],
                        "executor": {
                            "name": "powershell",
                            "command": "& \"PathToAtomicsFolder\\T1090.003\\src\\Psiphon.bat\"\n",
                            "cleanup_command": "$Proxy = Get-Content $env:Temp\\proxy-backup.txt -ErrorAction Ignore\nif($null -ne $Proxy) \n{Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings' -Name \"ProxyServer\" -Value $Proxy}\n"
                        }
                    },
                    {
                        "name": "Tor Proxy Usage - Windows",
                        "auto_generated_guid": "7b9d85e5-c4ce-4434-8060-d3de83595e69",
                        "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy will be launched, run for 60 seconds, and then exit. \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "TorExe": {
                                "description": "Location of tor.exe file.",
                                "type": "string",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\tor\\Tor\\tor.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "tor.exe must be installed on the machine \n",
                                "prereq_command": "if (Test-Path \"#{TorExe}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://archive.torproject.org/tor-package-archive/torbrowser/11.0.6/tor-win32-0.4.6.9.zip\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\tor.zip\"\nexpand-archive -LiteralPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\tor.zip\" -DestinationPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\tor\"\n"
                            }
                        ],
                        "executor": {
                            "command": "invoke-expression 'cmd /c start powershell -Command {cmd /c \"#{TorExe}\"}'\nsleep -s 60\nstop-process -name \"tor\" | out-null\n",
                            "name": "powershell",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Tor Proxy Usage - Debian/Ubuntu/FreeBSD",
                        "auto_generated_guid": "5ff9d047-6e9c-4357-b39b-5cf89d9b59c7",
                        "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy service will be launched. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Tor must be installed on the machine \n",
                                "prereq_command": "if [ -x \"$(command -v tor --version)\" ]; then exit 0; else exit 1; fi\n",
                                "get_prereq_command": "(which apt && sudo apt-get -y install tor) || (which pkg && pkg install -y tor)\n"
                            }
                        ],
                        "executor": {
                            "command": "[ \"$(uname)\" = 'FreeBSD' ] && sysrc tor_enable=\"YES\" && service tor start || sudo systemctl start tor\n",
                            "cleanup_command": "[ \"$(uname)\" = 'FreeBSD' ] && service tor stop && sysrc -x tor_enable || sudo systemctl stop tor\n",
                            "name": "sh",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Tor Proxy Usage - MacOS",
                        "auto_generated_guid": "12631354-fdbc-4164-92be-402527e748da",
                        "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy service will be launched. \n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Tor must be installed on the machine \n",
                                "prereq_command": "if [ -x \"$(command -v tor --version)\" ]; then exit 0; else exit 1; fi\n",
                                "get_prereq_command": "if [ ! -x \"$(command -v brew --version)\" ]; then /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh keystroke return)\"; fi\nbrew install tor\n"
                            }
                        ],
                        "executor": {
                            "command": "osascript -e 'tell application \"Terminal\" to do script \"tor\"'\n",
                            "cleanup_command": "killall tor > /dev/null 2>&1\n",
                            "name": "sh"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 12:45:01"
}