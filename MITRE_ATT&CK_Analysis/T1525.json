{
    "id": "T1525",
    "name": "Implant Internal Image",
    "description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](T1608.001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an attacker has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](T1505.003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
    "platforms": "IaaS, Containers",
    "kill_chain_phases": "Persistence",
    "data_sources": "Image: Image Creation, Image: Image Modification",
    "detection": "Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.\nIn containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration.",
    "url": "https://attack.mitre.org/techniques/T1525",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f",
                    "b94bf91e-c2bf-4047-9c43-c6810f43baad"
                ],
                "lookup_results": [
                    {
                        "uuid": "4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f",
                        "lookup_data": {
                            "mitre-attack-id": "T1525",
                            "mitre-cti:description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
                            "mitre-cti:name": "Implant Internal Image",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['IaaS', 'Containers'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Yossi Weizman, Azure Defender Research Team', 'Vishwas Manral, McAfee', 'Praetorian'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f', 'type': 'attack-pattern', 'created': '2019-09-04T12:04:03.552Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1525', 'url': 'https://attack.mitre.org/techniques/T1525'}, {'source_name': 'Rhino Labs Cloud Image Backdoor Technique Sept 2019', 'url': 'https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/', 'description': 'Rhino Labs. (2019, August). Exploiting AWS ECR and ECS with the Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019.'}, {'source_name': 'Rhino Labs Cloud Backdoor September 2019', 'url': 'https://github.com/RhinoSecurityLabs/ccat', 'description': 'Rhino Labs. (2019, September). Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019.'}], 'modified': '2022-03-08T21:27:49.094Z', 'name': 'Implant Internal Image', 'description': 'Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\\n\\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'persistence'}], 'x_mitre_detection': 'Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.\\n\\nIn containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration. ', 'x_mitre_version': '2.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Image: Image Creation', 'Image: Image Metadata', 'Image: Image Modification'], 'x_mitre_permissions_required': ['User'], 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b94bf91e-c2bf-4047-9c43-c6810f43baad",
                        "lookup_data": {
                            "description": "Detects when an Elastic Container Service (ECS) Task Definition has been modified and run.\nThis can indicate an adversary adding a backdoor to establish persistence or escalate privileges.\nThis rule is based on examining events created upon execution of Rhino Security Lab's Pacu in a lab environment.\n",
                            "raw": "author: Darin Smith\ndate: 2022/06/07\ndescription: 'Detects when an Elastic Container Service (ECS) Task Definition has\n  been modified and run.\n\n  This can indicate an adversary adding a backdoor to establish persistence or escalate\n  privileges.\n\n  This rule is based on examining events created upon execution of Rhino Security\n  Lab''s Pacu in a lab environment.\n\n  '\ndetection:\n  condition: selection\n  selection:\n    eventName:\n    - DescribeTaskDefinition\n    - RegisterTaskDefinition\n    - RunTask\n    eventSource: ecs.amazonaws.com\n    requestParameters.containerDefinitions.command|contains|all:\n    - '169.254'\n    - $AWS_CONTAINER_CREDENTIALS\nfalsepositives:\n- Task Definition being modified to request credentials from the Task Metadata Service\n  for valid reasons\nid: b94bf91e-c2bf-4047-9c43-c6810f43baad\nlevel: medium\nlogsource:\n  product: aws\n  service: cloudtrail\nreferences:\n- https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/ecs__backdoor_task_def/main.py\n- https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html\nstatus: experimental\ntags:\n- attack.persistence\n- attack.t1525\ntitle: AWS ECS Backdoor Task Definition\n",
                            "sigma:id": "b94bf91e-c2bf-4047-9c43-c6810f43baad",
                            "title": "AWS ECS Backdoor Task Definition",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": []
    },
    "timestamp": "2025-02-28 15:00:48"
}