{
    "id": "T1562.004",
    "name": "Disable or Modify System Firewall",
    "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "Command: Command Execution, Windows Registry: Windows Registry Key Modification, Firewall: Firewall Disable, Firewall: Firewall Rule Modification",
    "detection": "Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
    "url": "https://attack.mitre.org/techniques/T1562/004",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "1a5fefe6-734f-452e-a07d-fc1c35bce4b2",
                    "025c9fe7-db72-49f9-af0d-31341dd7dd57",
                    "488b44e7-3781-4a71-888d-c95abfacf44d",
                    "974515da-6cc5-4c95-ae65-f97f9150ec7f",
                    "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c",
                    "53059bc0-1472-438b-956a-7508a94a91f0",
                    "a35f5a72-f347-4e36-8895-9869b0d5fc6d",
                    "84c9e83c-599a-458a-a0cb-0ecce44e807a",
                    "347906f3-e207-4d18-ae5b-a9403d6bcdef",
                    "e3a8a052-111f-4606-9aee-f28ebeb76776",
                    "3be619f4-d9ec-4ea8-a173-18fdd01996ab",
                    "49f5dfc1-f92e-4d34-96fa-feba3f6acf36",
                    "5372c5fe-f424-4def-bcd5-d3a8e770f07b",
                    "57c4bf16-227f-4394-8ec7-1b745ee061c3",
                    "e78c408a-e2ea-43cd-b5ea-51975cf358c0",
                    "512cf937-ea9b-4332-939c-4c2c94baadcd",
                    "70b4156e-50fc-4523-aa50-c9dddf1993fc",
                    "01aeb693-138d-49d2-9403-c4f52d7d3d62"
                ],
                "lookup_results": [
                    {
                        "uuid": "1a5fefe6-734f-452e-a07d-fc1c35bce4b2",
                        "lookup_data": {
                            "description": "Detects the removal of a port or application rule in the Windows Firewall configuration using netsh",
                            "raw": "author: frack113\ndate: 2022/08/14\ndescription: Detects the removal of a port or application rule in the Windows Firewall\n  configuration using netsh\ndetection:\n  condition: selection and not filter_dropbox\n  filter_dropbox:\n    CommandLine|contains: name=Dropbox\n    ParentImage|endswith: \\Dropbox.exe\n  selection:\n    CommandLine|contains|all:\n    - firewall\n    - delete\n    Image|endswith: \\netsh.exe\nfalsepositives:\n- Legitimate administration\nid: 1a5fefe6-734f-452e-a07d-fc1c35bce4b2\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nreferences:\n- https://app.any.run/tasks/8bbd5b4c-b82d-4e6d-a3ea-d454594a37cc/\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Netsh Firewall Rule Deletion\n",
                            "sigma:id": "1a5fefe6-734f-452e-a07d-fc1c35bce4b2",
                            "title": "Netsh Firewall Rule Deletion",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "025c9fe7-db72-49f9-af0d-31341dd7dd57",
                        "lookup_data": {
                            "description": "Identifies when Rule Collections (Application, NAT, and Network) is being modified or deleted.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/08\ndescription: Identifies when Rule Collections (Application, NAT, and Network) is being\n  modified or deleted.\ndetection:\n  condition: selection\n  selection:\n    operationName:\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/APPLICATIONRULECOLLECTIONS/WRITE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/APPLICATIONRULECOLLECTIONS/DELETE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/NATRULECOLLECTIONS/WRITE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/NATRULECOLLECTIONS/DELETE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/NETWORKRULECOLLECTIONS/WRITE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/NETWORKRULECOLLECTIONS/DELETE\nfalsepositives:\n- Rule Collections (Application, NAT, and Network) being modified or deleted may be\n  performed by a system administrator. Verify whether the user identity, user agent,\n  and/or hostname should be making changes in your environment.\n- Rule Collections (Application, NAT, and Network) modified or deleted from unfamiliar\n  users should be investigated. If known behavior is causing false positives, it can\n  be exempted from the rule.\nid: 025c9fe7-db72-49f9-af0d-31341dd7dd57\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/08/23\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations\nstatus: experimental\ntags:\n- attack.impact\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Azure Firewall Rule Collection Modified or Deleted\n",
                            "sigma:id": "025c9fe7-db72-49f9-af0d-31341dd7dd57",
                            "title": "Azure Firewall Rule Collection Modified or Deleted",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "488b44e7-3781-4a71-888d-c95abfacf44d",
                        "lookup_data": {
                            "description": "Detects when a user disables the Windows Firewall via a Profile to help evade defense.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/10/12\ndescription: Detects when a user disables the Windows Firewall via a Profile to help\n  evade defense.\ndetection:\n  condition: all of selection*\n  selection_args:\n    ScriptBlockText|contains|all:\n    - 'Set-NetFirewallProfile '\n    - ' -Enabled '\n    - ' False'\n  selection_opt:\n    ScriptBlockText|contains:\n    - ' -All '\n    - Public\n    - Domain\n    - Private\nfalsepositives:\n- Unknown\nid: 488b44e7-3781-4a71-888d-c95abfacf44d\nlevel: medium\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nmodified: 2022/12/30\nreferences:\n- https://docs.microsoft.com/en-us/powershell/module/netsecurity/set-netfirewallprofile?view=windowsserver2019-ps\n- https://www.tutorialspoint.com/how-to-get-windows-firewall-profile-settings-using-powershell\n- http://powershellhelp.space/commands/set-netfirewallrule-psv5.php\n- http://woshub.com/manage-windows-firewall-powershell/\n- https://www.elastic.co/guide/en/security/current/windows-firewall-disabled-via-powershell.html\nrelated:\n- id: 12f6b752-042d-483e-bf9c-915a6d06ad75\n  type: similar\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Windows Firewall Profile Disabled\n",
                            "sigma:id": "488b44e7-3781-4a71-888d-c95abfacf44d",
                            "title": "Windows Firewall Profile Disabled",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "974515da-6cc5-4c95-ae65-f97f9150ec7f",
                        "lookup_data": {
                            "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage",
                            "raw": "author: frack113\ndate: 2022/01/09\ndescription: Adversaries may disable or modify system firewalls in order to bypass\n  controls limiting network usage\ndetection:\n  condition: selection\n  selection:\n    Details: DWORD (0x00000000)\n    EventType: SetValue\n    TargetObject|endswith: \\EnableFirewall\n    TargetObject|startswith: HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\\nfalsepositives:\n- Unknown\nid: 974515da-6cc5-4c95-ae65-f97f9150ec7f\nlevel: medium\nlogsource:\n  category: registry_set\n  product: windows\nmodified: 2022/03/26\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-2---disable-microsoft-defender-firewall-via-registry\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Disable Microsoft Defender Firewall via Registry\n",
                            "sigma:id": "974515da-6cc5-4c95-ae65-f97f9150ec7f",
                            "title": "Disable Microsoft Defender Firewall via Registry",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c",
                        "lookup_data": {
                            "description": "Allow Incoming Connections by Port or Application on Windows Firewall",
                            "raw": "author: Markus Neis, Sander Wiebing\ndate: 2019/01/29\ndescription: Allow Incoming Connections by Port or Application on Windows Firewall\ndetection:\n  condition: all of selection* and not 1 of filter_*\n  filter_dropbox:\n    CommandLine|contains:\n    - \\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program\n      Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any\n    - \\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program\n      Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any\n  filter_thor:\n    CommandLine|contains: advfirewall firewall show rule name=all\n    ParentImage|endswith: \\thor64.exe\n    ParentImage|startswith: C:\\Windows\\Temp\\asgard2-agent\\\n  selection1:\n    Image|endswith: \\netsh.exe\n  selection2:\n    CommandLine|contains|all:\n    - firewall\n    - add\nfalsepositives:\n- Legitimate administration\nid: cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/25\nreferences:\n- https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)\n- https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Netsh Port or Application Allowed\n",
                            "sigma:id": "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c",
                            "title": "Netsh Port or Application Allowed",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "53059bc0-1472-438b-956a-7508a94a91f0",
                        "lookup_data": {
                            "description": "Detects disabling of system firewalls which could be used by adversaries to bypass controls that limit usage of the network.",
                            "raw": "author: Pawel Mazur\ndate: 2022/01/22\ndescription: Detects disabling of system firewalls which could be used by adversaries\n  to bypass controls that limit usage of the network.\ndetection:\n  condition: selection\n  selection:\n    type: SERVICE_STOP\n    unit:\n    - firewalld\n    - iptables\n    - ufw\nfalsepositives:\n- Admin activity\nid: 53059bc0-1472-438b-956a-7508a94a91f0\nlevel: high\nlogsource:\n  product: linux\n  service: auditd\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md\n- https://firewalld.org/documentation/man-pages/firewall-cmd.html\nstatus: test\ntags:\n- attack.t1562.004\n- attack.defense_evasion\ntitle: Disable System Firewall\n",
                            "sigma:id": "53059bc0-1472-438b-956a-7508a94a91f0",
                            "title": "Disable System Firewall",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a35f5a72-f347-4e36-8895-9869b0d5fc6d",
                        "lookup_data": {
                            "description": "Detects Netsh commands that allows a suspcious application location on Windows Firewall",
                            "raw": "author: Sander Wiebing, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community\ndate: 2020/05/25\ndescription: Detects Netsh commands that allows a suspcious application location on\n  Windows Firewall\ndetection:\n  condition: (1 of selection*) and susp_image\n  selection1:\n    CommandLine|contains|all:\n    - firewall\n    - add\n    - allowedprogram\n    Image|endswith: \\netsh.exe\n  selection2:\n    CommandLine|contains|all:\n    - advfirewall\n    - firewall\n    - add\n    - rule\n    - action=allow\n    - program=\n    Image|endswith: \\netsh.exe\n  susp_image:\n  - CommandLine|contains:\n    - '%TEMP%'\n    - '%TMP%'\n    - :\\RECYCLER\\\n    - C:\\$Recycle.bin\\\n    - :\\SystemVolumeInformation\\\n    - C:\\Windows\\Temp\\\n    - C:\\Temp\\\n    - C:\\Users\\Public\\\n    - C:\\Users\\Default\\\n    - C:\\Users\\Desktop\\\n    - \\Downloads\\\n    - \\Temporary Internet Files\\Content.Outlook\\\n    - \\Local Settings\\Temporary Internet Files\\\n  - CommandLine|startswith:\n    - C:\\Windows\\Tasks\\\n    - C:\\Windows\\debug\\\n    - C:\\Windows\\fonts\\\n    - C:\\Windows\\help\\\n    - C:\\Windows\\drivers\\\n    - C:\\Windows\\addins\\\n    - C:\\Windows\\cursors\\\n    - C:\\Windows\\system32\\tasks\\\n    - '%Public%\\'\nfalsepositives:\n- Legitimate administration\nid: a35f5a72-f347-4e36-8895-9869b0d5fc6d\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/09/13\nreferences:\n- https://www.virusradar.com/en/Win32_Kasidet.AD/description\n- https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Netsh Program Allowed with Suspcious Location\n",
                            "sigma:id": "a35f5a72-f347-4e36-8895-9869b0d5fc6d",
                            "title": "Netsh Program Allowed with Suspcious Location",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "84c9e83c-599a-458a-a0cb-0ecce44e807a",
                        "lookup_data": {
                            "description": "Detects attempts to force stop the ufw using ufw-init",
                            "raw": "author: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/01/18\ndescription: Detects attempts to force stop the ufw using ufw-init\ndetection:\n  condition: 1 of selection_*\n  selection_init:\n    CommandLine|contains|all:\n    - -ufw-init\n    - force-stop\n  selection_ufw:\n    CommandLine|contains|all:\n    - ufw\n    - disable\nfalsepositives:\n- Network administrators\nid: 84c9e83c-599a-458a-a0cb-0ecce44e807a\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://blogs.blackberry.com/\n- https://twitter.com/Joseliyo_Jstnk/status/1620131033474822144\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Ufw Force Stop Using Ufw-Init\n",
                            "sigma:id": "84c9e83c-599a-458a-a0cb-0ecce44e807a",
                            "title": "Ufw Force Stop Using Ufw-Init",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "347906f3-e207-4d18-ae5b-a9403d6bcdef",
                        "lookup_data": {
                            "description": "Adversaries may  modify system firewalls in order to bypass controls limiting network usage",
                            "raw": "author: frack113\ndate: 2022/01/09\ndescription: Adversaries may  modify system firewalls in order to bypass controls\n  limiting network usage\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains|all:\n    - advfirewall\n    - firewall\n    - set\n    - rule\n    - group=\n    - new\n    - enable=Yes\n    Image|endswith: \\netsh.exe\nfalsepositives:\n- Legitimate administration\nid: 347906f3-e207-4d18-ae5b-a9403d6bcdef\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2023/01/31\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-3---allow-smb-and-rdp-on-microsoft-defender-firewall\n- https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Netsh Allow Group Policy on Microsoft Defender Firewall\n",
                            "sigma:id": "347906f3-e207-4d18-ae5b-a9403d6bcdef",
                            "title": "Netsh Allow Group Policy on Microsoft Defender Firewall",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e3a8a052-111f-4606-9aee-f28ebeb76776",
                        "lookup_data": {
                            "description": "Detects disabling security tools",
                            "raw": "author: \"\\xD6mer G\\xFCnal, Alejandro Ortuno, oscd.community\"\ndate: 2020/06/17\ndescription: Detects disabling security tools\ndetection:\n  condition: 1 of selection*\n  selection_carbonblack_1:\n    CommandLine|contains|all:\n    - cbdaemon\n    - stop\n    Image|endswith: /service\n  selection_carbonblack_2:\n    CommandLine|contains|all:\n    - cbdaemon\n    - 'off'\n    Image|endswith: /chkconfig\n  selection_carbonblack_3:\n    CommandLine|contains|all:\n    - cbdaemon\n    - stop\n    Image|endswith: /systemctl\n  selection_carbonblack_4:\n    CommandLine|contains|all:\n    - cbdaemon\n    - disable\n    Image|endswith: /systemctl\n  selection_crowdstrike_1:\n    CommandLine|contains|all:\n    - stop\n    - falcon-sensor\n    Image|endswith: /systemctl\n  selection_crowdstrike_2:\n    CommandLine|contains|all:\n    - disable\n    - falcon-sensor\n    Image|endswith: /systemctl\n  selection_firewall_1:\n    CommandLine|contains|all:\n    - firewalld\n    - stop\n    Image|endswith: /systemctl\n  selection_firewall_2:\n    CommandLine|contains|all:\n    - firewalld\n    - disable\n    Image|endswith: /systemctl\n  selection_iptables_1:\n    CommandLine|contains|all:\n    - iptables\n    - stop\n    Image|endswith: /service\n  selection_iptables_2:\n    CommandLine|contains|all:\n    - ip6tables\n    - stop\n    Image|endswith: /service\n  selection_iptables_3:\n    CommandLine|contains|all:\n    - iptables\n    - stop\n    Image|endswith: /chkconfig\n  selection_iptables_4:\n    CommandLine|contains|all:\n    - ip6tables\n    - stop\n    Image|endswith: /chkconfig\n  selection_selinux:\n    CommandLine|contains: '0'\n    Image|endswith: /setenforce\nfalsepositives:\n- Legitimate administration activities\nid: e3a8a052-111f-4606-9aee-f28ebeb76776\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nmodified: 2022/10/09\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Disabling Security Tools\n",
                            "sigma:id": "e3a8a052-111f-4606-9aee-f28ebeb76776",
                            "title": "Disabling Security Tools",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "3be619f4-d9ec-4ea8-a173-18fdd01996ab",
                        "lookup_data": {
                            "description": "Detect use of iptables to flush all firewall rules, tables and chains and allow all network traffic",
                            "raw": "author: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/01/18\ndescription: Detect use of iptables to flush all firewall rules, tables and chains\n  and allow all network traffic\ndetection:\n  condition: all of selection_*\n  selection_img:\n    Image|endswith:\n    - /iptables\n    - /xtables-legacy-multi\n    - /iptables-legacy-multi\n    - /ip6tables\n    - /ip6tables-legacy-multi\n  selection_params:\n    CommandLine|contains:\n    - -F\n    - -Z\n    - -X\n  selection_ufw:\n    CommandLine|contains:\n    - ufw-logging-deny\n    - ufw-logging-allow\n    - ufw6-logging-deny\n    - ufw6-logging-allow\nfalsepositives:\n- Network administrators\nid: 3be619f4-d9ec-4ea8-a173-18fdd01996ab\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://blogs.blackberry.com/\n- https://www.cyberciti.biz/tips/linux-iptables-how-to-flush-all-rules.html\n- https://twitter.com/Joseliyo_Jstnk/status/1620131033474822144\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Flush Iptables Ufw Chain\n",
                            "sigma:id": "3be619f4-d9ec-4ea8-a173-18fdd01996ab",
                            "title": "Flush Iptables Ufw Chain",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "49f5dfc1-f92e-4d34-96fa-feba3f6acf36",
                        "lookup_data": {
                            "description": "Detects disabling security tools",
                            "raw": "author: \"\\xD6mer G\\xFCnal, Alejandro Ortuno, oscd.community\"\ndate: 2020/06/17\ndescription: Detects disabling security tools\ndetection:\n  condition: keywords\n  keywords:\n  - stopping iptables\n  - stopping ip6tables\n  - stopping firewalld\n  - stopping cbdaemon\n  - stopping falcon-sensor\nfalsepositives:\n- Legitimate administration activities\nid: 49f5dfc1-f92e-4d34-96fa-feba3f6acf36\nlevel: medium\nlogsource:\n  product: linux\n  service: syslog\nmodified: 2022/11/26\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md\nrelated:\n- id: e3a8a052-111f-4606-9aee-f28ebeb76776\n  type: derived\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Disabling Security Tools - Builtin\n",
                            "sigma:id": "49f5dfc1-f92e-4d34-96fa-feba3f6acf36",
                            "title": "Disabling Security Tools - Builtin",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "5372c5fe-f424-4def-bcd5-d3a8e770f07b",
                        "lookup_data": {
                            "mitre-attack-id": "T1562.004",
                            "mitre-cti:description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. ",
                            "mitre-cti:name": "Disable or Modify System Firewall",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b', 'type': 'attack-pattern', 'created': '2020-02-21T21:00:48.814Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1562.004', 'url': 'https://attack.mitre.org/techniques/T1562/004'}], 'modified': '2020-03-29T22:18:11.166Z', 'name': 'Disable or Modify System Firewall', 'description': 'Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\\n\\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. ', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Firewall: Firewall Disable', 'Firewall: Firewall Rule Modification', 'Command: Command Execution', 'Windows Registry: Windows Registry Key Modification'], 'x_mitre_defense_bypassed': ['Firewall']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "57c4bf16-227f-4394-8ec7-1b745ee061c3",
                        "lookup_data": {
                            "description": "Detects netsh commands that turns off the Windows firewall",
                            "raw": "author: Fatih Sirin\ndate: 2019/11/01\ndescription: Detects netsh commands that turns off the Windows firewall\ndetection:\n  condition: 1 of selection_*\n  selection_1:\n    CommandLine|contains|all:\n    - netsh\n    - firewall\n    - set\n    - opmode\n    - mode=disable\n  selection_2:\n    CommandLine|contains|all:\n    - netsh\n    - advfirewall\n    - set\n    - state\n    - 'off'\nfalsepositives:\n- Legitimate administration\nid: 57c4bf16-227f-4394-8ec7-1b745ee061c3\nlevel: medium\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2022/01/09\nreferences:\n- https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/\n- https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-1---disable-microsoft-defender-firewall\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\n- attack.s0108\ntitle: Firewall Disabled via Netsh\n",
                            "sigma:id": "57c4bf16-227f-4394-8ec7-1b745ee061c3",
                            "title": "Firewall Disabled via Netsh",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "e78c408a-e2ea-43cd-b5ea-51975cf358c0",
                        "lookup_data": {
                            "description": "Detect set EnableFirewall to 0 to disable the windows firewall",
                            "raw": "author: frack113\ndate: 2022/08/19\ndescription: Detect set EnableFirewall to 0 to disable the windows firewall\ndetection:\n  condition: selection\n  selection:\n    Details: DWORD (0x00000000)\n    EventType: SetValue\n    TargetObject|endswith:\n    - \\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\\EnableFirewall\n    - \\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\\EnableFirewall\nfalsepositives:\n- Unknown\nid: e78c408a-e2ea-43cd-b5ea-51975cf358c0\nlevel: medium\nlogsource:\n  category: registry_set\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1562.004/T1562.004.md\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Disable Windows Firewall by Registry\n",
                            "sigma:id": "e78c408a-e2ea-43cd-b5ea-51975cf358c0",
                            "title": "Disable Windows Firewall by Registry",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "512cf937-ea9b-4332-939c-4c2c94baadcd",
                        "lookup_data": {
                            "description": "Identifies when a firewall is created, modified, or deleted.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/08\ndescription: Identifies when a firewall is created, modified, or deleted.\ndetection:\n  condition: selection\n  selection:\n    operationName:\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/WRITE\n    - MICROSOFT.NETWORK/AZUREFIREWALLS/DELETE\nfalsepositives:\n- Firewall being modified or deleted may be performed by a system administrator. Verify\n  whether the user identity, user agent, and/or hostname should be making changes\n  in your environment.\n- Firewall modified or deleted from unfamiliar users should be investigated. If known\n  behavior is causing false positives, it can be exempted from the rule.\nid: 512cf937-ea9b-4332-939c-4c2c94baadcd\nlevel: medium\nlogsource:\n  product: azure\n  service: activitylogs\nmodified: 2022/08/23\nreferences:\n- https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations\nstatus: experimental\ntags:\n- attack.impact\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Azure Firewall Modified or Deleted\n",
                            "sigma:id": "512cf937-ea9b-4332-939c-4c2c94baadcd",
                            "title": "Azure Firewall Modified or Deleted",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "70b4156e-50fc-4523-aa50-c9dddf1993fc",
                        "lookup_data": {
                            "description": "All TCP traffic on particular port from attacker is routed to different port. ex. '/sbin/iptables -t nat -D PREROUTING -p tcp -s 192.168.1.1 --dport 22 -j REDIRECT --to-ports 42392'\nThe traffic looks like encrypted SSH communications going to TCP port 22, but in reality is being directed to the shell port once it hits the iptables rule for the attacker host only.\n",
                            "raw": "author: Rafal Piasecki\ndate: 2022/08/10\ndescription: 'All TCP traffic on particular port from attacker is routed to different\n  port. ex. ''/sbin/iptables -t nat -D PREROUTING -p tcp -s 192.168.1.1 --dport 22\n  -j REDIRECT --to-ports 42392''\n\n  The traffic looks like encrypted SSH communications going to TCP port 22, but in\n  reality is being directed to the shell port once it hits the iptables rule for the\n  attacker host only.\n\n  '\ndetection:\n  cmd:\n    a0|endswith: iptables\n    a1: -t\n    a2: nat\n    type: EXECVE\n  condition: cmd and keywords\n  keywords:\n  - --to-ports 42\n  - --to-ports 43\nfalsepositives:\n- Legitimate ports redirect\nid: 70b4156e-50fc-4523-aa50-c9dddf1993fc\nlevel: medium\nlogsource:\n  product: linux\n  service: auditd\nreferences:\n- https://www.sandflysecurity.com/blog/bpfdoor-an-evasive-linux-backdoor-technical-analysis/\n- https://www.elastic.co/security-labs/a-peek-behind-the-bpfdoor\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Bpfdoor TCP Ports Redirect\n",
                            "sigma:id": "70b4156e-50fc-4523-aa50-c9dddf1993fc",
                            "title": "Bpfdoor TCP Ports Redirect",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "01aeb693-138d-49d2-9403-c4f52d7d3d62",
                        "lookup_data": {
                            "description": "Detects netsh commands that opens the port 3389 used for RDP, used in Sarwent Malware",
                            "raw": "author: Sander Wiebing\ndate: 2020/05/23\ndescription: Detects netsh commands that opens the port 3389 used for RDP, used in\n  Sarwent Malware\ndetection:\n  condition: 1 of selection*\n  selection1:\n    CommandLine|contains|all:\n    - netsh\n    - firewall add portopening\n    - tcp 3389\n  selection2:\n    CommandLine|contains|all:\n    - netsh\n    - advfirewall firewall add rule\n    - action=allow\n    - protocol=TCP\n    - localport=3389\nfalsepositives:\n- Legitimate administration\nid: 01aeb693-138d-49d2-9403-c4f52d7d3d62\nlevel: high\nlogsource:\n  category: process_creation\n  product: windows\nmodified: 2021/11/27\nreferences:\n- https://labs.sentinelone.com/sarwent-malware-updates-command-detonation/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1562.004\ntitle: Netsh RDP Port Opening\n",
                            "sigma:id": "01aeb693-138d-49d2-9403-c4f52d7d3d62",
                            "title": "Netsh RDP Port Opening",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1562.004",
                "display_name": "Impair Defenses: Disable or Modify System Firewall",
                "atomic_tests": [
                    {
                        "name": "Disable Microsoft Defender Firewall",
                        "auto_generated_guid": "88d05800-a5e4-407e-9b53-ece4174f197f",
                        "description": "Disables the Microsoft Defender Firewall for the current profile.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "netsh advfirewall set currentprofile state off\n",
                            "cleanup_command": "netsh advfirewall set currentprofile state on >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Disable Microsoft Defender Firewall via Registry",
                        "auto_generated_guid": "afedc8c4-038c-4d82-b3e5-623a95f8a612",
                        "description": "Disables the Microsoft Defender Firewall for the public profile via registry\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\" /v \"EnableFirewall\" /t REG_DWORD /d 0 /f\n",
                            "cleanup_command": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\" /v \"EnableFirewall\" /t REG_DWORD /d 1 /f\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Allow SMB and RDP on Microsoft Defender Firewall",
                        "auto_generated_guid": "d9841bf8-f161-4c73-81e9-fd773a5ff8c1",
                        "description": "Allow all SMB and RDP rules on the Microsoft Defender Firewall for all profiles.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will reset the firewall and risk disabling those services...\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes\nnetsh advfirewall firewall set rule group=\"file and printer sharing\" new enable=Yes\n",
                            "cleanup_command": "netsh advfirewall reset >nul 2>&1\n",
                            "name": "command_prompt"
                        }
                    },
                    {
                        "name": "Opening ports for proxy - HARDRAIN",
                        "auto_generated_guid": "15e57006-79dd-46df-9bf9-31bc24fb5a80",
                        "description": "This test creates a listening interface on a victim device. This tactic was used by HARDRAIN for proxying.\n\nreference: https://www.us-cert.gov/sites/default/files/publications/MAR-10135536-F.pdf\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "netsh advfirewall firewall add rule name=\"atomic testing\" action=allow dir=in protocol=TCP localport=450 \n",
                            "cleanup_command": "netsh advfirewall firewall delete rule name=\"atomic testing\" protocol=TCP localport=450 >nul 2>&1",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Open a local port through Windows Firewall to any profile",
                        "auto_generated_guid": "9636dd6e-7599-40d2-8eee-ac16434f35ed",
                        "description": "This test will attempt to open a local port defined by input arguments to any profile",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "local_port": {
                                "description": "This is the local port you wish to test opening",
                                "type": "integer",
                                "default": 3389
                            }
                        },
                        "executor": {
                            "command": "netsh advfirewall firewall add rule name=\"Open Port to Any\" dir=in protocol=tcp localport=#{local_port} action=allow profile=any",
                            "cleanup_command": "netsh advfirewall firewall delete rule name=\"Open Port to Any\" | Out-Null",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Allow Executable Through Firewall Located in Non-Standard Location",
                        "auto_generated_guid": "6f5822d2-d38d-4f48-9bfc-916607ff6b8c",
                        "description": "This test will attempt to allow an executable through the system firewall located in the Users directory",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "exe_file_path": {
                                "description": "path to exe file",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\T1562.004\\bin\\AtomicTest.exe"
                            }
                        },
                        "executor": {
                            "command": "Copy-Item \"#{exe_file_path}\" -Destination \"C:\\Users\\$env:UserName\" -Force\nnetsh advfirewall firewall add rule name=\"Atomic Test\" dir=in action=allow program=\"C:\\Users\\$env:UserName\\AtomicTest.exe\" enable=yes\n",
                            "cleanup_command": "netsh advfirewall firewall delete rule name=\"Atomic Test\" | Out-Null\nRemove-Item C:\\Users\\$env:UserName\\AtomicTest.exe -ErrorAction Ignore\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Stop/Start UFW firewall",
                        "auto_generated_guid": "fe135572-edcd-49a2-afe6-1d39521c5a9a",
                        "description": "Stop the Uncomplicated Firewall (UFW) if installed.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if ufw is installed on the machine.\n",
                                "prereq_command": "if [ ! -x \"$(command -v ufw)\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\nif echo \"$(ufw status)\" |grep -q \"inactive\"; then echo -e \"\\n***** ufw inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "ufw disable\n",
                            "cleanup_command": "ufw enable\nufw status verbose\n"
                        }
                    },
                    {
                        "name": "Stop/Start Packet Filter",
                        "auto_generated_guid": "0ca82ed1-0a94-4774-9a9a-a2c83a8022b7",
                        "description": "Stop the Packet Filter if installed.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if pfctl is installed on the machine.\n",
                                "prereq_command": "if [ ! -x \"$(command -v pfctl)\" ]; then echo -e \"\\n***** PF NOT installed *****\\n\"; exit 1; fi\nif [ \"$(kldstat -n pf)\" = \"\" ]; then echo -e \"\\n***** PF inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "service pf stop\nservice pf disable\n",
                            "cleanup_command": "service pf enable\nservice pf start\nservice pf status\n"
                        }
                    },
                    {
                        "name": "Stop/Start UFW firewall systemctl",
                        "auto_generated_guid": "9fd99609-1854-4f3c-b47b-97d9a5972bd1",
                        "description": "Stop the Uncomplicated Firewall (UFW) if installed, using systemctl. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if systemctl and ufw is installed on the machine.\n",
                                "prereq_command": "if [ ! -x \"$(command -v systemctl)\" ]; then echo -e \"\\n***** systemctl NOT installed *****\\n\"; exit 1; fi\nif [ ! -x \"$(command -v ufw)\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\nif echo \"$(ufw status)\" |grep -q \"inactive\"; then echo -e \"\\n***** ufw inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "systemctl stop ufw\n",
                            "cleanup_command": "systemctl start ufw\nsystemctl status ufw\n"
                        }
                    },
                    {
                        "name": "Turn off UFW logging",
                        "auto_generated_guid": "8a95b832-2c2a-494d-9cb0-dc9dd97c8bad",
                        "description": "Turn off the Uncomplicated Firewall (UFW) logging. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if ufw is installed on the machine and enabled.\n",
                                "prereq_command": "if [ ! -x \"$(command -v ufw)\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\nif echo \"$(ufw status)\" |grep -q \"inactive\"; then echo -e \"\\n***** ufw inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "ufw logging off\n",
                            "cleanup_command": "ufw logging low\nufw status verbose\n"
                        }
                    },
                    {
                        "name": "Add and delete UFW firewall rules",
                        "auto_generated_guid": "b2563a4e-c4b8-429c-8d47-d5bcb227ba7a",
                        "description": "Add and delete a rule on the Uncomplicated Firewall (UFW) if installed and enabled. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if ufw is installed on the machine and enabled.\n",
                                "prereq_command": "if [ ! -x \"$(command -v ufw)\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\nif echo \"$(ufw status)\" |grep -q \"inactive\"; then echo -e \"\\n***** ufw inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "ufw prepend deny from 1.2.3.4\nufw status numbered\n",
                            "cleanup_command": "{ echo y; echo response; } | ufw delete 1\nufw status numbered\n"
                        }
                    },
                    {
                        "name": "Add and delete Packet Filter rules",
                        "auto_generated_guid": "8b23cae1-66c1-41c5-b79d-e095b6098b5b",
                        "description": "Add and delete a rule on the Packet Filter (PF) if installed and enabled. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if pf is installed on the machine and enabled.\n",
                                "prereq_command": "if [ ! -x \"$(command -v pfctl)\" ]; then echo -e \"\\n***** PF NOT installed *****\\n\"; exit 1; fi\nif [ \"$(kldstat -n pf)\" = \"\" ]; then echo -e \"\\n***** PF inactive *****\\n\"; exit 1; fi \n",
                                "get_prereq_command": "echo \"anchor pf-rules >> /etc/pf.conf\"\npfctl -f /etc/pf.conf\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "echo \"block in proto tcp from 1.2.3.4 to any\" | pfctl -a pf-rules -f -\npfctl -a pf-rules -s rules\n",
                            "cleanup_command": "pfctl -a pf-rules -F rules\nsed -i \"\" '/anchor pf-rules/d'\npfctl -f /etc/pf.conf\n"
                        }
                    },
                    {
                        "name": "Edit UFW firewall user.rules file",
                        "auto_generated_guid": "beaf815a-c883-4194-97e9-fdbbb2bbdd7c",
                        "description": "Edit the Uncomplicated Firewall (UFW) rules file /etc/ufw/user.rules.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if /etc/ufw/user.rules exists.\n",
                                "prereq_command": "if [ ! -f \"/etc/ufw/user.rules\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/user.rules\ngrep \"# THIS IS A COMMENT\" /etc/ufw/user.rules\n",
                            "cleanup_command": "sed -i 's/# THIS IS A COMMENT//g' /etc/ufw/user.rules\n"
                        }
                    },
                    {
                        "name": "Edit UFW firewall ufw.conf file",
                        "auto_generated_guid": "c1d8c4eb-88da-4927-ae97-c7c25893803b",
                        "description": "Edit the Uncomplicated Firewall (UFW) configuration file /etc/ufw/ufw.conf \nwhich controls if the firewall starts on boot and its logging level.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if /etc/ufw/ufw.conf exists.\n",
                                "prereq_command": "if [ ! -f \"/etc/ufw/ufw.conf\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/ufw.conf\ngrep \"# THIS IS A COMMENT\" /etc/ufw/ufw.conf\n",
                            "cleanup_command": "sed -i 's/# THIS IS A COMMENT//g' /etc/ufw/ufw.conf\ncat /etc/ufw/ufw.conf\n"
                        }
                    },
                    {
                        "name": "Edit UFW firewall sysctl.conf file",
                        "auto_generated_guid": "c4ae0701-88d3-4cd8-8bce-4801ed9f97e4",
                        "description": "Edit the Uncomplicated Firewall (UFW) configuration file for setting network \nvariables /etc/ufw/sysctl.conf.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if /etc/ufw/sysctl.conf exists.\n",
                                "prereq_command": "if [ ! -f \"/etc/ufw/sysctl.conf\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "echo \"# THIS IS A COMMENT\" >> /etc/ufw/sysctl.conf\ngrep \"# THIS IS A COMMENT\" /etc/ufw/sysctl.conf\n",
                            "cleanup_command": "sed -i 's/# THIS IS A COMMENT//g' /etc/ufw/sysctl.conf\ncat /etc/ufw/sysctl.conf\n"
                        }
                    },
                    {
                        "name": "Edit UFW firewall main configuration file",
                        "auto_generated_guid": "7b697ece-8270-46b5-bbc7-6b9e27081831",
                        "description": "Edit the Uncomplicated Firewall (UFW) main configuration file for setting \ndefault policies /etc/default/ufw.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if /etc/default/ufw exists.\n",
                                "prereq_command": "if [ ! -f \"/etc/default/ufw\" ]; then echo -e \"\\n***** ufw NOT installed *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "echo \"# THIS IS A COMMENT\" >> /etc/default/ufw\ngrep \"# THIS IS A COMMENT\" /etc/default/ufw\n",
                            "cleanup_command": "sed -i 's/# THIS IS A COMMENT//g' /etc/default/ufw\n"
                        }
                    },
                    {
                        "name": "Tail the UFW firewall log file",
                        "auto_generated_guid": "419cca0c-fa52-4572-b0d7-bc7c6f388a27",
                        "description": "Print  the last 10 lines of the Uncomplicated Firewall (UFW) log file \n/var/log/ufw.log.\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if /var/log/ufw.log exists.\n",
                                "prereq_command": "if [ ! -f \"/var/log/ufw.log\" ]; then echo -e \"\\n***** ufw NOT logging *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "tail /var/log/ufw.log\n",
                            "cleanup_command": ""
                        }
                    },
                    {
                        "name": "Disable iptables",
                        "auto_generated_guid": "7784c64e-ed0b-4b65-bf63-c86db229fd56",
                        "description": "Some Linux systems may not activate ufw, but use iptables for firewall rules instead. (ufw works on top of iptables.) \nAttackers cannot directly disable iptables, as it is not implemented as a service like ufw. But they can flush all iptables \nrules, which in fact \"disable\" iptables. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if iptables is installed on the machine.\n",
                                "prereq_command": "if [ ! -x \"$(command -v iptables)\" ]; then echo -e \"\\n***** iptables NOT installed *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "echo \"\"\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "iptables-save > /tmp/iptables.rules\niptables -F\n",
                            "cleanup_command": "iptables-restore < /tmp/iptables.rules\n"
                        }
                    },
                    {
                        "name": "Modify/delete iptables firewall rules",
                        "auto_generated_guid": "899a7fb5-d197-4951-8614-f19ac4a73ad4",
                        "description": "Instead of completely \"disabling\" iptables, adversaries may choose to delete a certain rule, which, for example, blocks data exfiltration via ftp.\nBy doing so, they may cause less noise to avoid detection. \n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "dependency_executor_name": "sh",
                        "dependencies": [
                            {
                                "description": "Check if iptables is installed on the machine.\n",
                                "prereq_command": "if [ ! -x \"$(command -v iptables)\" ]; then echo -e \"\\n***** iptables NOT installed *****\\n\"; exit 1; fi\nif ! echo \"$(iptables -L)\" | grep -q \"DROP .*dpt:ftp\"; then echo -e \"\\n***** this firewall rule is NOT activated *****\\n***** activate it by executing \\\"iptables -A OUTPUT -p tcp --dport 21 -j DROP\\\" *****\\n\"; exit 1; fi\n",
                                "get_prereq_command": "iptables-save > /tmp/iptables.rules\nif echo \"$(iptables -L)\" | grep -q \"DROP .*dpt:ftp\"; then echo \"Rule found\"; else echo \"Rule not found. Setting it...\"; iptables -A OUTPUT -p tcp --dport 21 -j DROP; fi\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "elevation_required": true,
                            "command": "iptables -D OUTPUT -p tcp --dport 21 -j DROP\n",
                            "cleanup_command": "iptables-restore < /tmp/iptables.rules\n"
                        }
                    },
                    {
                        "name": "LockBit Black - Unusual Windows firewall registry modification -cmd",
                        "auto_generated_guid": "a4651931-ebbb-4cde-9363-ddf3d66214cb",
                        "description": "An adversary tries to modify the windows firewall registry\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\" /v EnableFirewall /t REG_DWORD /d 0 /f\nreg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" /v EnableFirewall /t REG_DWORD /d 0 /f\n",
                            "cleanup_command": "reg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\" /v EnableFirewall /f >nul 2>&1\nreg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" /v EnableFirewall /f >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "LockBit Black - Unusual Windows firewall registry modification -Powershell",
                        "auto_generated_guid": "80b453d1-eec5-4144-bf08-613a6c3ffe12",
                        "description": "An adversary tries to modify the windows firewall registry.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "New-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\" -Name EnableFirewall -PropertyType DWORD -Value 0 -Force\nNew-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" -Name EnableFirewall -PropertyType DWORD -Value 0 -Force\n",
                            "cleanup_command": "Remove-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\"  -Name EnableFirewall -Force -ErrorAction Ignore\nRemove-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\" -Name EnableFirewall -Force -ErrorAction Ignore\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "Blackbit - Disable Windows Firewall using netsh firewall",
                        "auto_generated_guid": "91f348e6-3760-4997-a93b-2ceee7f254ee",
                        "description": "An adversary tries to modify the windows firewall configuration using the deprecated netsh firewall command (command still works).     \n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "executor": {
                            "command": "netsh firewall set opmode mode=disable\n",
                            "cleanup_command": "netsh firewall set opmode mode=enable >nul 2>&1\n",
                            "name": "command_prompt",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "ESXi - Disable Firewall via Esxcli",
                        "auto_generated_guid": "bac8a340-be64-4491-a0cc-0985cb227f5a",
                        "description": "Adversaries may disable the ESXI firewall via ESXCLI\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "vm_host": {
                                "description": "Specify the host name of the ESXi Server",
                                "type": "string",
                                "default": "atomic.local"
                            },
                            "plink_file": {
                                "description": "Path to Putty",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\plink.exe"
                            },
                            "username": {
                                "description": "username used to log into ESXi",
                                "type": "string",
                                "default": "root"
                            },
                            "password": {
                                "description": "password used to log into ESXI",
                                "type": "string",
                                "default": "n/a"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "The plink executable must be found in the ExternalPayloads folder.\n",
                                "prereq_command": "if (Test-Path \"#{plink_file}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://the.earth.li/~sgtatham/putty/latest/w64/plink.exe\" -OutFile \"#{plink_file}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "#{plink_file} -ssh #{vm_host} -l #{username} -pw #{password} -m PathToAtomicsFolder\\..\\atomics\\T1562.004\\src\\esxi_disable_firewall.txt\n",
                            "cleanup_command": "#{plink_file} -ssh #{vm_host} -l #{username} -pw #{password} -m PathToAtomicsFolder\\..\\atomics\\T1562.004\\src\\esxi_enable_firewall.txt\n",
                            "name": "command_prompt",
                            "elevation_required": false
                        }
                    },
                    {
                        "name": "Set a firewall rule using New-NetFirewallRule",
                        "auto_generated_guid": "94be7646-25f6-467e-af23-585fb13000c8",
                        "description": "This test will attempt to create a new inbound/outbound firewall rule using the New-NetFirewallRule commandlet.",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "direction": {
                                "description": "Direction can be Inbound or Outbound",
                                "type": "string",
                                "default": "Inbound"
                            },
                            "local_port": {
                                "description": "This is the local port you wish to test opening",
                                "type": "integer",
                                "default": 21
                            },
                            "protocol": {
                                "description": "This is the protocol",
                                "type": "string",
                                "default": "TCP"
                            },
                            "action": {
                                "description": "This is the action",
                                "type": "string",
                                "default": "allow"
                            }
                        },
                        "executor": {
                            "command": "New-NetFirewallRule -DisplayName \"New rule\" -Direction \"#{direction}\" -LocalPort \"#{local_port}\" -Protocol \"#{protocol}\" -Action \"#{action}\"",
                            "cleanup_command": "Remove-NetFirewallRule -DisplayName \"New rule\"",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    },
                    {
                        "name": "ESXi - Set Firewall to PASS Traffic",
                        "auto_generated_guid": "a67e8aea-ea7c-4c3b-9b1b-8c2957c3091d",
                        "description": "This test sets the default ESXi firewall action to PASS instead of DROP. This allows all incoming and outgoing traffic.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "vm_host": {
                                "description": "Specify the host name or IP of the ESXi server.",
                                "type": "string",
                                "default": "atomic.local"
                            },
                            "vm_user": {
                                "description": "Specify the privilege user account on the ESXi server.",
                                "type": "string",
                                "default": "root"
                            },
                            "vm_pass": {
                                "description": "Specify the privileged user's password.",
                                "type": "string",
                                "default": "password"
                            },
                            "plink_file": {
                                "description": "Path to Plink",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\plink.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "The plink executable must be found in the ExternalPayloads folder.\n",
                                "prereq_command": "if (Test-Path \"#{plink_file}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://the.earth.li/~sgtatham/putty/latest/w64/plink.exe\" -OutFile \"#{plink_file}\"\n"
                            }
                        ],
                        "executor": {
                            "command": "echo \"\" | \"#{plink_file}\" -batch \"#{vm_host}\" -ssh -l #{vm_user} -pw \"#{vm_pass}\" \"esxcli network firewall set --default-action true\"\n",
                            "cleanup_command": "echo \"\" | \"#{plink_file}\" -batch \"#{vm_host}\" -ssh -l #{vm_user} -pw \"#{vm_pass}\" \"esxcli network firewall set --default-action false\"\n",
                            "name": "command_prompt",
                            "elevation_required": false
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 16:43:45"
}