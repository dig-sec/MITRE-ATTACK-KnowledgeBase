{
    "id": "T1070.006",
    "name": "Timestomp",
    "description": "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\nTimestomping may be used along with file name [Masquerading](T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Defense Evasion",
    "data_sources": "File: File Modification, File: File Metadata",
    "detection": "Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.",
    "url": "https://attack.mitre.org/techniques/T1070/006",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                    "b3cec4e7-6901-4b0d-a02d-8ab2d8eb818b",
                    "47f2d673-ca62-47e9-929b-1b0be9657611",
                    "faa031b5-21ed-4e02-8881-2591f98d82ed",
                    "558eebe5-f2ba-4104-b339-36f7902bcc1a",
                    "c6438007-e081-42ce-9483-b067fbef33c3",
                    "31545105-3444-4584-bebf-c466353230d2",
                    "88c0f9d8-30a8-4120-bb6b-ebb54abcf2a0"
                ],
                "lookup_results": [
                    {
                        "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                        "lookup_data": {
                            "description": "OSINT - Kobalos â€“ A complex Linux threat to high performance computing infrastructure",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/2ebc21a4-5635-4a7d-9553-ec5f58be0ee6.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1612271360",
                            "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b3cec4e7-6901-4b0d-a02d-8ab2d8eb818b",
                        "lookup_data": {
                            "description": "Detect file time attribute change to hide new or changes to existing files.",
                            "raw": "author: Igor Fits, oscd.community\ndate: 2020/10/15\ndescription: Detect file time attribute change to hide new or changes to existing\n  files.\ndetection:\n  condition: execve and touch and selection2\n  execve:\n    type: EXECVE\n  selection2:\n  - -t\n  - -acmr\n  - -d\n  - -r\n  touch:\n  - touch\nfalsepositives:\n- Unknown\nid: b3cec4e7-6901-4b0d-a02d-8ab2d8eb818b\nlevel: medium\nlogsource:\n  product: linux\n  service: auditd\nmodified: 2022/11/28\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.006/T1070.006.md\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1070.006\ntitle: File Time Attribute Change - Linux\n",
                            "sigma:id": "b3cec4e7-6901-4b0d-a02d-8ab2d8eb818b",
                            "title": "File Time Attribute Change - Linux",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "47f2d673-ca62-47e9-929b-1b0be9657611",
                        "lookup_data": {
                            "mitre-attack-id": "T1070.006",
                            "mitre-cti:description": "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",
                            "mitre-cti:name": "Timestomp",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['Romain Dumont, ESET'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611', 'type': 'attack-pattern', 'created': '2020-01-31T12:42:44.103Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1070.006', 'url': 'https://attack.mitre.org/techniques/T1070/006'}, {'url': 'http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html', 'description': 'Carvey, H. (2013, July 23). HowTo: Determine/Detect the use of Anti-Forensics Techniques. Retrieved June 3, 2016.', 'source_name': 'WindowsIR Anti-Forensic Techniques'}], 'modified': '2020-03-29T21:39:46.724Z', 'name': 'Timestomp', 'description': 'Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'defense-evasion'}], 'x_mitre_detection': 'Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['File: File Modification', 'File: File Metadata'], 'x_mitre_defense_bypassed': ['Host forensic analysis'], 'x_mitre_permissions_required': ['root', 'SYSTEM', 'User']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "faa031b5-21ed-4e02-8881-2591f98d82ed",
                        "lookup_data": {
                            "description": "Detect scenarios where a potentially unauthorized application or user is modifying the system time.",
                            "raw": "author: '@neu5ron'\ndate: 2019/02/05\ndescription: Detect scenarios where a potentially unauthorized application or user\n  is modifying the system time.\ndetection:\n  condition: selection and not 1 of filter*\n  filter1:\n    ProcessName:\n    - C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe\n    - C:\\Windows\\System32\\VBoxService.exe\n    - C:\\Windows\\System32\\oobe\\msoobe.exe\n  filter2:\n    ProcessName: C:\\Windows\\System32\\svchost.exe\n    SubjectUserSid: S-1-5-19\n  selection:\n    EventID: 4616\nfalsepositives:\n- HyperV or other virtualization technologies with binary not listed in filter portion\n  of detection\nid: faa031b5-21ed-4e02-8881-2591f98d82ed\nlevel: low\nlogsource:\n  definition: 'Requirements: Audit Policy : System > Audit Security State Change,\n    Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced\n    Audit Policy Configuration\\Audit Policies\\System\\Audit Security State Change'\n  product: windows\n  service: security\nmodified: 2022/08/03\nreferences:\n- Private Cuckoo Sandbox (from many years ago, no longer have hash, NDA as well)\n- Live environment caused by malware\n- https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4616\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1070.006\ntitle: Unauthorized System Time Modification\n",
                            "sigma:id": "faa031b5-21ed-4e02-8881-2591f98d82ed",
                            "title": "Unauthorized System Time Modification",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "558eebe5-f2ba-4104-b339-36f7902bcc1a",
                        "lookup_data": {
                            "description": "Attackers may change the file creation time of a backdoor to make it look like it was installed with the operating system.\nNote that many processes legitimately change the creation time of a file; it does not necessarily indicate malicious activity.\n",
                            "raw": "author: frack113, Florian Roth\ndate: 2022/08/12\ndescription: 'Attackers may change the file creation time of a backdoor to make it\n  look like it was installed with the operating system.\n\n  Note that many processes legitimately change the creation time of a file; it does\n  not necessarily indicate malicious activity.\n\n  '\ndetection:\n  condition: (( selection1 and not filter1 ) or ( selection2 and not filter2 )) and\n    not 1 of gen_filter*\n  filter1:\n    CreationUtcTime|startswith: '2022'\n  filter2:\n    CreationUtcTime|startswith: '202'\n  gen_filter_tiworker:\n    Image|endswith: \\TiWorker.exe\n    Image|startswith: C:\\WINDOWS\\\n    TargetFilename|endswith: .cab\n  gen_filter_updates:\n  - Image:\n    - C:\\Windows\\system32\\ProvTool.exe\n    - C:\\Windows\\System32\\usocoreworker.exe\n    - C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe\n  - TargetFilename|startswith: C:\\ProgramData\\USOPrivate\\UpdateStore\\\n  - TargetFilename|endswith:\n    - .tmp\n    - .temp\n  selection1:\n    PreviousCreationUtcTime|startswith: '2022'\n  selection2:\n    PreviousCreationUtcTime|startswith: '202'\nfalsepositives:\n- Changes made to or by the local NTP service\nid: 558eebe5-f2ba-4104-b339-36f7902bcc1a\nlevel: high\nlogsource:\n  category: file_change\n  product: windows\nmodified: 2022/10/25\nreferences:\n- https://www.inversecos.com/2022/04/defence-evasion-technique-timestomping.html\nstatus: experimental\ntags:\n- attack.t1070.006\n- attack.defense_evasion\ntitle: File Creation Date Changed to Another Year\n",
                            "sigma:id": "558eebe5-f2ba-4104-b339-36f7902bcc1a",
                            "title": "File Creation Date Changed to Another Year",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "c6438007-e081-42ce-9483-b067fbef33c3",
                        "lookup_data": {
                            "description": "Adversaries may modify file time attributes to hide new or changes to existing files.\nTimestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder.\n",
                            "raw": "author: frack113\ndate: 2021/08/03\ndescription: 'Adversaries may modify file time attributes to hide new or changes to\n  existing files.\n\n  Timestomping is a technique that modifies the timestamps of a file (the modify,\n  access, create, and change times), often to mimic files that are in the same folder.\n\n  '\ndetection:\n  condition: selection_ioc\n  selection_ioc:\n    ScriptBlockText|contains:\n    - .CreationTime =\n    - .LastWriteTime =\n    - .LastAccessTime =\n    - '[IO.File]::SetCreationTime'\n    - '[IO.File]::SetLastAccessTime'\n    - '[IO.File]::SetLastWriteTime'\nfalsepositives:\n- Legitimate admin script\nid: c6438007-e081-42ce-9483-b067fbef33c3\nlevel: medium\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nmodified: 2022/12/25\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.006/T1070.006.md\n- https://www.offensive-security.com/metasploit-unleashed/timestomp/\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1070.006\ntitle: Powershell Timestomp\n",
                            "sigma:id": "c6438007-e081-42ce-9483-b067fbef33c3",
                            "title": "Powershell Timestomp",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "31545105-3444-4584-bebf-c466353230d2",
                        "lookup_data": {
                            "description": "Detects usage of the \"touch\" process in service file.",
                            "raw": "author: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/01/11\ndescription: Detects usage of the \"touch\" process in service file.\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains: ' -t '\n    CommandLine|endswith: .service\n    Image|endswith: /touch\nfalsepositives:\n- Admin changing date of files.\nid: 31545105-3444-4584-bebf-c466353230d2\nlevel: medium\nlogsource:\n  category: process_creation\n  product: linux\nreferences:\n- https://blogs.blackberry.com/\n- https://twitter.com/Joseliyo_Jstnk/status/1620131033474822144\nstatus: experimental\ntags:\n- attack.defense_evasion\n- attack.t1070.006\ntitle: Touch Suspicious Service File\n",
                            "sigma:id": "31545105-3444-4584-bebf-c466353230d2",
                            "title": "Touch Suspicious Service File",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "88c0f9d8-30a8-4120-bb6b-ebb54abcf2a0",
                        "lookup_data": {
                            "description": "Detect file time attribute change to hide new or changes to existing files",
                            "raw": "author: Igor Fits, Mikhail Larin, oscd.community\ndate: 2020/10/19\ndescription: Detect file time attribute change to hide new or changes to existing\n  files\ndetection:\n  condition: selection\n  selection:\n    CommandLine|contains:\n    - -t\n    - -acmr\n    - -d\n    - -r\n    Image|endswith: /touch\nfalsepositives:\n- Unknown\nid: 88c0f9d8-30a8-4120-bb6b-ebb54abcf2a0\nlevel: medium\nlogsource:\n  category: process_creation\n  product: macos\nmodified: 2022/01/12\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.006/T1070.006.md\nstatus: test\ntags:\n- attack.defense_evasion\n- attack.t1070.006\ntitle: File Time Attribute Change\n",
                            "sigma:id": "88c0f9d8-30a8-4120-bb6b-ebb54abcf2a0",
                            "title": "File Time Attribute Change",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1070.006",
                "display_name": "Indicator Removal on Host: Timestomp",
                "atomic_tests": [
                    {
                        "name": "Set a file's access timestamp",
                        "auto_generated_guid": "5f9113d5-ed75-47ed-ba23-ea3573d05810",
                        "description": "Stomps on the access timestamp of a file\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "target_filename": {
                                "description": "Path of file that we are going to stomp on last access time",
                                "type": "path",
                                "default": "/tmp/T1070.006-access.txt"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "The file must exist in order to be timestomped\n",
                                "prereq_command": "test -e #{target_filename} && exit 0 || exit 1\n",
                                "get_prereq_command": "echo 'T1070.006 file access timestomp test' > #{target_filename}\n"
                            }
                        ],
                        "executor": {
                            "command": "touch -a -t 197001010000.00 #{target_filename}\n",
                            "cleanup_command": "rm -f #{target_filename}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Set a file's modification timestamp",
                        "auto_generated_guid": "20ef1523-8758-4898-b5a2-d026cc3d2c52",
                        "description": "Stomps on the modification timestamp of a file\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "target_filename": {
                                "description": "Path of file that we are going to stomp on last access time",
                                "type": "path",
                                "default": "/tmp/T1070.006-modification.txt"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "The file must exist in order to be timestomped\n",
                                "prereq_command": "test -e #{target_filename} && exit 0 || exit 1\n",
                                "get_prereq_command": "echo 'T1070.006 file modification timestomp test' > #{target_filename}\n"
                            }
                        ],
                        "executor": {
                            "command": "touch -m -t 197001010000.00 #{target_filename}\n",
                            "cleanup_command": "rm -f #{target_filename}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Set a file's creation timestamp",
                        "auto_generated_guid": "8164a4a6-f99c-4661-ac4f-80f5e4e78d2b",
                        "description": "Stomps on the create timestamp of a file\n\nSetting the creation timestamp requires changing the system clock and reverting.\nSudo or root privileges are required to change date. Use with caution.\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "target_filename": {
                                "description": "Path of file that we are going to stomp on last access time",
                                "type": "path",
                                "default": "/tmp/T1070.006-creation.txt"
                            }
                        },
                        "executor": {
                            "elevation_required": true,
                            "command": "NOW=$(date +%m%d%H%M%Y)\ndate 010100001971\ntouch #{target_filename}\ndate \"$NOW\"\nstat #{target_filename}\n",
                            "cleanup_command": "rm -f #{target_filename}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Modify file timestamps using reference file",
                        "auto_generated_guid": "631ea661-d661-44b0-abdb-7a7f3fc08e50",
                        "description": "Modifies the `modify` and `access` timestamps using the timestamps of a specified reference file.\n\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n",
                        "supported_platforms": [
                            "linux",
                            "macos"
                        ],
                        "input_arguments": {
                            "target_file_path": {
                                "description": "Path of file to modify timestamps of",
                                "type": "path",
                                "default": "/tmp/T1070.006-reference.txt"
                            },
                            "reference_file_path": {
                                "description": "Path of reference file to read timestamps from",
                                "type": "path",
                                "default": "/bin/sh"
                            }
                        },
                        "executor": {
                            "command": "touch #{target_file_path}\ntouch -acmr #{reference_file_path} #{target_file_path}\n",
                            "cleanup_command": "rm -f #{target_file_path}\n",
                            "name": "sh"
                        }
                    },
                    {
                        "name": "Windows - Modify file creation timestamp with PowerShell",
                        "auto_generated_guid": "b3b2c408-2ff0-4a33-b89b-1cb46a9e6a9c",
                        "description": "Modifies the file creation timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Created time is the year 1970.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target_date_time": {
                                "description": "Date/time to replace original timestamps with",
                                "type": "string",
                                "default": "01/01/1970 00:00:00"
                            },
                            "file_path": {
                                "description": "Path of file to change creation timestamp",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "A file must exist at the path (#{file_path}) to change the creation time on\n",
                                "prereq_command": "if (Test-Path \"#{file_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Path \"#{file_path}\" -Force | Out-Null\nSet-Content \"#{file_path}\" -Value \"T1551.006 Timestomp\" -Force | Out-Null\n"
                            }
                        ],
                        "executor": {
                            "command": "Get-ChildItem \"#{file_path}\" | % { $_.CreationTime = \"#{target_date_time}\" }\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Windows - Modify file last modified timestamp with PowerShell",
                        "auto_generated_guid": "f8f6634d-93e1-4238-8510-f8a90a20dcf2",
                        "description": "Modifies the file last modified timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Modified time is the year 1970.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target_date_time": {
                                "description": "Date/time to replace original timestamps with",
                                "type": "string",
                                "default": "01/01/1970 00:00:00"
                            },
                            "file_path": {
                                "description": "Path of file to change modified timestamp",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "A file must exist at the path (#{file_path}) to change the modified time on\n",
                                "prereq_command": "if (Test-Path \"#{file_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Path \"#{file_path}\" -Force | Out-Null\nSet-Content \"#{file_path}\" -Value \"T1551.006 Timestomp\" -Force | Out-Null\n"
                            }
                        ],
                        "executor": {
                            "command": "Get-ChildItem \"#{file_path}\" | % { $_.LastWriteTime = \"#{target_date_time}\" }\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Windows - Modify file last access timestamp with PowerShell",
                        "auto_generated_guid": "da627f63-b9bd-4431-b6f8-c5b44d061a62",
                        "description": "Modifies the last access timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Accessed time is the year 1970.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "target_date_time": {
                                "description": "Date/time to replace original timestamps with",
                                "type": "string",
                                "default": "01/01/1970 00:00:00"
                            },
                            "file_path": {
                                "description": "Path of file to change last access timestamp",
                                "type": "path",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\T1551.006_timestomp.txt"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "A file must exist at the path (\"#{file_path}\") to change the last access time on\n",
                                "prereq_command": "if (Test-Path \"#{file_path}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Path \"#{file_path}\" -Force | Out-Null\nSet-Content \"#{file_path}\" -Value \"T1551.006 Timestomp\" -Force | Out-Null\n"
                            }
                        ],
                        "executor": {
                            "command": "Get-ChildItem \"#{file_path}\" | % { $_.LastAccessTime = \"#{target_date_time}\" }\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "Windows - Timestomp a File",
                        "auto_generated_guid": "d7512c33-3a75-4806-9893-69abc3ccdd43",
                        "description": "Timestomp kxwn.lock.\n\nSuccessful execution will include the placement of kxwn.lock in #{file_path} and execution of timestomp.ps1 to modify the time of the .lock file. \n\n[Mitre ATT&CK Evals](https://github.com/mitre-attack/attack-arsenal/blob/master/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/defensive-evasion/4a2ad84e-a93a-4b2e-b1f0-c354d6a41278.yml)\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "file_path": {
                                "description": "File path for timestomp payload",
                                "type": "string",
                                "default": "PathToAtomicsFolder\\..\\ExternalPayloads"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "timestomp.ps1 must be present in #{file_path}.\n",
                                "prereq_command": "if (Test-Path \"#{file_path}\\timestomp.ps1\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "Invoke-WebRequest \"https://raw.githubusercontent.com/mitre-attack/attack-arsenal/bc0ba1d88d026396939b6816de608cb279bfd489/adversary_emulation/APT29/CALDERA_DIY/evals/payloads/timestomp.ps1\" -OutFile \"#{file_path}\\timestomp.ps1\"\n"
                            },
                            {
                                "description": "kxwn.lock must be present in #{file_path}.\n",
                                "prereq_command": "if (Test-Path -path \"#{file_path}\\kxwn.lock\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Path \"#{file_path}\\kxwn.lock\" -ItemType File\n"
                            }
                        ],
                        "executor": {
                            "command": "import-module \"#{file_path}\\timestomp.ps1\"\ntimestomp -dest \"#{file_path}\\kxwn.lock\"\n",
                            "name": "powershell"
                        }
                    },
                    {
                        "name": "MacOS - Timestomp Date Modified",
                        "auto_generated_guid": "87fffff4-d371-4057-a539-e3b24c37e564",
                        "description": "Stomps on the modification timestamp of a file using MacOS's SetFile utility\n",
                        "supported_platforms": [
                            "macos"
                        ],
                        "input_arguments": {
                            "target_filename": {
                                "description": "Path of file that we are going to stomp on last modified time\n",
                                "type": "path",
                                "default": "/tmp/T1070.006-modified.txt"
                            },
                            "target_date": {
                                "description": "Date to replace original timestamps with",
                                "type": "string",
                                "default": "01/01/1970"
                            }
                        },
                        "dependencies": [
                            {
                                "description": "The file must exist in order to be timestomped\n",
                                "prereq_command": "test -e #{target_filename} && exit 0 || exit 1\n",
                                "get_prereq_command": "echo 'T1070.006 MacOS file modified timestomp test' > #{target_filename}\n"
                            }
                        ],
                        "executor": {
                            "name": "sh",
                            "command": "SetFile -m #{target_date} #{target_filename}\n",
                            "cleanup_command": "rm -f #{target_filename}\n"
                        }
                    },
                    {
                        "name": "Event Log Manipulations- Time slipping via Powershell",
                        "auto_generated_guid": "7bcf83bf-f5ef-425c-9d9a-71618ad9ed12",
                        "description": "Changes the system time on the computer to a time that you specify. It involves altering the systemâ€™s clock or adjusting the dates of files, affecting timestamp integrity within Event Logs. This technique can disrupt the sequence of logged events, complicating incident analysis and forensics. \nReference - \nhttps://detect.fyi/event-log-manipulations-1-time-slipping-55bf95631c40\nhttps://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/set-date?view=powershell-7.4",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "days_to_modify": {
                                "description": "Value to which system time will update",
                                "type": "string",
                                "default": "3"
                            }
                        },
                        "executor": {
                            "command": "try{ \n  Set-Date -Date (Get-Date).AddDays(#{days_to_modify})\n  Add-Content \"$env:APPDATA\\slipDays.bak\" #{days_to_modify}\n}\ncatch {exit 1}\n",
                            "cleanup_command": "if(Test-Path \"$env:APPDATA\\slipDays.bak\" ){\n  foreach($line in (get-content $env:APPDATA\\slipDays.bak)){\n    Set-Date -Date (Get-Date).AddDays(-$line)\n  }\n  rm \"$env:APPDATA\\slipDays.bak\"\n}\n",
                            "name": "powershell",
                            "elevation_required": true
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 12:21:06"
}